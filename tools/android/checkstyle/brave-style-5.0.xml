<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN" "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--
  See installation instructions: https://sites.google.com/a/chromium.org/dev/developers/checkstyle

  This is a copy of upstream's tools/android/checkstyle/chromium-style-5.0.xml with
  difference in severity for all checks except RedundantImport/UnusedImports.
  This file will be removed when all style checks at Brave java files will be fixed.
-->
<module name="Checker">
  <property name="severity" value="warning"/>
  <property name="charset" value="UTF-8"/>
  <module name="SuppressionFilter">
    <property name="file" value="tools/android/checkstyle/suppressions.xml"/>
  </module>
  <module name="SuppressWarningsFilter"/>
  <module name="TreeWalker">
    <module name="SuppressWarningsHolder"/>
    <module name="AvoidStarImport">
      <property name="severity" value="warning"/>
    </module>
    <module name="IllegalCatch">
      <property name="severity" value="info"/>
    </module>
    <module name="ModifierOrder">
      <message key="mod.order" value="&quot;{0}&quot; modifier out of order with the JLS suggestions. The correct order: public protected private abstract default static final transient volatile synchronized native strictfp. See https://crbug.com/1003711 for details."/>
      <property name="severity" value="warning"/>
    </module>
    <module name="RedundantImport">
      <message key="import.redundant" value="Redundant import: {0}."/>
      <property name="severity" value="error"/>
    </module>
    <module name="UnusedImports">
      <message key="import.unused" value="Unused import: {0}."/>
      <property name="severity" value="error"/>
      <property name="processJavadoc" value="true"/>
    </module>
    <module name="JavadocType">
      <property name="severity" value="warning"/>
      <property name="tokens" value="INTERFACE_DEF, CLASS_DEF"/>
      <property name="scope" value="public"/>
      <property name="allowedAnnotations" value="NativeMethods"/>
      <message key="javadoc.missing" value="Public classes and interfaces require JavaDoc comments."/>
    </module>
    <module name="JavadocMethod">
      <property name="severity" value="info"/>
      <property name="accessModifiers" value="public"/>
      <property name="allowMissingParamTags" value="true"/>
      <property name="allowMissingReturnTag" value="true"/>
    </module>
    <module name="PackageName">
      <property name="severity" value="warning"/>
      <property name="format" value="^[a-z]+(\.[a-z][a-z0-9_]{1,})*$"/>
    </module>
    <module name="SimplifyBooleanExpression">
      <property name="severity" value="warning"/>
    </module>
    <module name="SimplifyBooleanReturn">
      <property name="severity" value="warning"/>
    </module>
    <module name="TypeName">
      <property name="severity" value="warning"/>
    </module>
    <module name="ConstantName">
      <property name="severity" value="warning"/>
      <property name="format" value="^([A-Z][A-Z0-9]*(_[A-Z0-9]+)*)|(s[A-Z][a-zA-Z0-9]*)$"/>
      <message key="name.invalidPattern" value="Static final field names must either be all caps (e.g. int HEIGHT_PX) for 'true' constants, or start with s (e.g. AtomicInteger sNextId or Runnable sSuspendTask) for fields with mutable state or that don't 'feel' like constants."/>
    </module>
    <!-- Non-public, non-static field names start with m. -->
    <module name="MemberName">
        <property name="severity" value="warning"/>
        <property name="format" value="^m[A-Z][a-zA-Z0-9]*$"/>
        <property name="applyToPublic" value="false"/>
        <message key="name.invalidPattern" value="Non-public, non-static field names start with m."/>
    </module>
    <!-- Static field names start with s. -->
    <module name="StaticVariableName">
        <property name="severity" value="warning"/>
        <property name="format" value="^s[A-Z][a-zA-Z0-9]*$"/>
        <property name="applyToPublic" value="false"/>
        <message key="name.invalidPattern" value="Static field names start with s."/>
    </module>
    <module name="MethodName">
        <property name="id" value="MethodNameCheck"/>
        <property name="severity" value="warning"/>
        <property name="format" value="^(([a-z][a-zA-Z0-9_]*)|(__constructor__))$"/>
        <message key="name.invalidPattern" value="Method names should start with a lower case letter (e.g. getWidth())"/>
    </module>
    <module name="ParameterName">
      <property name="severity" value="warning"/>
    </module>
    <module name="LocalFinalVariableName">
      <property name="severity" value="warning"/>
      <property name="format" value="^m|s|((([ms][a-z0-9])|([a-ln-rt-z]))[a-zA-Z0-9]*)$"/>
      <message key="name.invalidPattern" value="Local variables should be camel-cased (e.g. int minWidth = 4)."/>
    </module>
    <module name="LocalVariableName">
      <property name="severity" value="warning"/>
      <property name="format" value="^m|s|((([ms][a-z0-9])|([a-ln-rt-z]))[a-zA-Z0-9]*)$"/>
      <message key="name.invalidPattern" value="Local variables should be camel-cased (e.g. int minWidth = 4)."/>
    </module>
    <module name="FallThrough">
      <property name="severity" value="warning"/>
      <property name="reliefPattern" value=".*"/>
    </module>
    <module name="NoFinalizer">
      <property name="severity" value="info"/>
    </module>
    <module name="NeedBraces">
      <property name="severity" value="warning"/>
      <property name="allowSingleLineStatement" value="true"/>
    </module>
    <module name="RegexpSinglelineJava">
      <property name="id" value="StringBufferCheck"/>
      <property name="severity" value="warning"/>
      <property name="format" value="StringBuffer"/>
      <property name="ignoreComments" value="true"/>
      <property name="message" value="Avoid StringBuffer; use StringBuilder instead, which is faster (it's not thread-safe, but this is almost never needed)"/>
    </module>
    <module name="RegexpSinglelineJava">
      <property name="id" value="AlertDialogCheck"/>
      <property name="severity" value="warning"/>
      <property name="format" value="android\.app\.AlertDialog"/>
      <property name="ignoreComments" value="true"/>
      <property name="message" value="Avoid android.app.AlertDialog; if possible, use android.support.v7.app.AlertDialog instead, which has a Material look on all devices. (Some parts of the codebase canâ€™t depend on the support library, in which case android.app.AlertDialog is the only option)"/>
    </module>
    <module name="RegexpSinglelineJava">
      <property name="id" value="UseSharedPreferencesManagerFromChromeCheck"/>
      <property name="severity" value="warning"/>
      <property name="format" value="(getAppSharedPreferences|getDefaultSharedPreferences)"/>
      <property name="ignoreComments" value="true"/>
      <property name="message" value="Use SharedPreferencesManager instead to access app-wide SharedPreferences from //src/chrome."/>
    </module>
    <module name="RegexpSinglelineJava">
      <property name="id" value="DefaultSharedPreferencesCheck"/>
      <property name="severity" value="warning"/>
      <property name="format" value="getDefaultSharedPreferences"/>
      <property name="ignoreComments" value="true"/>
      <property name="message" value="Use ContextUtils.getAppSharedPreferences() instead to access app-wide SharedPreferences."/>
    </module>
    <module name="RegexpSinglelineJava">
      <property name="id" value="ConcurrentHashMapCheck"/>
      <property name="severity" value="warning"/>
      <property name="format" value="ConcurrentHashMap"/>
      <property name="ignoreComments" value="true"/>
      <property name="message" value="ConcurrentHashMap has a bug on some Android versions. Use Collections.synchronizedMap() instead (crbug.com/905903)."/>
    </module>
    <module name="RegexpSinglelineJava">
      <property name="id" value="StrictModeContextIgnoredCheck"/>
      <property name="severity" value="warning"/>
      <property name="format" value="try .*StrictModeContext (?!ignored).*="/>
      <property name="ignoreComments" value="true"/>
      <property name="message" value="Please name the StrictModeContext variable &quot;ignored&quot; (crbug.com/767058#c4)."/>
    </module>
    <module name="RegexpSinglelineJava">
      <!-- Tests are also allowed to use System.exit if need be, please add dirs to tools/android/checkstyle/suppressions.xml -->
      <property name="id" value="SystemExitCheck"/>
      <property name="severity" value="warning"/>
      <property name="format" value="System\.exit\("/>
      <property name="ignoreComments" value="true"/>
      <property name="message" value="Throw an exception instead of calling System#exit (crbug.com/1000651)."/>
    </module>
    <module name="RegexpSinglelineJava">
      <property name="id" value="AndroidButtonWidgetCheck"/>
      <property name="severity" value="warning"/>
      <property name="format" value="extends\ Button|extends\ AppCompatButton"/>
      <property name="ignoreComments" value="true"/>
      <property name="message" value="Use org.chromium.ui.widget.ButtonCompat instead of Button and AppCompatButton if possible; ButtonCompat is a Material-styled button with a customizable background color. On L devices, this is a true Material button. On earlier devices, the button is similar but lacks ripples and a shadow. (crbug.com/775198)"/>
    </module>
    <module name="RegexpSinglelineJava">
      <property name="id" value="SetTextColorAndSetTextSizeCheck"/>
      <property name="severity" value="warning"/>
      <property name="format" value="\.setTextColor\(|\.setTextSize\("/>
      <property name="ignoreComments" value="true"/>
      <property name="message" value="If possible, please use #setTextAppearance to set one of the pre-defined text appearance styles in src/ui/android/java/res/values-v17/styles.xml, instead of using #setTextColor or #setTextSize. This will ensure that your programmatically set text styles stay in-sync with text styles used in the rest of Chrome. (crbug.com/775198)"/>
    </module>
    <module name="RegexpSinglelineJava">
      <property name="id" value="ActivityScenarioLaunch"/>
      <property name="severity" value="warning"/>
      <property name="format" value="ActivityScenario\.launch"/>
      <property name="ignoreComments" value="true"/>
      <property name="message" value="Launching an ActivityScenario manually is error prone for any test run in a batch. Failing to #close will cause the Activity to leak into the next test. Consider replacing with ActivityScenarioRule. (https://crbug.com/1338271)"/>
    </module>
    <module name="RegexpSinglelineJava">
      <property name="id" value="GuavaOptional"/>
      <property name="severity" value="warning"/>
      <property name="format" value="import\ com.google.common.base.Optional;"/>
      <property name="ignoreComments" value="true"/>
      <property name="message" value="Use java.util.Optional instead of com.google.common.base.Optional unless required to interact with external libraries."/>
    </module>
    <module name="RegexpSinglelineJava">
      <property name="id" value="CollectionSubclass"/>
      <property name="severity" value="warning"/>
      <!-- E.g., matches "new HashSet<>() {" -->
      <property name="format" value="new \w+(?:List|Set|Map)\b.*\{"/>
      <property name="ignoreComments" value="true"/>
      <property name="message" value="Subclassing collections is uncommon. If you are not doing so, please ignore. If you are subclassing in order to call add()/put(), use List.of() / Set.of() / Map.of() instead, or use multiple statements."/>
    </module>
  </module>
</module>
