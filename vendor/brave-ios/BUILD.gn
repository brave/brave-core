# Copyright (c) 2019 The Brave Authors. All rights reserved.
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

import("//build/config/ios/rules.gni")

config("internal_config") {
  visibility = [
    ":*",
    "//brave/test:*",
    "tests:*",
  ]

  cflags = [
    "-fobjc-weak",
    "-fobjc-abi-version=2",
    "-fobjc-legacy-dispatch",
    "-Wno-objc-property-synthesis",
    "-Wno-sign-compare",
  ]
  include_dirs = [
    ".",
    "Ads",
    "Ads/Generated",
    "Ledger",
    "Ledger/Generated",
    "Ledger/Data",
    "Ledger/Data/CoreDataGenerated/Model",
    "Ledger/Models",
    "Shared",
    "objc-gen",
    "$target_gen_dir",
  ]
}

group("brave-ios") {
  public_deps = [ ":brave_rewards_ios_framework" ]
}

group("brave_ios_tests") {
  testonly = true
  public_deps = [
    "tests:brave_rewards_ios_tests"
  ]
}

ios_framework_bundle("brave_rewards_ios_framework") {
  output_name = "BraveRewards"
  output_dir = root_out_dir

  info_plist = "Info.plist"

  configs += [ ":internal_config" ]
  configs += [ "//build/config/compiler:enable_arc" ]
  configs -= [ "//build/config/gcc:symbol_visibility_hidden" ]

  deps = [
    "//brave/vendor/bat-native-ledger",
    "//brave/vendor/bat-native-ads",
    "//url",
    ":resources",
    ":coredata",
    ":mojo_gen_wrappers",
  ]

  bundle_deps_filter = [ "//third_party/icu:icudata" ]

  sources = [
    "BATBraveRewards.h",
    "BATBraveRewards.m",
    "Ledger/BATBraveLedger.h",
    "Ledger/BATBraveLedger.mm",
    "Ledger/BATBraveLedgerObserver.h",
    "Ledger/BATBraveLedgerObserver.mm",
    "Ledger/Data/BATLedgerDatabase.h",
    "Ledger/Data/BATLedgerDatabase.mm",
    "Ledger/Data/DataController.h",
    "Ledger/Data/DataController.mm",
    "Ledger/Generated/NativeLedgerClientBridge.h",
    "Ledger/Generated/NativeLedgerClient.h",
    "Ledger/Generated/NativeLedgerClient.mm",
    "Ledger/Generated/Records.h",
    "Ledger/Generated/Records.mm",
    "Ledger/Models/BATRewardsNotification.h",
    "Ledger/Models/BATRewardsNotification.m",
    "Ledger/Models/BATPromotionSolution.h",
    "Ledger/Models/BATPromotionSolution.mm",
    "Ledger/Models/BATExternalWallet+DictionaryValue.h",
    "Ledger/Models/BATExternalWallet+DictionaryValue.mm",
    "Shared/BATCommonOperations.h",
    "Shared/BATCommonOperations.mm",
    "Shared/NSURL+Extensions.h",
    "Shared/NSURL+Extensions.mm",
    "Shared/RewardsLogStream.h",
    "Shared/RewardsLogStream.mm",
    "Shared/Logger.h",
    "Shared/Logger.mm",
    "Shared/RewardsLogger.h",
    "Shared/RewardsLogger.mm",
    "objc-gen/CppTransformations.h",
    "Ads/BATAdsNotification.h",
    "Ads/BATAdsNotification.mm",
    "Ads/BATBraveAds.h",
    "Ads/BATBraveAds.mm",
    "Ads/Generated/NativeAdsClientBridge.h",
    "Ads/Generated/NativeAdsClient.h",
    "Ads/Generated/NativeAdsClient.mm",
    "Ledger/Data/Model/CoreDataModels.h",
    "Ledger/Data/Model/ActivityInfo.h",
    "Ledger/Data/Model/ActivityInfo.m",
    "Ledger/Data/Model/ContributionInfo.h",
    "Ledger/Data/Model/ContributionInfo.m",
    "Ledger/Data/Model/MediaPublisherInfo.h",
    "Ledger/Data/Model/MediaPublisherInfo.m",
    "Ledger/Data/Model/PendingContribution.h",
    "Ledger/Data/Model/PendingContribution.m",
    "Ledger/Data/Model/PublisherInfo.h",
    "Ledger/Data/Model/PublisherInfo.m",
    "Ledger/Data/Model/RecurringDonation.h",
    "Ledger/Data/Model/RecurringDonation.m",
    "Ledger/Data/Model/ServerPublisherInfo.h",
    "Ledger/Data/Model/ServerPublisherInfo.m",
    "Ledger/Data/Model/ServerPublisherAmount.h",
    "Ledger/Data/Model/ServerPublisherAmount.m",
    "Ledger/Data/Model/ServerPublisherBanner.h",
    "Ledger/Data/Model/ServerPublisherBanner.m",
    "Ledger/Data/Model/ServerPublisherLink.h",
    "Ledger/Data/Model/ServerPublisherLink.m",
    "Ledger/Data/Model/ContributionQueue.h",
    "Ledger/Data/Model/ContributionQueue.m",
    "Ledger/Data/Model/ContributionPublisher.h",
    "Ledger/Data/Model/ContributionPublisher.m",
    "Ledger/Data/Model/Promotion.h",
    "Ledger/Data/Model/Promotion.m",
    "Ledger/Data/Model/PromotionCredentials.h",
    "Ledger/Data/Model/PromotionCredentials.m",
    "Ledger/Data/Model/UnblindedToken.h",
    "Ledger/Data/Model/UnblindedToken.m",
    "$target_gen_dir/ledger.mojom.objc.h",
    "$target_gen_dir/ledger.mojom.objc+private.h",
    "$target_gen_dir/ledger.mojom.objc.mm",
  ]

  public_headers = [
    "BraveRewards.h",
    "BATBraveRewards.h",
    "Ledger/BATBraveLedger.h",
    "Ledger/BATBraveLedgerObserver.h",
    "Ledger/Generated/Records.h",
    "Ledger/Generated/Enums.h",
    "Ledger/Models/BATRewardsNotification.h",
    "Ledger/Models/BATPromotionSolution.h",
    "Ads/BATBraveAds.h",
    "Ads/BATAdsNotification.h",
    "Shared/RewardsLogger.h",
    "$target_gen_dir/ledger.mojom.objc.h",
  ]

  libs = [
    "Foundation.framework",
    "UIKit.framework",
    "Security.framework",
    "CoreData.framework",
    "SystemConfiguration.framework",
    "Network.framework"
  ]
}

bundle_data("resources") {
  ads_dir = "//brave/vendor/bat-native-ads"
  ledger_dir = "//brave/vendor/bat-native-ledger"
  sources = [
    "$ads_dir/resources/bundle-schema.json",
    "$ads_dir/resources/catalog-schema.json",
    "$ads_dir/resources/sample_bundle.json",
    "$ads_dir/resources/user_models",
    "$ledger_dir/niceware/wordlist",
  ]
  outputs = [
    "{{bundle_resources_dir}}/{{source_file_part}}",
  ]
}

bundle_data("coredata") {
  sources = [
    "$root_gen_dir/Model.momd/Model.mom",
    "$root_gen_dir/Model.momd/VersionInfo.plist",
  ]

  outputs = [
    "{{bundle_resources_dir}}/Model.momd/{{source_file_part}}",
  ]

  public_deps = [
    ":compile_coredata"
  ]
}

action("compile_coredata") {
  script = "scripts/compile-model.py"

  inputs = [
    "Ledger/Data/Model.xcdatamodeld",
  ]

  outputs = [
    "$root_gen_dir/Model.momd/Model.mom",
    "$root_gen_dir/Model.momd/VersionInfo.plist",
  ]

  model = rebase_path("Ledger/Data/Model.xcdatamodeld")
  out_dir = rebase_path(root_gen_dir)

  args = [
    "--model=$model",
    "--output=$out_dir",
  ]
}

action("mojo_gen_wrappers") {
  script = "scripts/mojo/gen_model_wrappers.py"
  pickled_ast = rebase_path("$root_gen_dir/brave/vendor/bat-native-ledger/include/bat/ledger/public/interfaces/ledger.p")
  mojom_idl = rebase_path("//brave/vendor/bat-native-ledger/include/bat/ledger/public/interfaces/ledger.mojom")
  inputs = [
    pickled_ast,
    mojom_idl,
    "scripts/mojo/mojom_objc_generator.py",
    "scripts/mojo/objc_templates/enum.tmpl",
    "scripts/mojo/objc_templates/module.h.tmpl",
    "scripts/mojo/objc_templates/module+private.h.tmpl",
    "scripts/mojo/objc_templates/module.mm.tmpl",
    "scripts/mojo/objc_templates/interface_declaration.tmpl",
    "scripts/mojo/objc_templates/private_interface_declaration.tmpl",
    "scripts/mojo/objc_templates/private_interface_implementation.tmpl",
  ]
  outputs = [
    "$target_gen_dir/ledger.mojom.objc.h",
    "$target_gen_dir/ledger.mojom.objc+private.h",
    "$target_gen_dir/ledger.mojom.objc.mm",
    "$target_gen_dir/objc_templates_bytecode/objc_templates.zip",
  ]
  output_dir = rebase_path(target_gen_dir)
  args = [
    "--pickled-ast=$pickled_ast",
    "--module-include-path=bat/ledger/public/interfaces",
    "--mojom-file=$mojom_idl",
    "--output-dir=$output_dir",
  ]
  deps = [
    "//brave/vendor/bat-native-ledger/include/bat/ledger/public/interfaces:interfaces__parser"
  ]
}
