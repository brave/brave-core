diff --git a/chrome/installer/mac/signing/signing.py b/chrome/installer/mac/signing/signing.py
index b56853e5e2649328a81a2de20228de5abda08f11..6874c074dcb51da34d726d895b064800f519136a 100644
--- a/chrome/installer/mac/signing/signing.py
+++ b/chrome/installer/mac/signing/signing.py
@@ -12,6 +12,7 @@ import os.path
 from . import commands
 from .model import CodeSignOptions, CodeSignedProduct, VerifyOptions
 
+from signing_helper import GenerateWidevineSigFile, GetBraveLibraries
 _PROVISIONPROFILE_EXT = '.provisionprofile'
 _PROVISIONPROFILE_DEST = 'embedded.provisionprofile'
 
@@ -42,7 +43,6 @@ def get_parts(config):
                 options=CodeSignOptions.RESTRICT,
                 requirements=config.codesign_requirements_outer_app,
                 identifier_requirement=False,
-                resource_rules='app_resource_rules.plist',
                 entitlements='app-entitlements.plist',
                 verify_options=VerifyOptions.DEEP + VerifyOptions.NO_STRICT),
         'framework':
@@ -84,6 +84,12 @@ def get_parts(config):
                 options=CodeSignOptions.RESTRICT +
                 CodeSignOptions.LIBRARY_VALIDATION,
                 verify_options=VerifyOptions.IGNORE_RESOURCES),
+        'sparkle-framework':
+            CodeSignedProduct(
+                '{.framework_dir}/Frameworks/Sparkle.framework'
+                .format(config),
+                'org.sparkle-project.Sparkle',
+                verify_options=VerifyOptions.DEEP + VerifyOptions.NO_STRICT),
     }
 
     dylibs = (
@@ -93,6 +99,7 @@ def get_parts(config):
         'libswiftshader_libGLESv2.dylib',
         'WidevineCdm/_platform_specific/mac_x64/libwidevinecdm.dylib',
     )
+    dylibs += GetBraveLibraries()
     for library in dylibs:
         library_basename = os.path.basename(library)
         parts[library_basename] = CodeSignedProduct(
@@ -143,7 +150,7 @@ def sign_part(paths, config, part):
         part: The |model.CodeSignedProduct| to sign. The product's |path| must
             be in |paths.work|.
     """
-    command = ['codesign', '--sign', config.identity]
+    command = ['codesign', '--force', '--sign', config.identity]
     if part.sign_with_identifier:
         command.extend(['--identifier', part.identifier])
     reqs = part.requirements_string(config)
@@ -234,6 +241,8 @@ def sign_chrome(paths, config):
     # Sign the framework bundle.
     sign_part(paths, config, parts['framework'])
 
+    GenerateWidevineSigFile(paths, config, parts['framework'])
+    sign_part(paths, config, parts['framework'])
     provisioning_profile_basename = config.provisioning_profile_basename
     if provisioning_profile_basename:
         commands.copy_files(
