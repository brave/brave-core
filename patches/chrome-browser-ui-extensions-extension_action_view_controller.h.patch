diff --git a/chrome/browser/ui/extensions/extension_action_view_controller.h b/chrome/browser/ui/extensions/extension_action_view_controller.h
index 73e8e39cfd69319e2eefe456b8a530e4eb547414..7c15e984bc58e0a2bfbd1640d7c7e24efe755645 100644
--- a/chrome/browser/ui/extensions/extension_action_view_controller.h
+++ b/chrome/browser/ui/extensions/extension_action_view_controller.h
@@ -15,6 +15,7 @@
 #include "extensions/browser/extension_host_observer.h"
 #include "ui/gfx/image/image.h"
 
+class BraveActionViewController;
 class Browser;
 class ExtensionAction;
 class ExtensionActionPlatformDelegate;
@@ -40,6 +41,7 @@ class ExtensionActionViewController
       public extensions::ExtensionContextMenuModel::PopupDelegate,
       public extensions::ExtensionHostObserver {
  public:
+  friend class BraveActionViewController;
   // The different options for showing a popup.
   enum PopupShowAction { SHOW_POPUP, SHOW_POPUP_AND_INSPECT };
 
@@ -107,6 +109,7 @@ class ExtensionActionViewController
   // In some cases (such as when an action is shown in a menu), a substitute
   // ToolbarActionViewController should be used for showing popups. This
   // returns the preferred controller.
+  virtual
   ExtensionActionViewController* GetPreferredPopupViewController();
 
   // Executes the extension action with |show_action|. If
@@ -122,6 +125,7 @@ class ExtensionActionViewController
   // The popup may not be shown synchronously if the extension is hidden and
   // first needs to slide itself out.
   // Returns true if a popup will be shown.
+  virtual
   bool TriggerPopupWithUrl(PopupShowAction show_action,
                            const GURL& popup_url,
                            bool grant_tab_permissions);
@@ -132,6 +136,7 @@ class ExtensionActionViewController
                  PopupShowAction show_action);
 
   // Handles cleanup after the popup closes.
+  virtual
   void OnPopupClosed();
 
   // Returns the image source for the icon.
