diff --git a/build/config/compiler/BUILD.gn b/build/config/compiler/BUILD.gn
index b369a84ccfb1cfa70ac3803669ef34e69f7ca2ec..77a5038a3c8c95299733578a26493475ad38c28a 100644
--- a/build/config/compiler/BUILD.gn
+++ b/build/config/compiler/BUILD.gn
@@ -579,20 +579,7 @@ config("compiler") {
     }
 
     cflags_c += [ "-std=${standard_prefix}11" ]
-
-    # TODO(https://crbug.com/1273966): Use C++17 with is_cfi once
-    # https://chromium-review.googlesource.com/c/v8/v8/+/3304143/ is rolled in.
-    if ((is_nacl && !is_nacl_saigo) || is_cfi) {
-      # This is for the pnacl_newlib toolchain. It's only used to build
-      # a few independent ppapi test files that don't pull in any other
-      # dependencies.
-      cflags_cc += [
-        "-std=${standard_prefix}++14",
-        "-fno-trigraphs",
-      ]
-    } else {
-      cflags_cc += [ "-std=${standard_prefix}++17" ]
-    }
+    cflags_cc += [ "-std=${standard_prefix}++14" ]
   } else if (is_win) {
     cflags_cc += [ "/std:c++17" ]
   } else if (!is_nacl) {
@@ -601,21 +588,23 @@ config("compiler") {
     # are still a few buildbots using it, so until those are turned off
     # we need the !is_nacl clause and the (is_nacl && is_clang) clause, above.
     cflags_c += [ "-std=c11" ]
-
-    if (is_apple) {
-      # TODO(thakis): Use C++17 on macOS and iOS once it works.
-      cflags_cc += [
-        "-std=c++14",
-        "-fno-trigraphs",
-      ]
-    } else {
-      cflags_cc += [ "-std=c++17" ]
-    }
+    cflags_cc += [ "-std=c++14" ]
   }
 
+  # C++17 removes trigraph support, so preemptively disable trigraphs. This is
+  # especially useful given the collision with ecmascript's logical assignment
+  # operators: https://github.com/tc39/proposal-logical-assignment
   if (is_clang && current_os != "zos") {
-    # C++17 removes trigraph support, but clang still warns that it ignores
-    # them when seeing them.  Don't.
+    # clang-cl disables trigraphs by default
+    if (!is_win) {
+      # The gnu variants of C++11 and C++14 already disable trigraph support,
+      # but when building with clang, we use -std=c++11 / -std=c++14, which
+      # enables trigraph support: override that here.
+      cflags_cc += [ "-fno-trigraphs" ]
+    }
+
+    # Don't warn that trigraphs are ignored, since trigraphs are disabled
+    # anyway.
     cflags_cc += [ "-Wno-trigraphs" ]
   }
 
@@ -1639,6 +1628,7 @@ config("chromium_code") {
       cflags += [ "-Wextra-semi" ]
     }
   }
+  cflags -= brave_removed_chromium_code_cflags
 
   configs = [
     ":default_warnings",
