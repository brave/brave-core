diff --git a/build/config/android/internal_rules.gni b/build/config/android/internal_rules.gni
index 8f136746b29627c17c2d0b60bdc1d4fbf755d89d..e07c05b17ba9a2bc97db5962403119cea334b2d9 100644
--- a/build/config/android/internal_rules.gni
+++ b/build/config/android/internal_rules.gni
@@ -3657,6 +3657,7 @@ if (enable_java_templates) {
           # Filter directly in compile_java.py when no other processing is required.
           _processed_jar_path = _javac_jar_path
         }
+        foreach(bytecode_jar, brave_bytecode_jars) { if (rebase_path(_javac_jar_path, root_build_dir) == bytecode_jar) { _processed_jar_path = "$target_out_dir/$target_name.bytecode-rewritten.jar" } }
       }
 
       if (_build_device_jar) {
@@ -3864,6 +3865,7 @@ if (enable_java_templates) {
       if (defined(_enable_bytecode_checks) && _enable_bytecode_checks) {
         enable_bytecode_checks = _enable_bytecode_checks
       }
+      if (_type == "java_library") { needs_full_javac_classpath = true }
 
       # Specifically avoid passing in invoker.base_module_target as one of the
       # possible_config_deps.
@@ -4245,6 +4247,7 @@ if (enable_java_templates) {
       } else {
         not_needed(invoker, [ "missing_classes_allowlist" ])
       }
+      foreach(bytecode_jar, brave_bytecode_jars) { if (rebase_path(_unprocessed_jar_path, root_build_dir) == bytecode_jar) { _bytecode_rewriter_output_jar = _processed_jar_path brave_bytecode_rewriter("${target_name}__bytecode_rewrite") { build_config = _build_config } _unprocessed_jar_deps += [ ":${target_name}__bytecode_rewrite" ] _unprocessed_jar_path = _bytecode_rewriter_output_jar } }
 
       if (_filter_jar && _is_prebuilt) {
         _filter_jar_target_name = "${target_name}__filter_jar"
