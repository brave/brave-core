diff --git a/chrome/browser/ui/views/profiles/profile_chooser_view.cc b/chrome/browser/ui/views/profiles/profile_chooser_view.cc
index 591fb243215f40c243d0ff61255daed7c55bbfa3..8ade4a04e2b5666e6e6c2504b43a9f06615a498a 100644
--- a/chrome/browser/ui/views/profiles/profile_chooser_view.cc
+++ b/chrome/browser/ui/views/profiles/profile_chooser_view.cc
@@ -162,7 +162,7 @@ void ProfileChooserView::ShowBubble(
   if (IsShowing())
     return;
 
-  profile_bubble_ = new ProfileChooserView(
+  profile_bubble_ = new BraveProfileChooserView(
       anchor_button, anchor_rect, parent_window, browser, view_mode,
       manage_accounts_params.service_type, access_point, is_source_keyboard);
   base::RecordAction(base::UserMetricsAction("ProfileChooser_Show"));
@@ -793,7 +793,9 @@ views::View* ProfileChooserView::CreateCurrentProfileView(
   Profile* profile = browser()->profile();
   const bool sync_disabled = !profile->IsSyncAllowed();
   if (!is_guest && sync_disabled)
-    return CreateDiceSyncErrorView(avatar_item, sync_ui_util::NO_SYNC_ERROR, 0);
+    return static_cast<BraveProfileChooserView*>(this)
+        ->BraveCreateDiceSyncErrorView(avatar_item, sync_ui_util::NO_SYNC_ERROR,
+                                       0);
 
   if (!avatar_item.signed_in && dice_enabled_ &&
       SyncPromoUI::ShouldShowSyncPromo(profile)) {
@@ -1049,9 +1051,12 @@ views::View* ProfileChooserView::CreateOptionsView(bool display_lock,
       layout->AddView(guest_profile_button_);
     }
   }
+  static_cast<BraveProfileChooserView*>(this)->AddTorButton(layout);
 
   base::string16 text = l10n_util::GetStringUTF16(
       is_guest ? IDS_PROFILES_EXIT_GUEST : IDS_PROFILES_MANAGE_USERS_BUTTON);
+  if (browser()->profile()->IsTorProfile())
+    text = l10n_util::GetStringUTF16(IDS_PROFILES_EXIT_TOR);
   const gfx::VectorIcon& settings_icon =
       is_guest ? kCloseAllIcon : kSettingsIcon;
   users_button_ = new HoverButton(this, CreateVectorIcon(settings_icon), text);
