diff --git a/third_party/crashpad/crashpad/util/mach/mig_fix.py b/third_party/crashpad/crashpad/util/mach/mig_fix.py
index 037746fac3bb8eda68a04ba0af5707e7025e547f..083a69bd6144f20622c888e85999ccba540d527d 100755
--- a/third_party/crashpad/crashpad/util/mach/mig_fix.py
+++ b/third_party/crashpad/crashpad/util/mach/mig_fix.py
@@ -23,6 +23,13 @@ import sys
 from mig_gen import MigInterface
 
 
+def _make_generated_comments_deterministic(contents):
+    """Replaces generated code comments with determenistic ones."""
+    gen_comments_pattern = re.compile(
+        r'^ \* (stub generated|with a MiG generated).*$', re.MULTILINE)
+    return gen_comments_pattern.sub(r' * \1 <determinism>', contents)
+
+
 def _fix_user_implementation(implementation, fixed_implementation, header,
                              fixed_header):
     """Rewrites a MIG-generated user implementation (.c) file.
@@ -44,6 +51,7 @@ def _fix_user_implementation(implementation, fixed_implementation, header,
 
     pattern = re.compile('^(\t} __Reply);$', re.MULTILINE)
     contents = pattern.sub(r'\1 __attribute__((unused));', contents)
+    contents = _make_generated_comments_deterministic(contents)
 
     if fixed_header is not None:
         contents = contents.replace(
@@ -78,6 +86,7 @@ def _fix_server_implementation(implementation, fixed_implementation, header,
 
     file = open(implementation, 'r+' if fixed_implementation is None else 'r')
     contents = file.read()
+    contents = _make_generated_comments_deterministic(contents)
 
     # Find interesting declarations.
     declaration_pattern = re.compile(
