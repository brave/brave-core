diff --git a/chrome/browser/shell_integration_win.cc b/chrome/browser/shell_integration_win.cc
index 23dd8287e43095bfc1d27f58e442fd6033d3983d..898ba81db449c3c95cd698ac91e4a1ecc8d0f039 100644
--- a/chrome/browser/shell_integration_win.cc
+++ b/chrome/browser/shell_integration_win.cc
@@ -502,6 +502,15 @@ void MigrateChromeAndChromeProxyShortcuts(
   win::MigrateShortcutsInPathInternal(chrome_proxy_path, shortcut_path);
 }
 
+base::string16 GetHttpProtocolUserChoiceProgId() {
+  base::string16 prog_id;
+  base::win::RegKey key(HKEY_CURRENT_USER, ShellUtil::kRegVistaUrlPrefs,
+                        KEY_QUERY_VALUE);
+  if (key.Valid())
+    key.ReadValue(L"ProgId", &prog_id);
+  return prog_id;
+}  
+
 }  // namespace
 
 bool SetAsDefaultBrowser() {
@@ -579,31 +588,28 @@ DefaultWebClientState GetDefaultBrowser() {
       ShellUtil::GetChromeDefaultState());
 }
 
-// There is no reliable way to say which browser is default on a machine (each
-// browser can have some of the protocols/shortcuts). So we look for only HTTP
-// protocol handler. Even this handler is located at different places in
-// registry on XP and Vista:
-// - HKCR\http\shell\open\command (XP)
-// - HKCU\Software\Microsoft\Windows\Shell\Associations\UrlAssociations\
-//   http\UserChoice (Vista)
-// This method checks if Firefox is default browser by checking these
-// locations and returns true if Firefox traces are found there. In case of
-// error (or if Firefox is not found)it returns the default value which
-// is false.
+// This method checks if Firefox is default browser by checking for the default
+// HTTP protocol handler. Returns false in case of error or if Firefox is not
+// the user's default http protocol client.
 bool IsFirefoxDefaultBrowser() {
-  base::string16 app_cmd;
-  base::win::RegKey key(HKEY_CURRENT_USER, ShellUtil::kRegVistaUrlPrefs,
-                        KEY_READ);
-  return key.Valid() && key.ReadValue(L"Progid", &app_cmd) == ERROR_SUCCESS &&
-         app_cmd == L"FirefoxURL";
+  return base::StartsWith(GetHttpProtocolUserChoiceProgId(), L"FirefoxURL",
+                          base::CompareCase::SENSITIVE);
+}
+
+std::string GetFirefoxProgIdSuffix() {
+  const base::string16 app_cmd = GetHttpProtocolUserChoiceProgId();
+  static constexpr base::StringPiece16 kFirefoxProgIdPrefix(L"FirefoxURL-");
+  if (base::StartsWith(app_cmd, kFirefoxProgIdPrefix,
+                       base::CompareCase::SENSITIVE)) {
+    // Returns the id that appears after the prefix "FirefoxURL-".
+    return std::string(app_cmd.begin() + kFirefoxProgIdPrefix.size(),
+                       app_cmd.end());
+  }
+  return std::string();
 }
 
 bool IsIEDefaultBrowser() {
-  base::string16 app_cmd;
-  base::win::RegKey key(HKEY_CURRENT_USER, ShellUtil::kRegVistaUrlPrefs,
-                        KEY_READ);
-  return key.Valid() && key.ReadValue(L"Progid", &app_cmd) == ERROR_SUCCESS &&
-         app_cmd == L"IE.HTTP";
+  return GetHttpProtocolUserChoiceProgId() == L"IE.HTTP";
 }
 
 DefaultWebClientState IsDefaultProtocolClient(const std::string& protocol) {
