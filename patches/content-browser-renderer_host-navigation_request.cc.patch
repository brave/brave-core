diff --git a/content/browser/renderer_host/navigation_request.cc b/content/browser/renderer_host/navigation_request.cc
index 29740121f137118836c6ace05f302cc8aa671d90..b56b33b035a43e4cee76e5e45ea6cf55635a891f 100644
--- a/content/browser/renderer_host/navigation_request.cc
+++ b/content/browser/renderer_host/navigation_request.cc
@@ -3551,6 +3551,7 @@ void NavigationRequest::OnRequestRedirected(
   common_params_->url = redirect_info.new_url;
   common_params_->method = redirect_info.new_method;
   common_params_->referrer->url = GURL(redirect_info.new_referrer);
+  BRAVE_ONREQUESTREDIRECTED_MAYBEHIDEREFERRER
   common_params_->referrer = Referrer::SanitizeForRequest(
       common_params_->url, *common_params_->referrer);
 
@@ -4115,6 +4116,14 @@ UrlInfo NavigationRequest::GetUrlInfo() {
         current_instance->GetStoragePartitionConfig());
   }
 
+  // достать StoragePartitionConfig откуда-то сверху, типа из вкладки?
+  // if (auto partition_config =
+  //         GetContentClient()->browser()->GetStoragePartitionConfig(
+  //             frame_tree_node_->current_frame_host(),
+  //             url::Origin::Create(GetURL()))) {
+  //   url_info_init.WithStoragePartitionConfig(partition_config.value());
+  // }
+
   // Child frames (including fenced frames) should always use the
   // same StoragePartition as their parent.
   RenderFrameHostImpl* parent = GetParentFrameOrOuterDocument();
@@ -5359,6 +5368,7 @@ void NavigationRequest::OnStartChecksComplete(
   headers.MergeFrom(TakeModifiedRequestHeaders());
   begin_params_->headers = headers.ToString();
 
+  BRAVE_ONSTARTCHECKSCOMPLETE_MAYBEHIDEREFERRER
   // TODO(clamy): Avoid cloning the navigation params and create the
   // ResourceRequest directly here.
   std::vector<std::unique_ptr<NavigationLoaderInterceptor>> interceptor;
