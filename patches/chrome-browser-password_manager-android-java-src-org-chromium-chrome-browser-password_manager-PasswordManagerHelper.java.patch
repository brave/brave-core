diff --git a/chrome/browser/password_manager/android/java/src/org/chromium/chrome/browser/password_manager/PasswordManagerHelper.java b/chrome/browser/password_manager/android/java/src/org/chromium/chrome/browser/password_manager/PasswordManagerHelper.java
index 87e98a67ea473035e730ccdb565cacbb8e29bb57..cb60a34d5d1a601c6bec2d643e69feaf7718e8ed 100644
--- a/chrome/browser/password_manager/android/java/src/org/chromium/chrome/browser/password_manager/PasswordManagerHelper.java
+++ b/chrome/browser/password_manager/android/java/src/org/chromium/chrome/browser/password_manager/PasswordManagerHelper.java
@@ -7,6 +7,7 @@ package org.chromium.chrome.browser.password_manager;
 import android.app.PendingIntent;
 import android.app.PendingIntent.CanceledException;
 import android.content.Context;
+import android.os.Bundle;
 import android.os.Handler;
 import android.os.Looper;
 import android.os.SystemClock;
@@ -40,6 +41,8 @@ import org.chromium.chrome.browser.pwm_disabled.PasswordCsvDownloadFlowControlle
 import org.chromium.chrome.browser.pwm_disabled.PasswordManagerUnavailableDialogCoordinator;
 import org.chromium.chrome.browser.sync.SyncServiceFactory;
 import org.chromium.components.browser_ui.settings.SettingsCustomTabLauncher;
+import org.chromium.chrome.browser.settings.SettingsNavigationFactory;
+import org.chromium.components.browser_ui.settings.SettingsNavigation.SettingsFragment;
 import org.chromium.components.prefs.PrefService;
 import org.chromium.components.sync.DataType;
 import org.chromium.components.sync.SyncService;
@@ -165,33 +168,11 @@ public class PasswordManagerHelper {
             boolean managePasskeys,
             @Nullable String account,
             SettingsCustomTabLauncher settingsCustomTabLauncher) {
-        RecordHistogram.recordEnumeratedHistogram(
-                "PasswordManager.ManagePasswordsReferrer",
-                referrer,
-                ManagePasswordsReferrer.MAX_VALUE);
-        SyncService syncService = SyncServiceFactory.getForProfile(mProfile);
-
-        PrefService prefService = UserPrefs.get(mProfile);
-
-        if (!PasswordManagerUtilBridge.isPasswordManagerAvailable(prefService)
-                && !prefService.getBoolean(Pref.UPM_UNMIGRATED_PASSWORDS_EXPORTED)) {
-            // The automatic export is ongoing. Usually a dialog offering the user to download
-            // the auto-exported CSV would be shown, but until the CSV is written, the dialog
-            // can't be shown. This is a rare corner-case.
-            return;
-        }
-        if (!showPwmUnavailableOrDownloadCsvDialog(
-                context, modalDialogManagerSupplier, settingsCustomTabLauncher)) {
-            LoadingModalDialogCoordinator loadingDialogCoordinator =
-                    LoadingModalDialogCoordinator.create(modalDialogManagerSupplier, context);
-            launchTheCredentialManager(
-                    referrer,
-                    syncService,
-                    loadingDialogCoordinator,
-                    modalDialogManagerSupplier,
-                    context,
-                    account);
-        }
+        Bundle fragmentArgs = new Bundle();
+        fragmentArgs.putInt(MANAGE_PASSWORDS_REFERRER, referrer);
+        context.startActivity(
+                SettingsNavigationFactory.createSettingsNavigation()
+                        .createSettingsIntent(context, SettingsFragment.PASSWORDS, fragmentArgs));
     }
 
     /**
