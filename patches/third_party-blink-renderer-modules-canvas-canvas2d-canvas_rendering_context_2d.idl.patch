diff --git a/third_party/blink/renderer/modules/canvas/canvas2d/canvas_rendering_context_2d.idl b/third_party/blink/renderer/modules/canvas/canvas2d/canvas_rendering_context_2d.idl
index fee85211f2b9b20a318a00c3dcb909274753cb60..6d21430362669f0682380200c7e71ae492d898fc 100644
--- a/third_party/blink/renderer/modules/canvas/canvas2d/canvas_rendering_context_2d.idl
+++ b/third_party/blink/renderer/modules/canvas/canvas2d/canvas_rendering_context_2d.idl
@@ -103,9 +103,13 @@ interface CanvasRenderingContext2D {
     [RuntimeEnabled=Canvas2dScrollPathIntoView] void scrollPathIntoView(optional Path2D path);
     void clip(optional CanvasFillRule winding);
     void clip(Path2D path, optional CanvasFillRule winding);
+    [CallWith=ScriptState]
     boolean isPointInPath(unrestricted double x, unrestricted double y, optional CanvasFillRule winding);
+    [CallWith=ScriptState]
     boolean isPointInPath(Path2D path, unrestricted double x, unrestricted double y, optional CanvasFillRule winding);
+    [CallWith=ScriptState]
     boolean isPointInStroke(unrestricted double x, unrestricted double y);
+    [CallWith=ScriptState]
     boolean isPointInStroke(Path2D path, unrestricted double x, unrestricted double y);
 
     // text (see also the CanvasDrawingStyles interface)
@@ -126,7 +130,7 @@ interface CanvasRenderingContext2D {
     // pixel manipulation
     [RaisesException] ImageData createImageData(ImageData imagedata);
     [RaisesException] ImageData createImageData(long sw, long sh);
-    [RaisesException] ImageData getImageData(long sx, long sy, long sw, long sh);
+    [CallWith=ScriptState, RaisesException] ImageData getImageData(long sx, long sy, long sw, long sh);
     [RaisesException] void putImageData(ImageData imagedata, long dx, long dy);
     [RaisesException] void putImageData(ImageData imagedata, long dx, long dy, long dirtyX, long dirtyY, long dirtyWidth, long dirtyHeight);
 
@@ -150,6 +154,7 @@ interface CanvasRenderingContext2D {
 
     // dashed lines
     void setLineDash(sequence<unrestricted double> dash);
+    [CallWith=ScriptState]
     sequence<unrestricted double> getLineDash();
     attribute unrestricted double lineDashOffset;
 
