diff --git a/components/download/internal/background_service/in_memory_download_unittest.cc b/components/download/internal/background_service/in_memory_download_unittest.cc
index 7a64e5339c0bf0adc72a85f3303bda8fe87f7033..2a631e679a4c393417bc07b61a253ac5e94be97e 100644
--- a/components/download/internal/background_service/in_memory_download_unittest.cc
+++ b/components/download/internal/background_service/in_memory_download_unittest.cc
@@ -12,6 +12,7 @@
 #include <memory>
 
 #include "base/functional/bind.h"
+#include "base/memory/scoped_refptr.h"
 #include "base/message_loop/message_pump_type.h"
 #include "base/run_loop.h"
 #include "base/test/bind.h"
@@ -20,6 +21,7 @@
 #include "base/uuid.h"
 #include "net/base/io_buffer.h"
 #include "net/traffic_annotation/network_traffic_annotation_test_helper.h"
+#include "services/network/public/cpp/weak_wrapper_shared_url_loader_factory.h"
 #include "services/network/public/mojom/url_response_head.mojom.h"
 #include "services/network/test/test_url_loader_factory.h"
 #include "storage/browser/blob/blob_reader.h"
@@ -62,8 +64,10 @@ base::WeakPtr<storage::BlobStorageContext> BlobStorageContextGetter(
 
 class MockDelegate : public InMemoryDownload::Delegate {
  public:
-  MockDelegate(BlobContextGetter blob_context_getter)
-      : blob_context_getter_(blob_context_getter) {}
+  MockDelegate(BlobContextGetter blob_context_getter,
+               network::TestURLLoaderFactory* url_loader_factory)
+      : blob_context_getter_(blob_context_getter),
+        url_loader_factory_(url_loader_factory) {}
 
   MockDelegate(const MockDelegate&) = delete;
   MockDelegate& operator=(const MockDelegate&) = delete;
@@ -85,10 +89,17 @@ class MockDelegate : public InMemoryDownload::Delegate {
       base::OnceCallback<void(BlobContextGetter)> callback) override {
     std::move(callback).Run(blob_context_getter_);
   }
+  void RetrievedURLLoaderFactory(
+      URLLoaderFactoryGetterCallback callback) override {
+    std::move(callback).Run(
+        base::MakeRefCounted<network::WeakWrapperSharedURLLoaderFactory>(
+            url_loader_factory_));
+  }
 
  private:
   base::RunLoop run_loop_;
   BlobContextGetter blob_context_getter_;
+  network::TestURLLoaderFactory* url_loader_factory_;
 };
 
 class InMemoryDownloadTest : public testing::Test {
@@ -116,8 +127,8 @@ class InMemoryDownloadTest : public testing::Test {
 
     auto blob_storage_context_getter = base::BindRepeating(
         &BlobStorageContextGetter, blob_storage_context_.get());
-    mock_delegate_ =
-        std::make_unique<NiceMock<MockDelegate>>(blob_storage_context_getter);
+    mock_delegate_ = std::make_unique<NiceMock<MockDelegate>>(
+        blob_storage_context_getter, &url_loader_factory_);
   }
 
   void TearDown() override {
@@ -132,7 +143,7 @@ class InMemoryDownloadTest : public testing::Test {
     download_ = std::make_unique<InMemoryDownloadImpl>(
         base::Uuid::GenerateRandomV4().AsLowercaseString(), request_params,
         /* request_body= */ nullptr, TRAFFIC_ANNOTATION_FOR_TESTS, delegate(),
-        &url_loader_factory_, io_thread_->task_runner());
+        io_thread_->task_runner());
   }
 
   InMemoryDownload* download() { return download_.get(); }
