diff --git a/chrome/installer/util/shell_util.cc b/chrome/installer/util/shell_util.cc
index 581e0e6342dd8f177deefe04fd1bbda01496d7a6..502e7d3a044250bda484f9ef936f681681bdd2b1 100644
--- a/chrome/installer/util/shell_util.cc
+++ b/chrome/installer/util/shell_util.cc
@@ -746,6 +746,7 @@ std::wstring GetTargetForDefaultAppsSettings(const wchar_t* protocol) {
     return base::StringPrintf(kSystemSettingsDefaultAppsFormat, L"Browser");
   if (base::EqualsCaseInsensitiveASCII(protocol, L"mailto"))
     return base::StringPrintf(kSystemSettingsDefaultAppsFormat, L"Email");
+  BRAVE_GET_TARGET_FOR_DEFAULT_APP_SETTINGS
   return L"SettingsPageAppsDefaultsProtocolView";
 }
 
@@ -1615,8 +1616,10 @@ const wchar_t* ShellUtil::kPotentialFileAssociations[] = {
     L".htm", L".html",  L".pdf",  L".shtml", L".svg",
     L".xht", L".xhtml", L".webp", nullptr};
 const wchar_t* ShellUtil::kBrowserProtocolAssociations[] = {L"ftp", L"http",
+                                                            BRAVE_IPFS, BRAVE_IPNS,
                                                             L"https", nullptr};
 const wchar_t* ShellUtil::kPotentialProtocolAssociations[] = {
+    BRAVE_IPFS, BRAVE_IPNS,
     L"ftp", L"http",  L"https", L"irc", L"mailto", L"mms",    L"news", L"nntp",
     L"sms", L"smsto", L"snews", L"tel", L"urn",    L"webcal", nullptr};
 const wchar_t* ShellUtil::kRegUrlProtocol = L"URL Protocol";
