diff --git a/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarPhone.java b/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarPhone.java
index d54918306cd23c35c6235a5f95d0c35a39d3af83..e95031dda48a72159770a8c8b5dda636457b1770 100644
--- a/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarPhone.java
+++ b/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarPhone.java
@@ -460,6 +460,7 @@ public class ToolbarPhone extends ToolbarLayout
         if (mOptionalButtonCoordinator != null) {
             mOptionalButtonCoordinator.setBackgroundColorFilter(color);
         }
+        BraveToolbarLayout.class.cast(this).updateModernLocationBarColorImpl(color);
     }
 
     private void updateModernLocationBarCorners() {
@@ -1016,6 +1017,7 @@ public class ToolbarPhone extends ToolbarLayout
      * Tab Page.
      */
     private void updateLocationBarLayoutForExpansionAnimation() {
+        if (!BraveToolbarLayout.class.cast(this).isLocationBarValid(mLocationBar)) return;
         TraceEvent.begin("ToolbarPhone.updateLocationBarLayoutForExpansionAnimation");
         if (isInTabSwitcherMode()) return;
 
@@ -1394,6 +1396,7 @@ public class ToolbarPhone extends ToolbarLayout
             canvas.restore();
         }
 
+        BraveToolbarLayout.class.cast(this).drawAnimationOverlay(mToolbarButtonsContainer, canvas);
         // Draw the tab stack button and associated text if necessary.
         if (getTabSwitcherButtonCoordinator() != null && mUrlExpansionFraction != 1f) {
             // Draw the tab stack button image.
@@ -1704,6 +1707,7 @@ public class ToolbarPhone extends ToolbarLayout
     @Override
     public void onHomeButtonIsEnabledUpdate(boolean homeButtonEnabled) {
         mIsHomeButtonEnabled = homeButtonEnabled;
+        mIsHomeButtonEnabled = false;
         updateButtonVisibility();
     }
 
@@ -2043,6 +2047,7 @@ public class ToolbarPhone extends ToolbarLayout
         } else {
             populateUrlClearExpansionAnimatorSet(animators);
         }
+        if (!BraveToolbarLayout.class.cast(this).isLocationBarValid(mLocationBar)) return;
         mUrlFocusLayoutAnimator = new AnimatorSet();
         mUrlFocusLayoutAnimator.playTogether(animators);
 
