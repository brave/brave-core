diff --git a/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarPhone.java b/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarPhone.java
index 448cf2d4636aed11a95f5b9c5c10768f32b39884..1ef44452958980bd402f17db569cd0fd6248b496 100644
--- a/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarPhone.java
+++ b/chrome/browser/ui/android/toolbar/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarPhone.java
@@ -434,6 +434,7 @@ public class ToolbarPhone extends ToolbarLayout
         if (mOptionalButtonCoordinator != null) {
             mOptionalButtonCoordinator.setBackgroundColorFilter(color);
         }
+        BraveToolbarLayout.class.cast(this).updateModernLocationBarColorImpl(color);
     }
 
     private void updateModernLocationBarCorners() {
@@ -589,6 +590,7 @@ public class ToolbarPhone extends ToolbarLayout
                 mTrackerSupplier.get().notifyEvent(EventConstants.PARTNER_HOME_PAGE_BUTTON_PRESSED);
             }
         }
+        BraveToolbarLayout.class.cast(this).onClickImpl(v);
     }
 
     @Override
@@ -1040,6 +1042,7 @@ public class ToolbarPhone extends ToolbarLayout
      * Tab Page.
      */
     private void updateLocationBarLayoutForExpansionAnimation() {
+        if (!BraveToolbarLayout.class.cast(this).isLocationBarValid(mLocationBar)) return;
         TraceEvent.begin("ToolbarPhone.updateLocationBarLayoutForExpansionAnimation");
         if (isInTabSwitcherMode()) return;
 
@@ -1417,6 +1420,7 @@ public class ToolbarPhone extends ToolbarLayout
             canvas.restore();
         }
 
+        BraveToolbarLayout.class.cast(this).drawAnimationOverlay(mToolbarButtonsContainer, canvas);
         // Draw the tab stack button and associated text if necessary.
         if (getTabSwitcherButtonCoordinator() != null && mUrlExpansionFraction != 1f) {
             // Draw the tab stack button image.
@@ -2070,6 +2074,7 @@ public class ToolbarPhone extends ToolbarLayout
         } else {
             populateUrlClearExpansionAnimatorSet(animators);
         }
+        if (!BraveToolbarLayout.class.cast(this).isLocationBarValid(mLocationBar)) return;
         mUrlFocusLayoutAnimator = new AnimatorSet();
         mUrlFocusLayoutAnimator.playTogether(animators);
 
