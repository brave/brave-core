diff --git a/chrome/browser/profiles/profile_manager.cc b/chrome/browser/profiles/profile_manager.cc
index d66a0216832f66ffc6d632976aa16e4559177423..d6519d16446febade3b7721949351ffeb2a07d55 100644
--- a/chrome/browser/profiles/profile_manager.cc
+++ b/chrome/browser/profiles/profile_manager.cc
@@ -1482,9 +1482,11 @@ void ProfileManager::EnsureActiveProfileExistsBeforeDeletion(
   const base::FilePath last_used_profile_path =
       GetLastUsedProfileDir(user_data_dir_);
   const base::FilePath guest_profile_path = GetGuestProfilePath();
+  const base::FilePath tor_profile_path = BraveProfileManager::GetTorProfilePath();
   Profile* last_used_profile = GetProfileByPath(last_used_profile_path);
   if (last_used_profile_path != profile_dir &&
       last_used_profile_path != guest_profile_path &&
+      last_used_profile_path != tor_profile_path &&
       last_used_profile != nullptr &&
       !last_used_profile->IsLegacySupervised()) {
     FinishDeletingProfile(profile_dir, last_used_profile_path);
@@ -1497,6 +1499,7 @@ void ProfileManager::EnsureActiveProfileExistsBeforeDeletion(
     base::FilePath cur_path = profile->GetPath();
     if (cur_path != profile_dir &&
         cur_path != guest_profile_path &&
+        cur_path != tor_profile_path &&
         !profile->IsLegacySupervised() &&
         !IsProfileDirectoryMarkedForDeletion(cur_path)) {
       OnNewActiveProfileLoaded(profile_dir, cur_path, std::move(callback),
@@ -1516,6 +1519,7 @@ void ProfileManager::EnsureActiveProfileExistsBeforeDeletion(
     // legacy-supervised.
     if (cur_path != profile_dir &&
         cur_path != guest_profile_path &&
+        cur_path != tor_profile_path &&
         !entry->IsLegacySupervised() &&
         !IsProfileDirectoryMarkedForDeletion(cur_path)) {
       fallback_profile_path = cur_path;
@@ -1874,6 +1878,7 @@ void ProfileManager::ScheduleForcedEphemeralProfileForDeletion(
     base::FilePath entry_path = entry->GetPath();
     if (entry_path == profile_dir ||
         entry_path == GetGuestProfilePath() ||
+        entry_path == BraveProfileManager::GetTorProfilePath() ||
         entry->IsLegacySupervised() ||
         IsProfileDirectoryMarkedForDeletion(entry_path))
       continue;
