diff --git a/components/download/internal/background_service/in_memory_download_driver.h b/components/download/internal/background_service/in_memory_download_driver.h
index 2197ca0ead8ca90f9a5e54ccf69d87fa08b3b1e1..4549708499d7fc91faa3fcf3bdd5867c6e54ff5c 100644
--- a/components/download/internal/background_service/in_memory_download_driver.h
+++ b/components/download/internal/background_service/in_memory_download_driver.h
@@ -5,14 +5,14 @@
 #ifndef COMPONENTS_DOWNLOAD_INTERNAL_BACKGROUND_SERVICE_IN_MEMORY_DOWNLOAD_DRIVER_H_
 #define COMPONENTS_DOWNLOAD_INTERNAL_BACKGROUND_SERVICE_IN_MEMORY_DOWNLOAD_DRIVER_H_
 
-#include "base/memory/raw_ptr.h"
-#include "components/download/internal/background_service/download_driver.h"
-
 #include <map>
 #include <memory>
 
+#include "base/memory/raw_ptr.h"
 #include "base/task/single_thread_task_runner.h"
+#include "components/download/internal/background_service/download_driver.h"
 #include "components/download/internal/background_service/in_memory_download.h"
+#include "components/download/public/background_service/url_loader_factory_getter.h"
 #include "services/network/public/mojom/url_loader_factory.mojom.h"
 
 namespace download {
@@ -23,7 +23,6 @@ class InMemoryDownload;
 class InMemoryDownloadFactory : public InMemoryDownload::Factory {
  public:
   InMemoryDownloadFactory(
-      network::mojom::URLLoaderFactory* url_loader_factory,
       scoped_refptr<base::SingleThreadTaskRunner> io_task_runner);
 
   InMemoryDownloadFactory(const InMemoryDownloadFactory&) = delete;
@@ -40,8 +39,6 @@ class InMemoryDownloadFactory : public InMemoryDownload::Factory {
       const net::NetworkTrafficAnnotationTag& traffic_annotation,
       InMemoryDownload::Delegate* delegate) override;
 
-  raw_ptr<network::mojom::URLLoaderFactory> url_loader_factory_;
-
   scoped_refptr<base::SingleThreadTaskRunner> io_task_runner_;
 };
 
@@ -52,7 +49,8 @@ class InMemoryDownloadDriver : public DownloadDriver,
  public:
   InMemoryDownloadDriver(
       std::unique_ptr<InMemoryDownload::Factory> download_factory,
-      BlobContextGetterFactoryPtr blob_context_getter_factory);
+      BlobContextGetterFactoryPtr blob_context_getter_factory,
+      URLLoaderFactoryGetterPtr url_loader_factory_getter);
 
   InMemoryDownloadDriver(const InMemoryDownloadDriver&) = delete;
   InMemoryDownloadDriver& operator=(const InMemoryDownloadDriver&) = delete;
@@ -83,6 +81,8 @@ class InMemoryDownloadDriver : public DownloadDriver,
   void OnDownloadComplete(InMemoryDownload* download) override;
   void OnUploadProgress(InMemoryDownload* download) override;
   void RetrieveBlobContextGetter(BlobContextGetterCallback callback) override;
+  void RetrievedURLLoaderFactory(
+      URLLoaderFactoryGetterCallback callback) override;
 
   // The client that receives updates from low level download logic.
   raw_ptr<DownloadDriver::Client> client_;
@@ -93,6 +93,9 @@ class InMemoryDownloadDriver : public DownloadDriver,
   // Used to retrieve BlobStorageContextGetter.
   BlobContextGetterFactoryPtr blob_context_getter_factory_;
 
+  // Used to retrieve browser context specific URLLoaderFactory
+  URLLoaderFactoryGetterPtr url_loader_factory_getter_;
+
   // A map of GUID and in memory download, which holds download data.
   std::map<std::string, std::unique_ptr<InMemoryDownload>> downloads_;
 };
