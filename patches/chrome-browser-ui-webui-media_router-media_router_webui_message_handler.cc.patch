diff --git a/chrome/browser/ui/webui/media_router/media_router_webui_message_handler.cc b/chrome/browser/ui/webui/media_router/media_router_webui_message_handler.cc
index 3f8d6b069dfaa84f4eaa788cf7fa8a091ff0d01f..ab6e2de52a56fbd8c2b5d3d47e64f061d0abe255 100644
--- a/chrome/browser/ui/webui/media_router/media_router_webui_message_handler.cc
+++ b/chrome/browser/ui/webui/media_router/media_router_webui_message_handler.cc
@@ -37,8 +37,12 @@ namespace media_router {
 
 namespace {
 
+#if defined(BRAVE_CHROMIUM_BUILD)
+const char kCastLearnMorePageUrl[] = "https://community.brave.com/";
+#else
 const char kCastLearnMorePageUrl[] =
     "https://www.google.com/chrome/devices/chromecast/learn.html";
+#endif
 const char kHelpPageUrlPrefix[] =
     "https://support.google.com/chromecast/answer/%d";
 
@@ -227,6 +231,9 @@ bool IsValidIssueActionTypeNum(int issue_action_type_num) {
 // Composes a "learn more" URL. The URL depends on template arguments in |args|.
 // Returns an empty string if |args| is invalid.
 std::string GetLearnMoreUrl(const base::DictionaryValue* args) {
+#if defined(BRAVE_CHROMIUM_BUILD)
+  return kCastLearnMorePageUrl;
+#endif
   // TODO(imcheng): The template arguments for determining the learn more URL
   // should come from the Issue object in the browser, not from WebUI.
   int help_page_id = -1;
@@ -530,6 +537,7 @@ void MediaRouterWebUIMessageHandler::OnRequestInitialData(
   // "No Cast devices found?" Chromecast help center page.
   initial_data.SetString("deviceMissingUrl",
                          base::StringPrintf(kHelpPageUrlPrefix, 3249268));
+  initial_data.SetString("deviceMissingUrl", kCastLearnMorePageUrl);
 
   std::unique_ptr<base::DictionaryValue> sinks_and_identity(
       SinksAndIdentityToValue(media_router_ui_->GetEnabledSinks(),
