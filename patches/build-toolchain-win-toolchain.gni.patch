diff --git a/build/toolchain/win/toolchain.gni b/build/toolchain/win/toolchain.gni
index b296cfbdccf31645837bcbeeff170560266a2afe..4ade3ba45aabceb99d9f432de0ca8c98d4ade4be 100644
--- a/build/toolchain/win/toolchain.gni
+++ b/build/toolchain/win/toolchain.gni
@@ -81,7 +81,7 @@ template("msvc_toolchain") {
 
     if (toolchain_uses_remoteexec) {
       if (toolchain_is_clang) {
-        cl_prefix = "${rbe_bin_dir}/rewrapper -cfg=${rbe_cc_cfg_file} -exec_root=${rbe_exec_root} "
+        cl_prefix = "${rbe_bin_dir}/rewrapper -cfg=${rbe_cc_cfg_file} -exec_root=${rbe_exec_root} -labels=type=compile,compiler=clang-cl,lang=cpp "
       } else {
         cl_prefix = ""
       }
@@ -315,15 +315,17 @@ template("msvc_toolchain") {
           ml_py = rebase_path("//build/toolchain/win/ml.py", root_build_dir)
           ml = "\"$python_path\" $ml_py $ml"
         }
-      }
-      if (toolchain_args.current_cpu != "arm64" || toolchain_is_clang) {
-        # TODO(thakis): Stop using asm-wrapper when using clang.
-        command = "\"$python_path\" $_tool_wrapper_path asm-wrapper $env $ml {{defines}} {{include_dirs}} {{asmflags}} {{source}}"
+
+        if (toolchain_args.current_cpu == "arm64") {
+          # armasm64.exe does not support definitions passed via the command
+          # line. (Fortunately, they're not needed for compiling the V8
+          # snapshot, which is the only time this assembler is required.)
+          command = "\"$python_path\" $_tool_wrapper_path asm-wrapper $env $ml {{include_dirs}} {{asmflags}} {{source}}"
+        } else {
+          command = "\"$python_path\" $_tool_wrapper_path asm-wrapper $env $ml {{defines}} {{include_dirs}} {{asmflags}} {{source}}"
+        }
       } else {
-        # armasm64.exe does not support definitions passed via the command
-        # line. (Fortunately, they're not needed for compiling the V8
-        # snapshot, which is the only time this assembler is required.)
-        command = "\"$python_path\" $_tool_wrapper_path asm-wrapper $env $ml {{include_dirs}} {{asmflags}} {{source}}"
+        command = "$ml {{defines}} {{include_dirs}} {{asmflags}} {{source}}"
       }
 
       description = "ASM {{output}}"
