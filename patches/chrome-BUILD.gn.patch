diff --git a/chrome/BUILD.gn b/chrome/BUILD.gn
index 039bf6ff05e45e62e0e1595cedec6c816d8c72e5..af3595efc41943b3cd189853b22a2b0386562ca9 100644
--- a/chrome/BUILD.gn
+++ b/chrome/BUILD.gn
@@ -169,6 +169,7 @@ if (!is_android && !is_mac) {
         "common/crash_keys.cc",
         "common/crash_keys.h",
       ]
+      sources -= [ "app/chrome_exe.rc", ] sources += [ "//brave/app/brave_exe.rc", ]
 
       deps += [
         ":chrome_dll",
@@ -442,11 +443,12 @@ if (is_win) {
       args += [ "--keystone=0" ]
     }
   }
+  copy("brave_app_plist") { deps = [ "//brave:brave_app_plist" ] sources = [ "$root_gen_dir/brave/brave_app_plist_tweaked.plist" ] outputs = [ "$root_gen_dir/chrome/{{source_file_part}}" ] }
 
   mac_app_bundle("chrome_app") {
     output_name = chrome_product_full_name
 
-    info_plist_target = ":chrome_app_plist"
+    info_plist_target = ":brave_app_plist"
     extra_substitutions = [
       "CHROMIUM_BUNDLE_ID=$chrome_mac_bundle_id",
       "CHROMIUM_SHORT_NAME=$chrome_product_short_name",
@@ -464,6 +466,7 @@ if (is_win) {
       "//chrome/common:buildflags",
       "//chrome/common:version_header",
     ]
+    deps += [ "//brave:brave_app" ]
 
     if (enable_stripping) {
       # At link time, preserve the global symbols specified in the .exports
@@ -539,7 +542,7 @@ if (is_win) {
     args =
         [
           "-b",
-          "${branding_path_component}_strings",
+          _strings_file,
           "-v",
           chrome_version_full,
           "-g",
@@ -613,6 +616,7 @@ if (is_win) {
       # this dependency directly copies the file into the framework's
       # resources directory.
       public_deps += [ ":chrome_framework_widevine_signature" ]
+      public_deps -= [ ":chrome_framework_widevine_signature" ]
     }
   }
 
@@ -645,9 +649,11 @@ if (is_win) {
       "--scm=0",
     ]
   }
+  copy("brave_helper_plist") { deps = [ "//brave:brave_helper_plist" ] sources = [ "$root_gen_dir/brave/brave_helper_plist_tweaked.plist" ] outputs = [ "$root_gen_dir/chrome/{{source_file_part}}" ] }
 
   compile_entitlements("entitlements") {
     entitlements_templates = [ "app/app-entitlements.plist" ]
+    if (is_official_build) { entitlements_templates += [ "app/app-entitlements-chrome.plist", "//brave/app/app-entitlements-brave.plist" ] }
     if (is_chrome_branded) {
       # These entitlements are bound to the official Google Chrome signing
       # certificate and will not necessarily work in any other build.
@@ -674,6 +680,7 @@ if (is_win) {
         info_plist_target = ":chrome_helper_plist"
       }
 
+      info_plist_target = ":brave_helper_plist"
       extra_substitutions = [
         "CHROMIUM_BUNDLE_ID=$chrome_mac_bundle_id",
         "CHROMIUM_SHORT_NAME=$chrome_product_short_name",
@@ -1149,6 +1156,7 @@ if (is_win) {
     if (is_chrome_branded) {
       bundle_deps += [ ":preinstalled_apps" ]
     }
+    bundle_deps += [ "//brave:framework_bundle_data" ] if (defined(chrome_framework_version)) { framework_contents += [ "Frameworks", ] }
 
     ldflags = [
       "-compatibility_version",
@@ -1333,6 +1341,7 @@ if (is_win) {
 
 group("browser_dependencies") {
   public_deps = [
+    "//brave:browser_dependencies",
     "//build:branding_buildflags",
     "//build:chromeos_buildflags",
     "//chrome/app:shutdown_signal_handlers",
@@ -1435,12 +1444,13 @@ group("child_dependencies") {
       # this is OK because all of content is linked into one library.
       "//content/browser",
     ]
+    assert_no_deps -= [ "//content/browser" ]
   }
 }
 
 if (is_win) {
   process_version_rc_template("chrome_exe_version") {
-    sources = [ "app/chrome_exe.ver" ]
+    sources = [ "//brave/app/brave_exe.ver" ]
     output = "$target_gen_dir/chrome_exe_version.rc"
   }
 
@@ -1494,6 +1504,7 @@ group("resources") {
     "//chrome/browser:resources",
     "//chrome/common:resources",
     "//chrome/renderer:resources",
+    "//brave:resources",
   ]
 }
 
