diff --git a/chrome/installer/mini_installer/configuration.cc b/chrome/installer/mini_installer/configuration.cc
index dfbc86c738b8940cbdefd18af488b3c3c343c83b..c1a6df8c1a250ed4c2fa09d78dc59486b2f7e5b0 100644
--- a/chrome/installer/mini_installer/configuration.cc
+++ b/chrome/installer/mini_installer/configuration.cc
@@ -23,7 +23,11 @@ namespace {
 bool GetGoogleUpdateIsMachineEnvVar() {
   const DWORD kBufferSize = 2;
   StackString<kBufferSize> value;
+#if defined(BRAVE_CHROMIUM_BUILD) && defined(OFFICIAL_BUILD)
+  DWORD length = ::GetEnvironmentVariableW(L"BraveSoftwareUpdateIsMachine",
+#else
   DWORD length = ::GetEnvironmentVariableW(L"GoogleUpdateIsMachine",
+#endif
                                            value.get(), kBufferSize);
   return length == 1 && *value.get() == L'1';
 }
@@ -75,7 +79,9 @@ bool Configuration::ParseCommandLine(const wchar_t* command_line) {
   for (int i = 1; i < argument_count_; ++i) {
     if (0 == ::lstrcmpi(args_[i], L"--system-level"))
       is_system_level_ = true;
-#if BUILDFLAG(GOOGLE_CHROME_BRANDING)
+#if BUILDFLAG(GOOGLE_CHROME_BRANDING) || (defined(BRAVE_CHROMIUM_BUILD) && defined(OFFICIAL_BUILD))
+    // Use original install switch because it isn't visible to user.
+    // Sync this switch with brave/.../chromium_install_modes.cc
     else if (0 == ::lstrcmpi(args_[i], L"--chrome-beta"))
       chrome_app_guid_ = google_update::kBetaAppGuid;
     else if (0 == ::lstrcmpi(args_[i], L"--chrome-dev"))
@@ -127,7 +133,7 @@ void Configuration::ReadResources(HMODULE module) {
 }
 
 bool Configuration::IsUpdatingMultiChrome() const {
-#if BUILDFLAG(GOOGLE_CHROME_BRANDING)
+#if BUILDFLAG(GOOGLE_CHROME_BRANDING) || (defined(BRAVE_CHROMIUM_BUILD) && defined(OFFICIAL_BUILD))
   // Only primary Chrome installs supported multi-install (not canary/SxS).
   if (chrome_app_guid_ != google_update::kAppGuid)
     return false;
