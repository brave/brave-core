diff --git a/tools/crates/gnrt/lib/readme.rs b/tools/crates/gnrt/lib/readme.rs
index f0b5f223a40e5b54add2c088e0e06d3ef94a1578..2555b0de5f75d0e188d69904924bc77c9ec1dce9 100644
--- a/tools/crates/gnrt/lib/readme.rs
+++ b/tools/crates/gnrt/lib/readme.rs
@@ -125,6 +125,7 @@ fn readme_file_from_package<'a>(
     });
     let license_files = if let Some(config_license_files) = config_license_files {
         for path in config_license_files.iter() {
+          if true { continue; }
             ensure!(
                 does_license_file_exist(path)?,
                 "`gnrt_config.toml` for `{crate_name}` crate listed \
@@ -144,7 +145,7 @@ fn readme_file_from_package<'a>(
         Vec::new()
     };
 
-    if license_files.is_empty() {
+    if license_files.is_empty() && false {
         bail!(
             r#"License file not found for crate `{name}-{version}`.
 
@@ -229,6 +230,9 @@ enum LicenseKind {
 
     /// https://spdx.org/licenses/Unicode-3.0.html
     Unicode3,
+    UnicodeDfs2016,
+    BSD2,
+    Mozzila2,
 }
 
 impl Display for LicenseKind {
@@ -243,6 +247,9 @@ impl Display for LicenseKind {
             LicenseKind::ISC => write!(f, "ISC"),
             LicenseKind::Zlib => write!(f, "Zlib"),
             LicenseKind::Unicode3 => write!(f, "Unicode-3.0"),
+            LicenseKind::UnicodeDfs2016 => write!(f, "Unicode-DFS-2016"),
+            LicenseKind::BSD2 => write!(f, "BSD-2-Clause"),
+            LicenseKind::Mozzila2 => write!(f, "Mozilla-Public-License-2.0"),
         }
     }
 }
@@ -288,6 +295,11 @@ static LICENSE_STRING_TO_LICENSE_KIND: LazyLock<HashMap<&'static str, Vec<Licens
         h.insert("BSD-2-Clause OR Apache-2.0 OR MIT", vec![LicenseKind::Apache2]);
         h.insert("Unicode-3.0", vec![LicenseKind::Unicode3]);
         h.insert("Zlib", vec![LicenseKind::Zlib]);
+        h.insert("CC0-1.0 OR MIT-0 OR Apache-2.0", vec![LicenseKind::Apache2]);
+        h.insert("MIT OR Apache-2.0 OR BSD-1-Clause", vec![LicenseKind::Apache2]);
+        h.insert("BSD-2-Clause", vec![LicenseKind::BSD2]);
+        h.insert("MPL-2.0", vec![LicenseKind::Mozzila2]);
+        h.insert("CC0-1.0 OR Apache-2.0", vec![LicenseKind::Apache2]);
         h
     });
 
@@ -316,6 +328,9 @@ static LICENSE_KIND_TO_LICENSE_FILES: LazyLock<HashMap<LicenseKind, Vec<&'static
         h.insert(LicenseKind::ISC, vec!["LICENSE-ISC", "LICENSE.md", "LICENSE"]);
         h.insert(LicenseKind::Zlib, vec!["LICENSE-ZLIB", "LICENSE.md", "LICENSE"]);
         h.insert(LicenseKind::Unicode3, vec!["LICENSE-UNICODE", "LICENSE.md", "LICENSE"]);
+        h.insert(LicenseKind::UnicodeDfs2016, vec!["LICENSE-UNICODE", "LICENSE.md", "LICENSE"]);
+        h.insert(LicenseKind::BSD2, vec!["LICENSE.md", "LICENSE"]);
+        h.insert(LicenseKind::Mozzila2, vec!["LICENSE.md", "LICENSE"]);
         h
     });
 
