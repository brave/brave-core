diff --git a/chrome/android/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarTablet.java b/chrome/android/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarTablet.java
index f22638537239c7ffc4608d12c2a4fa8ffbe20709..289d555ce51fe05c67709942b56de129bfbfc1d9 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarTablet.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/toolbar/top/ToolbarTablet.java
@@ -58,7 +58,7 @@ import java.util.Collection;
  * The Toolbar object for Tablet screens.
  */
 @SuppressLint("Instantiatable")
-public class ToolbarTablet extends ToolbarLayout
+public class ToolbarTablet extends BraveToolbarLayout
         implements OnClickListener, View.OnLongClickListener, TabCountObserver {
     // The number of toolbar buttons that can be hidden at small widths (reload, back, forward).
     public static final int HIDEABLE_BUTTON_COUNT = 3;
@@ -327,10 +327,12 @@ public class ToolbarTablet extends ToolbarLayout
             DownloadUtils.downloadOfflinePage(getContext(), getToolbarDataProvider().getTab());
             RecordUserAction.record("MobileToolbarDownloadPage");
         }
+        super.onClick(v);
     }
 
     @Override
     public boolean onLongClick(View v) {
+        if (super.onLongClick(v)) return true;
         String description = null;
         Context context = getContext();
         Resources resources = context.getResources();
@@ -395,6 +397,7 @@ public class ToolbarTablet extends ToolbarLayout
         mLocationBarTablet.getBackground().setColorFilter(textBoxColor, PorterDuff.Mode.SRC_IN);
 
         mLocationBar.updateVisualsForState();
+        super.onThemeColorChanged(color, shouldAnimate);
     }
 
     /**
