diff --git a/chrome/browser/ui/views/toolbar/toolbar_view.h b/chrome/browser/ui/views/toolbar/toolbar_view.h
index e98e4245808d553c301c2f770af72a4ce37757b1..6ec62e523879adb4444295740f7c85552061b405 100644
--- a/chrome/browser/ui/views/toolbar/toolbar_view.h
+++ b/chrome/browser/ui/views/toolbar/toolbar_view.h
@@ -74,12 +74,14 @@ class ToolbarView : public views::AccessiblePaneView,
   ~ToolbarView() override;
 
   // Create the contents of the Browser Toolbar.
+  virtual
   void Init();
 
   // Forces the toolbar (and transitively the location bar) to update its
   // current state.  If |tab| is non-NULL, we're switching (back?) to this tab
   // and should restore any previous location bar state (such as user editing)
   // as well.
+  virtual
   void Update(content::WebContents* tab);
 
   // Clears the current state for |tab|.
@@ -101,6 +103,7 @@ class ToolbarView : public views::AccessiblePaneView,
 #endif  // defined(OS_CHROMEOS)
 
   // Shows a bookmark bubble and anchors it appropriately.
+  virtual
   void ShowBookmarkBubble(const GURL& url,
                           bool already_bookmarked,
                           bookmarks::BookmarkBubbleObserver* observer);
@@ -182,6 +185,7 @@ class ToolbarView : public views::AccessiblePaneView,
   }
 
  private:
+  friend class BraveToolbarView;
   // Types of display mode this toolbar can have.
   enum DisplayMode {
     DISPLAYMODE_NORMAL,       // Normal toolbar with buttons, etc.
@@ -211,6 +215,7 @@ class ToolbarView : public views::AccessiblePaneView,
   // ToolbarView::CalculatePreferredSize() and ToolbarView::GetMinimumSize().
   // These two functions call through to GetSizeInternal(), passing themselves
   // as the function pointer |View::*get_size|.
+  virtual
   gfx::Size GetSizeInternal(gfx::Size (View::*get_size)() const) const;
 
   // Given toolbar contents of size |size|, returns the total toolbar size.
