diff --git a/tools/crates/gnrt/vendor.rs b/tools/crates/gnrt/vendor.rs
index 17c059a85880f1153ef99ac4a72e29e21d5cbf19..15a58925aab3077f0df09c69a4e998cb8b6e3a8d 100644
--- a/tools/crates/gnrt/vendor.rs
+++ b/tools/crates/gnrt/vendor.rs
@@ -130,7 +130,7 @@ fn download_crates(args: &VendorCommandArgs, paths: &paths::ChromiumPaths) -> Re
         if is_removed(p.id()) {
             println!("Generating placeholder for removed crate {}", &crate_dirname);
             generate_placeholder_crate(p, &crate_path)?;
-        } else {
+        } else if !p.source().is_local() {
             println!("Downloading {}", &crate_dirname);
             download_crate(p.name(), p.version(), paths)?;
             let skip_patches = match &args.no_patches {
@@ -348,7 +348,7 @@ fn apply_patches(
     let crate_dir = vendor_dir.join(get_vendor_dir_for_package(name, version));
 
     let mut patches = Vec::new();
-    let Ok(patch_dir) = std::fs::read_dir(paths.third_party_cargo_root.join("patches").join(name))
+    let Ok(patch_dir) = std::fs::read_dir(paths.third_party_cargo_root.join("patches").join(format!("{name}-{version}")))
     else {
         // No patches for this crate.
         return Ok(());
@@ -368,7 +368,7 @@ fn apply_patches(
         let args = vec![
             "apply".to_string(),
             // We need to rebase from the old versioned directory to the new one.
-            format!("-p{}", crate_dir.ancestors().count()),
+            format!("-p{}", crate_dir.ancestors().count()-1),
             format!("--directory={}", crate_dir.display()),
         ];
         let mut c = std::process::Command::new("git");
