diff --git a/chrome/browser/resources/settings/privacy_page/personalization_options.js b/chrome/browser/resources/settings/privacy_page/personalization_options.js
index fd6a7b11cda563c1e462d6244cce2b4f01c2be77..de554fbd716054b5cf771034062f7d66173df7d6 100644
--- a/chrome/browser/resources/settings/privacy_page/personalization_options.js
+++ b/chrome/browser/resources/settings/privacy_page/personalization_options.js
@@ -66,7 +66,7 @@ export class SettingsPersonalizationOptionsElement extends
       /** @type {SyncStatus} */
       syncStatus: Object,
 
-      // <if expr="_google_chrome and not chromeos">
+      // <if expr="_chromium and not chromeos">
       // TODO(dbeam): make a virtual.* pref namespace and set/get this normally
       // (but handled differently in C++).
       /** @private {chrome.settingsPrivate.PrefObject} */
@@ -125,7 +125,7 @@ export class SettingsPersonalizationOptionsElement extends
 
     this.browserProxy_ = PrivacyPageBrowserProxyImpl.getInstance();
 
-    // <if expr="_google_chrome and not chromeos">
+    // <if expr="_chromium and not chromeos">
     const setMetricsReportingPref = this.setMetricsReportingPref_.bind(this);
     this.addWebUIListener('metrics-reporting-change', setMetricsReportingPref);
     this.browserProxy_.getMetricsReporting().then(setMetricsReportingPref);
@@ -159,7 +159,7 @@ export class SettingsPersonalizationOptionsElement extends
         this.shadowRoot.querySelector('#driveSuggestControl'));
   }
 
-  // <if expr="_google_chrome and not chromeos">
+  // <if expr="_chromium and not chromeos">
   /** @private */
   onMetricsReportingChange_() {
     const enabled = this.$.metricsReportingControl.checked;
@@ -209,6 +209,7 @@ export class SettingsPersonalizationOptionsElement extends
   }
   // </if>
 
+  // <if expr="_google_chrome">
   /**
    * @return {boolean}
    * @private
@@ -258,6 +259,7 @@ export class SettingsPersonalizationOptionsElement extends
     }
     this.showSignoutDialog_ = false;
   }
+  // </if>
 
   /**
    * @param {!Event} e
