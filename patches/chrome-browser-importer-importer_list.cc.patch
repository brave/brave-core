diff --git a/chrome/browser/importer/importer_list.cc b/chrome/browser/importer/importer_list.cc
index da4c6f6cec37523f59fd6b18e9e1c603c8e6a0df..613cd4fd78321310eed78cbb336c9eb1bd2f82c9 100644
--- a/chrome/browser/importer/importer_list.cc
+++ b/chrome/browser/importer/importer_list.cc
@@ -29,6 +29,9 @@
 #include "chrome/common/importer/edge_importer_utils_win.h"
 #endif
 
+void DetectChromeProfiles(std::vector<importer::SourceProfile>* profiles);
+void DetectBraveProfiles(std::vector<importer::SourceProfile>* profiles);
+
 namespace {
 
 #if defined(OS_WIN)
@@ -127,6 +130,7 @@ void DetectFirefoxProfiles(const std::string locale,
     firefox.app_path = app_path;
   firefox.services_supported = importer::HISTORY | importer::FAVORITES |
                                importer::PASSWORDS | importer::SEARCH_ENGINES |
+                               importer::COOKIES |
                                importer::AUTOFILL_FORM_DATA;
   firefox.locale = locale;
   profiles->push_back(firefox);
@@ -145,21 +149,37 @@ std::vector<importer::SourceProfile> DetectSourceProfilesWorker(
 #if defined(OS_WIN)
   if (shell_integration::IsFirefoxDefaultBrowser()) {
     DetectFirefoxProfiles(locale, &profiles);
+    DetectBraveProfiles(&profiles);
     DetectBuiltinWindowsProfiles(&profiles);
+    DetectChromeProfiles(&profiles);
   } else {
     DetectBuiltinWindowsProfiles(&profiles);
+    DetectBraveProfiles(&profiles);
     DetectFirefoxProfiles(locale, &profiles);
+    DetectChromeProfiles(&profiles);
   }
 #elif defined(OS_MACOSX)
   if (shell_integration::IsFirefoxDefaultBrowser()) {
     DetectFirefoxProfiles(locale, &profiles);
+    DetectBraveProfiles(&profiles);
     DetectSafariProfiles(&profiles);
+    DetectChromeProfiles(&profiles);
   } else {
     DetectSafariProfiles(&profiles);
+    DetectBraveProfiles(&profiles);
     DetectFirefoxProfiles(locale, &profiles);
+    DetectChromeProfiles(&profiles);
   }
 #else
-  DetectFirefoxProfiles(locale, &profiles);
+  if (shell_integration::IsFirefoxDefaultBrowser()) {
+    DetectFirefoxProfiles(locale, &profiles);
+    DetectBraveProfiles(&profiles);
+    DetectChromeProfiles(&profiles);
+  } else {
+    DetectBraveProfiles(&profiles);
+    DetectChromeProfiles(&profiles);
+    DetectFirefoxProfiles(locale, &profiles);
+  }
 #endif
   if (include_interactive_profiles) {
     importer::SourceProfile bookmarks_profile;
