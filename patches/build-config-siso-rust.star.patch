diff --git a/build/config/siso/rust.star b/build/config/siso/rust.star
index 37ced20b708661cf5c0a5a925730cafa133ca103..c38bbb202dae03d8958c3429b20a888b3c2d7e96 100644
--- a/build/config/siso/rust.star
+++ b/build/config/siso/rust.star
@@ -166,23 +166,32 @@ def __step_config(ctx, step_config):
     platform_ref = "large"  # Rust actions run faster on large workers.
 
     remote = True
-    remote_link = True
+
+    # TODO(crbug.com/434857701): fix link for target_arch="x86"
+    remote_link = False
+    clang_inputs = [
+        "third_party/llvm-build/Release+Asserts:rustlink",
+    ]
     if runtime.os != "linux":
         remote = False
         remote_link = False
     elif "args.gn" in ctx.metadata:
         gn_args = gn.args(ctx)
-        if gn_args.get("target_os") in ('"mac"', '"ios"', '"win"'):
+        target_os = gn_args.get("target_os")
+        if target_os in ('"mac"', '"ios"'):
+            remote = False
             remote_link = False
-    clang_inputs = [
-        "build/linux/debian_bullseye_amd64-sysroot:rustlink",
-        "third_party/llvm-build/Release+Asserts:rustlink",
-    ]
-    if win_sdk.enabled(ctx):
-        clang_inputs.append(win_sdk.toolchain_dir(ctx) + ":libs")
-    else:
-        remote = False
-        remote_link = False
+        elif target_os == '"win"':
+            remote_link = False
+            if win_sdk.enabled(ctx):
+                clang_inputs.append(win_sdk.toolchain_dir(ctx) + ":libs")
+            else:
+                remote = False
+        else:
+            # TODO(crbug.com/434857701): fix sysroot for target_arch="x86"
+            clang_inputs.append(
+                "build/linux/debian_bullseye_amd64-sysroot:rustlink",
+            )
 
     rust_toolchain = [
         # TODO(b/285225184): use precomputed subtree
