import("//brave/build/config.gni")
import("//testing/test.gni")

static_library("brave_test_support_unit") {
  testonly = true
  sources = [
    "base/brave_unit_test_suite.cc",
    "base/brave_unit_test_suite.h",
    "base/run_all_unittests.cc",
  ]

  public_deps = [
    "//chrome/test:test_support",
    "//base",
    "//chrome:resources",
    "//chrome:strings",
    "//chrome/browser",
    "//chrome/common",
  ]

  if (is_win) {
    deps = [
      "//chrome/install_static/test:test_support",
    ]
  }
}

test("brave_unit_tests") {
  sources = [
    "//brave/browser/brave_resources_util_unittest.cc",
    "//brave/browser/brave_stats_updater_unittest.cc",
    "//brave/browser/net/brave_site_hacks_network_delegate_helper_unittest.cc",
    "//brave/browser/net/brave_static_redirect_network_delegate_helper_unittest.cc",
    "//brave/chromium_src/chrome/browser/signin/account_consistency_disabled_unittest.cc",
    "//brave/chromium_src/components/version_info/brave_version_info_unittest.cc",
    "//brave/common/importer/brave_mock_importer_bridge.cc",
    "//brave/common/importer/brave_mock_importer_bridge.h",
    "//brave/common/shield_exceptions_unittest.cc",
    "//brave/components/brave_shields/browser/ad_block_regional_service_unittest.cc",
    "//chrome/common/importer/mock_importer_bridge.cc",
    "//chrome/common/importer/mock_importer_bridge.h",
    "../browser/importer/chrome_profile_lock_unittest.cc",
    "../utility/importer/chrome_importer_unittest.cc",
    "../utility/importer/brave_importer_unittest.cc",
  ]

  # On Windows, brave_install_static_unittests covers channel test.
  if (is_mac || is_linux) {
    sources += [
      "//brave/common/brave_channel_info_unittest.cc",
    ]
  }

  data = [
    "data/",
  ]

  configs += [
    "//brave/build/geolocation",
  ]

  if (is_linux) {
    configs += [
      "//brave/build/linux:linux_channel_names",
    ]
  }

  deps = [
    "//chrome:browser_dependencies",
    "//chrome:child_dependencies",
    "//chrome/test:test_support",
    "//components/prefs",
    "//components/prefs:test_support",
    "//components/version_info",
    "//content/test:test_support",
    "//components/signin/core/browser",
    "//components/signin/core/browser:test_support",
    "//components/sync_preferences",
    "//content/public/common",
  ]

  public_deps = [
    "//base",
    "//base/test:test_support",
    "//brave:browser_dependencies",
    "//brave/browser",
    "//brave/common",
    "//brave/components/content_settings/core/browser",
    "//brave/renderer",
    "//brave/utility",
    ":brave_test_support_unit",
    "//testing/gtest",
  ]

  deps += [
    "//brave/browser/safebrowsing",
  ]
}

group("brave_browser_tests_deps") {
  if (brave_chromium_build) {
    # force these to build for tests
    deps = [
      "//brave:browser_dependencies",
      "//brave:child_dependencies",
      "//brave:brave",
    ]
  }
}

static_library("browser_test_support") {
  testonly = true
  deps = [
    "//chrome/test:test_support",
  ]

  sources = [
    "base/brave_test_launcher_delegate.cc",
    "base/brave_test_launcher_delegate.h",
    "//brave/app/brave_main_delegate.cc",
    "//brave/app/brave_main_delegate.h",
  ]
}

static_library("browser_tests_runner") {
  testonly = true

  deps = [
    ":browser_test_support",
  ]

  sources = [
    "base/browser_tests_main.cc",
  ]
}

test("brave_browser_tests") {
  sources = [
    "//brave/app/brave_main_delegate_browsertest.cc",
    "//brave/chromium_src/chrome/browser/google/chrome_google_url_tracker_client_browsertest.cc",
    "//brave/chromium_src/third_party/blink/renderer/modules/battery/navigator_batterytest.cc",
    "//brave/chromium_src/third_party/blink/renderer/modules/bluetooth/navigator_bluetoothtest.cc",
    "//brave/chromium_src/third_party/blink/renderer/modules/credentialmanager/credentials_containertest.cc",
    "//brave/browser/brave_content_browser_client_browsertest.cc",
    "//brave/browser/brave_profile_prefs_browsertest.cc",
    "//brave/browser/brave_resources_browsertest.cc",
    "//brave/browser/extensions/api/brave_shields_api_browsertest.cc",
    "//brave/browser/ui/content_settings/brave_widevine_blocked_image_model_browsertest.cc",
    "//brave/browser/ui/webui/brave_welcome_ui_browsertest.cc",
    "//brave/common/brave_channel_info_browsertest.cc",
    "//brave/components/brave_shields/browser/ad_block_service_browsertest.cc",
    "//brave/components/brave_shields/browser/https_everywhere_service_browsertest.cc",
    "//brave/components/brave_shields/browser/tracking_protection_service_browsertest.cc",
    "//brave/browser/extensions/brave_extension_provider_browsertest.cc",
    "//brave/renderer/brave_content_settings_observer_browsertest.cc",
    "//brave/renderer/brave_content_settings_observer_flash_browsertest.cc",
    "//chrome/browser/extensions/browsertest_util.cc",
    "//chrome/browser/extensions/browsertest_util.h",
    "//chrome/browser/extensions/extension_browsertest.cc",
    "//chrome/browser/extensions/extension_browsertest.h",
    "//chrome/browser/extensions/extension_function_test_utils.cc",
    "//chrome/browser/extensions/extension_function_test_utils.h",
    "//chrome/browser/extensions/updater/extension_cache_fake.cc",
    "//chrome/browser/extensions/updater/extension_cache_fake.h",
  ]
  if (is_linux && is_official_build) {
    sources += [
      # BraveViewsDelegateLinuxBrowserTest only works in release(official) build.
      "//brave/browser/ui/views/brave_views_delegate_linux_browsertest.cc",
    ]
    configs += [
      "//brave/build/linux:linux_channel_names",
    ]
  }

  defines = [ "HAS_OUT_OF_PROC_TEST_RUNNER" ]
  deps = [
    "//chrome/browser/ui",
    "//ppapi/buildflags",
    ":brave_browser_tests_deps",
    ":browser_tests_runner",
  ]
  data_deps = [
    "//ppapi:ppapi_tests",
    "//ppapi:power_saver_test_plugin",
  ]
}

if (is_win) {
  test("brave_install_static_unittests") {
    sources = [
      "//brave/chromium_src/chrome/install_static/brave_install_details_unittest.cc",
      "//brave/chromium_src/chrome/install_static/brave_install_modes_unittest.cc",
      "//brave/chromium_src/chrome/install_static/brave_install_util_unittest.cc",
      "//brave/chromium_src/chrome/install_static/brave_product_install_details_unittest.cc",
      "//brave/chromium_src/chrome/install_static/brave_user_data_dir_win_unittest.cc",
    ]
    include_dirs = [ "$target_gen_dir" ]
    deps = [
      "//base",
      "//base/test:run_all_unittests",
      "//base/test:test_support",
      "//chrome/install_static:install_static_util",
      "//chrome/install_static/test:test_support",
      "//testing/gmock",
      "//testing/gtest",
    ]
  }
}
