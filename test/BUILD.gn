import("//brave/build/config.gni")
import("//brave/build/rust/config.gni")
import("//brave/browser/tor/buildflags/buildflags.gni")
import("//brave/browser/translate/buildflags/buildflags.gni")
import("//brave/components/brave_ads/browser/buildflags/buildflags.gni")
import("//brave/components/binance/browser/buildflags/buildflags.gni")
import("//brave/components/brave_referrals/buildflags/buildflags.gni")
import("//brave/components/brave_rewards/browser/buildflags/buildflags.gni")
import("//brave/components/brave_perf_predictor/browser/buildflags/buildflags.gni")
import("//brave/components/brave_sync/buildflags/buildflags.gni")
import("//brave/components/brave_wallet/browser/buildflags/buildflags.gni")
import("//brave/components/brave_wayback_machine/buildflags/buildflags.gni")
import("//brave/components/brave_webtorrent/browser/buildflags/buildflags.gni")
import("//brave/components/greaselion/browser/buildflags/buildflags.gni")
import("//brave/components/speedreader/buildflags.gni")
import("//brave/components/speedreader/rust/ffi/config.gni")
import("//brave/test/testing.gni")
import("//brave/vendor/adblock_rust_ffi/config.gni")
import("//brave/vendor/challenge_bypass_ristretto_ffi/config.gni")
import("//components/gcm_driver/config.gni")
import("//testing/test.gni")
import("//third_party/widevine/cdm/widevine.gni")

if (is_android) {
  import("//build/config/android/rules.gni")
  import("//chrome/android/chrome_public_apk_tmpl.gni")
}

if (fix_rust_install_name) {
  fix_testing_install_name("fix_test_install_name_brave") {
    changes = [
      [adblock_shared_lib_install_name, "@executable_path/" + rebase_path(adblock_lib_path, root_build_dir)],
    ]

    if (brave_rewards_enabled || brave_ads_enabled) {
      changes += [
        [challenge_bypass_shared_lib_install_name, "@executable_path/" + rebase_path(challenge_bypass_lib_path, root_build_dir)]
      ]
    }

    if (enable_speedreader) {
      changes += [
        [speedreader_shared_lib_install_name, "@executable_path/" + rebase_path(speedreader_lib_path, root_build_dir)],
      ]
    }
  }
} else {
  group("fix_test_install_name_brave_unit_tests") {
    testonly = true
    deps = [ ":brave_unit_tests" ]
  }

  group("fix_test_install_name_brave_browser_tests") {
    testonly = true
    deps = [ ":brave_browser_tests" ]
  }
}

static_library("brave_test_support_unit") {
  testonly = true
  # Remove when https://github.com/brave/brave-browser/issues/10613 is resolved
  check_includes = false
  sources = [
    "base/brave_testing_profile.cc",
    "base/brave_testing_profile.h",
    "base/brave_unit_test_suite.cc",
    "base/brave_unit_test_suite.h",
    "base/run_all_unittests.cc",
  ]

  public_deps = [
    "//chrome/test:test_support",
    "//base",
    "//chrome:resources",
    "//chrome:strings",
    "//chrome/browser",
    "//chrome/common",
  ]

  deps = [
    "//components/gcm_driver:gcm_driver",
    "//components/gcm_driver:gcm_buildflags",
  ]

  if (is_win) {
    deps += [
      "//chrome/install_static/test:test_support",
    ]
  }
}

if (!is_ios) {
group("other_unit_tests") {
  testonly = true
  deps = [
    "//brave/components/brave_ads/test:brave_ads_unit_tests",
    "//brave/components/brave_rewards/test:brave_rewards_unit_tests",
  ]

  if (!is_android) {
    deps += [ ":brave_installer_unittests" ]
  } else {
    deps += [ ":brave_public_test_apk" ]
  }
}

test("brave_unit_tests") {
  testonly = true
  # Remove when https://github.com/brave/brave-browser/issues/10613 is resolved
  check_includes = false
  sources = [
    "//brave/browser/brave_content_browser_client_unittest.cc",
    "//brave/browser/brave_resources_util_unittest.cc",
    "//brave/browser/browsing_data/brave_browsing_data_remover_delegate_unittest.cc",
    "//brave/browser/browsing_data/counters/brave_site_settings_counter_unittest.cc",
    "//brave/browser/download/brave_download_item_model_unittest.cc",
    "//brave/browser/metrics/metrics_reporting_util_unittest_linux.cc",
    "//brave/browser/net/brave_ad_block_tp_network_delegate_helper_unittest.cc",
    "//brave/browser/net/brave_block_safebrowsing_urls_unittest.cc",
    "//brave/browser/net/brave_common_static_redirect_network_delegate_helper_unittest.cc",
    "//brave/browser/net/brave_httpse_network_delegate_helper_unittest.cc",
    "//brave/browser/net/brave_network_delegate_base_unittest.cc",
    "//brave/browser/net/brave_site_hacks_network_delegate_helper_unittest.cc",
    "//brave/browser/net/brave_static_redirect_network_delegate_helper_unittest.cc",
    "//brave/browser/net/brave_system_request_handler_unittest.cc",
    "//brave/chromium_src/chrome/browser/history/history_utils_unittest.cc",
    "//brave/chromium_src/chrome/browser/shell_integration_unittest_mac.cc",
    "//brave/chromium_src/chrome/browser/signin/account_consistency_disabled_unittest.cc",
    "//brave/chromium_src/components/autofill/core/browser/autofill_experiments_unittest.cc",
    "//brave/chromium_src/components/metrics/enabled_state_provider_unittest.cc",
    "//brave/chromium_src/components/password_manager/core/browser/password_bubble_experiment_unittest.cc",
    "//brave/chromium_src/components/variations/service/field_trial_unittest.cc",
    "//brave/chromium_src/components/version_info/brave_version_info_unittest.cc",
    "//brave/chromium_src/net/cookies/brave_canonical_cookie_unittest.cc",
    "//brave/chromium_src/services/network/public/cpp/cors/cors_unittest.cc",
    "//brave/common/brave_content_client_unittest.cc",
    "//brave/common/shield_exceptions_unittest.cc",
    "//brave/components/assist_ranker/ranker_model_loader_impl_unittest.cc",
    "//brave/components/brave_private_cdn/private_cdn_helper_unittest.cc",
    "//brave/components/brave_shields/browser/ad_block_regional_service_unittest.cc",
    "//brave/components/brave_shields/browser/adblock_stub_response_unittest.cc",
    "//brave/components/brave_shields/browser/cosmetic_merge_unittest.cc",
    "//brave/components/brave_shields/browser/https_everywhere_recently_used_cache_unittest.cpp",
    "//brave/components/content_settings/core/browser/brave_content_settings_pref_provider_unittest.cc",
    "//brave/components/content_settings/core/browser/brave_content_settings_utils_unittest.cc",
    "//brave/components/l10n/common/locale_util_unittest.cc",
    "//brave/components/ntp_background_images/browser/ntp_background_images_service_unittest.cc",
    "//brave/components/ntp_background_images/browser/ntp_background_images_source_unittest.cc",
    "//brave/components/ntp_background_images/browser/view_counter_model_unittest.cc",
    "//brave/components/ntp_background_images/browser/view_counter_service_unittest.cc",
    "//brave/components/rappor/log_uploader_unittest.cc",
    "//brave/components/translate/core/browser/translate_language_list_unittest.cc",
    "//brave/components/weekly_storage/weekly_storage_unittest.cc",
    "//brave/third_party/libaddressinput/chromium/chrome_metadata_source_unittest.cc",
    "//brave/vendor/brave_base/random_unittest.cc",
    "//components/bookmarks/browser/bookmark_model_unittest.cc",
    "../../components/domain_reliability/test_util.cc",
    "../../components/domain_reliability/test_util.h",
    "//chrome/browser/custom_handlers/test_protocol_handler_registry_delegate.cc",
    "//chrome/browser/custom_handlers/test_protocol_handler_registry_delegate.h",
  ]

  defines = brave_service_key_defines

  deps = [
    ":other_unit_tests",
    "//brave/browser/safebrowsing",
    "//brave/components/brave_private_cdn",
    "//brave/components/ntp_background_images/browser",
    "//brave/vendor/brave_base",
    "//chrome:browser_dependencies",
    "//chrome:child_dependencies",
    "//chrome/test:test_support",
    "//components/content_settings/core/test:test_support",
    "//components/permissions",
    "//components/prefs",
    "//components/prefs:test_support",
    "//components/signin/public/base",
    "//components/sync_preferences",
    "//components/translate/core/browser:test_support",
    "//components/version_info",
    "//content/public/common",
    "//content/test:test_support",
    "//services/network/public/cpp:cpp",
    "//services/network:test_support",
    "//third_party/cacheinvalidation",
  ]

  data = [ "data/" ]

  configs += [
    "//brave/build/geolocation",
  ]

  public_deps = [
    "//base",
    "//base/test:test_support",
    "//brave:browser_dependencies",
    "//brave/browser",
    "//brave/common",
    "//brave/components/content_settings/core/browser",
    "//brave/renderer",
    "//brave/utility",
    ":brave_test_support_unit",
    "//testing/gtest",
  ]

  if (!is_android) {
    sources += [
      "//brave/app/brave_command_line_helper_unittest.cc",
      "//brave/browser/resources/settings/brandcode_config_fetcher_unittest.cc",
      "//brave/browser/resources/settings/reset_report_uploader_unittest.cc",
      "//brave/browser/themes/brave_theme_service_unittest.cc",
      "//brave/browser/ui/toolbar/brave_location_bar_model_delegate_unittest.cc",
      "//brave/browser/ui/views/accelerator_table_unittest.cc",
      "//brave/chromium_src/chrome/browser/devtools/url_constants_unittest.cc",
      "//brave/chromium_src/chrome/browser/profiles/profile_avatar_icon_util_unittest.cc",
      "//brave/chromium_src/chrome/browser/ui/bookmarks/brave_bookmark_context_menu_controller_unittest.cc",
      "//chrome/browser/push_messaging/push_messaging_app_identifier_unittest.cc",
      "//chrome/browser/push_messaging/push_messaging_notification_manager_unittest.cc",
      "//chrome/browser/push_messaging/push_messaging_service_unittest.cc",
      "//chrome/common/importer/mock_importer_bridge.cc",
      "//chrome/common/importer/mock_importer_bridge.h",
      "//components/gcm_driver/account_tracker_unittest.cc",
      "//components/gcm_driver/gcm_account_mapper_unittest.cc",
      "//components/gcm_driver/gcm_account_tracker_unittest.cc",
      "//components/gcm_driver/gcm_client_impl_unittest.cc",
      "//components/gcm_driver/gcm_delayed_task_controller_unittest.cc",
      "//components/gcm_driver/gcm_driver_desktop_unittest.cc",
      "//components/gcm_driver/gcm_driver_unittest.cc",
      "../utility/importer/chrome_importer_unittest.cc",

      # TODO(samartnik): this should work on Android, we will review it once unit tests are set up on CI
      "//brave/browser/autoplay/autoplay_permission_context_unittest.cc",
      "//brave/components/brave_shields/browser/brave_shields_util_unittest.cc",
      "//brave/components/omnibox/browser/fake_autocomplete_provider_client.cc",
      "//brave/components/omnibox/browser/fake_autocomplete_provider_client.h",
      "//brave/components/omnibox/browser/suggested_sites_provider_unittest.cc",
      "//brave/components/omnibox/browser/topsites_provider_unittest.cc",
      "//brave/chromium_src/components/search_engines/brave_template_url_prepopulate_data_unittest.cc",
      "//brave/chromium_src/components/search_engines/brave_template_url_service_util_unittest.cc",
      "//brave/chromium_src/chrome/browser/external_protocol/external_protocol_handler_unittest.cc",
      "//brave/chromium_src/components/translate/core/browser/translate_manager_unittest.cc",
    ]
  }

  # On Windows, brave_install_static_unittests covers channel test.
  if (is_mac || is_linux) {
    sources += [
      "//brave/common/brave_channel_info_unittest.cc",
    ]
  }

  if (is_mac) {
    sources += [
      "//brave/chromium_src/chrome/common/chrome_constants_unittest_mac.cc",
    ]
  }

  if (binance_enabled) {
    sources += [
      "//brave/components/binance/browser/binance_json_parser_unittest.cc"
    ]
  }

  if (is_linux) {
    configs += [
      "//brave/build/linux:linux_channel_names",
    ]
  }

  if (is_android) {
    deps += [
      "//brave:brave_pak_assets",
      "//chrome:chrome_android_core",
      "//chrome/android:chrome_apk_paks",
      "//chrome/test/android:chrome_java_test_support",
      "//components/gcm_driver/instance_id/android:instance_id_driver_test_support_java",
      "//v8:v8_external_startup_data_assets",
    ]
    data += [
      "$root_gen_dir/chrome/android/chrome_apk_paks/chrome_100_percent.pak",
      "$root_gen_dir/chrome/android/chrome_apk_paks/locales/en-US.pak",
      "$root_gen_dir/chrome/android/chrome_apk_paks/resources.pak",
      "$root_out_dir/brave_100_percent.pak",
      "$root_out_dir/brave_resources.pak",
      "//brave/components/brave_perf_predictor/resources/entities-httparchive-nostats.json",
    ]
  }

  if (enable_extensions) {
    sources += [
      "//brave/chromium_src/extensions/browser/sandboxed_unpacker_unittest.cc",
      "//brave/common/importer/chrome_importer_utils_unittest.cc",
      "//brave/browser/extensions/api/brave_extensions_api_client_unittest.cc",
      "//chrome/browser/extensions/extension_service_test_base.cc",
      "//chrome/browser/extensions/extension_service_test_base.h",
    ]

    deps += [
      "//brave/browser/extensions",
      "//extensions/browser:test_support",
      "//extensions/browser/api/web_request",
      "//url",
    ]
  }

  if (enable_brave_referrals) {
    sources += [
      "//brave/browser/brave_stats_updater_unittest.cc",
    ]
    if (!is_android) {
      sources += [
        # TODO(samartnik): this should work on Android, we will review it once unit tests are set up on CI
        "//brave/browser/net/brave_referrals_network_delegate_helper_unittest.cc",
      ]
    }
  }

  if (enable_brave_webtorrent) {
    sources += [
      "//brave/components/brave_webtorrent/browser/net/brave_torrent_redirect_network_delegate_helper_unittest.cc",
      "//brave/browser/extensions/brave_webtorrent_navigation_throttle_unittest.cc",
    ]
  }

  if (brave_wallet_enabled) {
    sources += [
      "//brave/browser/extensions/brave_wallet_unittest.cc",
      "//brave/browser/brave_wallet/brave_wallet_utils_unittest.cc",
    ]
  }

  if (enable_brave_translate_go) {
    sources += [
      "//brave/browser/net/brave_translate_redirect_network_delegate_helper_unittest.cc",
    ]
  }

  if (enable_brave_translate_extension) {
    sources += [
      "//brave/browser/ui/views/translate/brave_translate_bubble_view_unittest.cc",
    ]

    deps += [ "//components/language/core/common" ]
  }

  if (enable_brave_sync) {
    sources += [
      "//brave/components/brave_sync/crypto/crypto_unittest.cc",
      "//brave/components/sync/driver/brave_sync_auth_manager_unittest.cc",
      "//components/sync/base/model_type_unittest.cc",
      "//components/sync/driver/sync_auth_manager_unittest.cc",
      "//components/sync_device_info/device_info_sync_bridge_unittest.cc",
    ]
  }

  if (enable_tor) {
    sources += [
      # TODO(darkdh): move these out and use buildflag guard once it contains non tor specifics
      "//brave/browser/profiles/brave_profile_manager_unittest.cc",
      "//brave/browser/profiles/tor_unittest_profile_manager.cc",
      "//brave/browser/profiles/tor_unittest_profile_manager.h",
      "//brave/browser/tor/tor_navigation_throttle_unittest.cc",
      "//brave/common/tor/tor_test_constants.cc",
      "//brave/common/tor/tor_test_constants.h",
      "//brave/net/proxy_resolution/proxy_config_service_tor_unittest.cc",
      "//brave/net/proxy_resolution/configured_proxy_resolution_service_unittest.cc",
    ]

    deps += [
      "//third_party/blink/public/common",
    ]
  }

  if (enable_brave_wayback_machine) {
    sources += [
      "//brave/components/brave_wayback_machine/brave_wayback_machine_utils_unittest.cc",
    ]
  }

  if (enable_widevine) {
    if (is_win || is_mac) {
      sources += [ "//brave/chromium_src/chrome/browser/component_updater/widevine_cdm_component_installer_unittest.cc" ]
    }

    if (is_linux) {
      sources += [ "//brave/browser/widevine/brave_widevine_bundle_manager_unittest.cc" ]
    }
    deps += [ "//brave/browser/widevine" ]
  }

  if (enable_brave_perf_predictor) {
    sources += [
      "//brave/components/brave_perf_predictor/browser/named_third_party_registry_unittest.cc",
      "//brave/components/brave_perf_predictor/browser/bandwidth_linreg_unittest.cc",
      "//brave/components/brave_perf_predictor/browser/bandwidth_savings_predictor_unittest.cc",
      "//brave/components/brave_perf_predictor/browser/p3a_bandwidth_savings_tracker_unittest.cc",
    ]

    deps += [
      "//brave/components/brave_perf_predictor/browser",
    ]
  }

  if (enable_speedreader) {
    sources += [
      "//brave/components/speedreader/rust/ffi/speedreader_unittest.cc",
    ]

    deps += [
      "//brave/components/speedreader/rust/ffi:speedreader_ffi"
    ]
  }
}
}

if (!is_android && !is_ios) {
test("brave_installer_unittests") {
  # Remove when https://github.com/brave/brave-browser/issues/10613 is resolved
  check_includes = false
  deps = [
    "//base/test:run_all_unittests",
    "//base/test:test_support",
  ]

  if (is_mac) {
    # See chromium_src/base/mac/foundation_util.mm for why this is needed.
    deps += [ "//chrome/common" ]
  }

  if (is_win) {
    sources = [
      "//brave/chromium_src/chrome/install_static/brave_install_details_unittest.cc",
      "//brave/chromium_src/chrome/install_static/brave_install_modes_unittest.cc",
      "//brave/chromium_src/chrome/install_static/brave_install_util_unittest.cc",
      "//brave/chromium_src/chrome/install_static/brave_product_install_details_unittest.cc",
      "//brave/chromium_src/chrome/install_static/brave_user_data_dir_win_unittest.cc",
      "//brave/chromium_src/chrome/installer/mini_installer/brave_mini_installer_unittest.cc",
    ]
    include_dirs = [ "$target_gen_dir" ]
    deps += [
      "//base",
      "//chrome/chrome_elf:nt_registry",
      "//chrome/install_static:install_static_util",
      "//chrome/install_static/test:test_support",
      "//chrome/installer/mini_installer:lib",
    ]
    public_deps = [
      "//testing/gmock",
      "//testing/gtest",
    ]
  }
}
}

group("brave_browser_tests_deps") {
  testonly = true
  if (brave_chromium_build) {
    # force these to build for tests
    deps = [
      "//brave:browser_dependencies",
      "//brave:child_dependencies",
      "//brave:brave",
    ]
  }
}

static_library("browser_test_support") {
  testonly = true
  public_deps = [ "//chrome/test:test_support" ]

  sources = [
    "base/brave_test_launcher_delegate.cc",
    "base/brave_test_launcher_delegate.h",
  ]
}

static_library("browser_tests_runner") {
  testonly = true

  if (is_win) {
    deps = [ "//chrome/installer/util:strings" ]
  }

  public_deps = [ ":browser_test_support" ]

  sources = [
    "base/browser_tests_main.cc",
  ]
}

if (!is_android) {

test("brave_browser_tests") {
  testonly = true
  # Remove when https://github.com/brave/brave-browser/issues/10613 is resolved
  check_includes = false
  sources = [
    "//brave/app/brave_main_delegate_browsertest.cc",
    "//brave/app/brave_main_delegate_runtime_flags_browsertest.cc",
    "//brave/browser/brave_scheme_load_browsertest.cc",
    "//brave/browser/autoplay/autoplay_permission_context_browsertest.cc",
    "//brave/browser/brave_content_browser_client_browsertest.cc",
    "//brave/browser/brave_profile_prefs_browsertest.cc",
    "//brave/browser/brave_first_run_browsertest.h",
    "//brave/browser/brave_first_run_browsertest.cc",
    "//brave/browser/brave_local_state_browsertest.cc",
    "//brave/browser/brave_resources_browsertest.cc",
    "//brave/browser/brave_shields/ad_block_service_browsertest.cc",
    "//brave/browser/brave_shields/cookie_pref_service_browsertest.cc",
    "//brave/browser/brave_stats_updater_browsertest.cc",
    "//brave/browser/browsing_data/brave_clear_browsing_data_browsertest.cc",
    "//brave/browser/devtools/brave_devtools_ui_bindings_browsertest.cc",
    "//brave/browser/extensions/api/brave_shields_api_browsertest.cc",
    "//brave/browser/extensions/api/brave_theme_api_browsertest.cc",
    "//brave/browser/extensions/brave_base_local_data_files_browsertest.cc",
    "//brave/browser/extensions/brave_base_local_data_files_browsertest.h",
    "//brave/browser/extensions/brave_extension_functional_test.cc",
    "//brave/browser/extensions/brave_extension_functional_test.h",
    "//brave/browser/extensions/brave_extension_provider_browsertest.cc",
    "//brave/browser/extensions/brave_theme_event_router_browsertest.cc",
    "//brave/browser/farbling/brave_navigator_plugins_farbling_browsertest.cc",
    "//brave/browser/farbling/brave_webaudio_farbling_browsertest.cc",
    "//brave/browser/farbling/brave_webgl_farbling_browsertest.cc",
    "//brave/browser/net/brave_network_delegate_browsertest.cc",
    "//brave/browser/net/brave_network_delegate_hsts_fingerprinting_browsertest.cc",
    "//brave/browser/net/brave_system_request_handler_browsertest.cc",
    "//brave/browser/policy/brave_policy_browsertest.cc",
    "//brave/browser/profiles/brave_bookmark_model_loaded_observer_browsertest.cc",
    "//brave/browser/profiles/brave_profile_manager_browsertest.cc",
    "//brave/browser/renderer_context_menu/brave_mock_render_view_context_menu.cc",
    "//brave/browser/renderer_context_menu/brave_mock_render_view_context_menu.h",
    "//brave/browser/renderer_context_menu/brave_spelling_menu_observer_browsertest.cc",
    "//brave/browser/search_engines/search_engine_provider_service_browsertest.cc",
    "//brave/browser/search_engines/search_engine_tracker_browsertest.cc",
    "//brave/browser/themes/brave_dark_mode_prefs_migration_browsertest.cc",
    "//brave/browser/themes/brave_theme_service_browsertest.cc",
    "//brave/browser/ui/bookmark/bookmark_tab_helper_browsertest.cc",
    "//brave/browser/ui/brave_browser_command_controller_browsertest.cc",
    "//brave/browser/ui/content_settings/brave_autoplay_blocked_image_model_browsertest.cc",
    "//brave/browser/ui/views/brave_actions/brave_actions_container_browsertest.cc",
    "//brave/browser/ui/views/bookmarks/bookmark_bar_browsertest.cc",
    "//brave/browser/ui/views/omnibox/brave_omnibox_view_views_browsertest.cc",
    "//brave/browser/ui/views/omnibox/omnibox_autocomplete_browsertest.cc",
    "//brave/browser/ui/views/profiles/brave_profile_menu_view_browsertest.cc",
    "//brave/browser/ui/views/tabs/brave_tab_context_menu_contents_browsertest.cc",
    "//brave/browser/ui/views/toolbar/brave_toolbar_view_browsertest.cc",
    "//brave/browser/ui/webui/brave_new_tab_ui_browsertest.cc",
    "//brave/browser/ui/webui/brave_welcome_ui_browsertest.cc",
    "//brave/browser/ui/toolbar/brave_app_menu_model_browsertest.cc",
    "//brave/chromium_src/chrome/browser/media/router/media_router_feature_browsertest.cc",
    "//brave/chromium_src/chrome/browser/profiles/profile_window_browsertest.cc",
    "//brave/chromium_src/chrome/browser/ui/views/location_bar/location_bar_view_browsertest.cc",
    "//brave/chromium_src/chrome/browser/ui/views/tabs/tab_hover_card_bubble_view_browsertest.cc",
    "//brave/chromium_src/components/content_settings/core/browser/brave_content_settings_registry_browsertest.cc",
    "//brave/chromium_src/third_party/blink/public/platform/disable_client_hints_browsertest.cc",
    "//brave/chromium_src/third_party/blink/renderer/core/frame/reporting_observer_browsertest.cc",
    "//brave/chromium_src/third_party/blink/renderer/modules/battery/navigator_batterytest.cc",
    "//brave/chromium_src/third_party/blink/renderer/modules/bluetooth/navigator_bluetoothtest.cc",
    "//brave/common/brave_channel_info_browsertest.cc",
    "//brave/components/brave_shields/browser/https_everywhere_service_browsertest.cc",
    "//brave/components/brave_shields/browser/referrer_whitelist_service_browsertest.cc",
    "//brave/components/brave_shields/browser/tracking_protection_service_browsertest.cc",
    "//brave/components/content_settings/renderer/brave_content_settings_agent_impl_browsertest.cc",
    "//brave/components/content_settings/renderer/brave_content_settings_agent_impl_flash_browsertest.cc",
    "//brave/components/l10n/browser/locale_helper_mock.cc",
    "//brave/components/l10n/browser/locale_helper_mock.h",
    "//brave/third_party/blink/renderer/modules/brave/navigator_browsertest.cc",
    "//chrome/browser/extensions/browsertest_util.cc",
    "//chrome/browser/extensions/browsertest_util.h",
    "//chrome/browser/extensions/extension_browsertest.cc",
    "//chrome/browser/extensions/extension_browsertest.h",
    "//chrome/browser/extensions/extension_function_test_utils.cc",
    "//chrome/browser/extensions/extension_function_test_utils.h",
    "//chrome/browser/media/media_browsertest.cc",
    "//chrome/browser/media/media_browsertest.h",
    "//chrome/browser/ui/test/test_browser_dialog.cc",
    "//chrome/browser/ui/test/test_browser_dialog.h",
    "//chrome/browser/ui/test/test_browser_ui.cc",
    "//chrome/browser/ui/test/test_browser_ui.h",
  ]

  if (is_mac) {
    sources += [
      "//chrome/browser/ui/test/test_browser_dialog_mac.h",
      "//chrome/browser/ui/test/test_browser_dialog_mac.mm",
    ]
  }

  deps = []

  if (enable_widevine) {
    sources += [
      "//brave/browser/widevine/widevine_permission_request_browsertest.cc",
      "//brave/browser/widevine/widevine_prefs_migration_browsertest.cc",
    ]
    deps += [ "//brave/browser/widevine" ]
  }

  if (enable_brave_perf_predictor) {
    sources += [
      "//brave/components/brave_perf_predictor/browser/perf_predictor_tab_helper_browsertest.cc",
    ]

    deps += [
      "//brave/components/brave_perf_predictor/browser",
    ]
  }

  if (enable_greaselion) {
    sources += [
      "//brave/browser/greaselion/greaselion_browsertest.cc",
    ]
  }

  if (brave_wallet_enabled) {
    sources += [
      "//brave/browser/extensions/api/brave_wallet_api_browsertest.cc",
      "//brave/browser/extensions/brave_wallet_apitest.cc",
    ]
  }

  if (binance_enabled) {
    sources += [
      "//brave/components/binance/browser/binance_service_browsertest.cc",
    ]
  }

  if (brave_rewards_enabled) {
    sources += [
      "//brave/components/brave_rewards/browser/test/common/rewards_browsertest_context_helper.cc",
      "//brave/components/brave_rewards/browser/test/common/rewards_browsertest_context_helper.h",
      "//brave/components/brave_rewards/browser/test/common/rewards_browsertest_context_util.cc",
      "//brave/components/brave_rewards/browser/test/common/rewards_browsertest_context_util.h",
      "//brave/components/brave_rewards/browser/test/common/rewards_browsertest_contribution.cc",
      "//brave/components/brave_rewards/browser/test/common/rewards_browsertest_contribution.h",
      "//brave/components/brave_rewards/browser/test/common/rewards_browsertest_network_util.cc",
      "//brave/components/brave_rewards/browser/test/common/rewards_browsertest_network_util.h",
      "//brave/components/brave_rewards/browser/test/common/rewards_browsertest_promotion.cc",
      "//brave/components/brave_rewards/browser/test/common/rewards_browsertest_promotion.h",
      "//brave/components/brave_rewards/browser/test/common/rewards_browsertest_response.cc",
      "//brave/components/brave_rewards/browser/test/common/rewards_browsertest_response.h",
      "//brave/components/brave_rewards/browser/test/common/rewards_browsertest_util.cc",
      "//brave/components/brave_rewards/browser/test/common/rewards_browsertest_util.h",
      "//brave/components/brave_rewards/browser/test/rewards_browsertest.cc",
      "//brave/components/brave_rewards/browser/test/rewards_contribution_browsertest.cc",
      "//brave/components/brave_rewards/browser/test/rewards_database_browsertest.cc",
      "//brave/components/brave_rewards/browser/test/rewards_flag_browsertest.cc",
      "//brave/components/brave_rewards/browser/test/rewards_notification_browsertest.cc",
      "//brave/components/brave_rewards/browser/test/rewards_promotion_browsertest.cc",
      "//brave/components/brave_rewards/browser/test/rewards_publisher_browsertest.cc",
      "//brave/components/brave_rewards/browser/test/rewards_state_browsertest.cc",
      "//brave/components/brave_ads/browser/ads_service_browsertest.cc",
      "//brave/components/brave_ads/browser/notification_helper_mock.cc",
      "//brave/components/brave_ads/browser/notification_helper_mock.h",
    ]

    deps += [
      "//brave/vendor/bat-native-ads",
      "//brave/vendor/bat-native-confirmations",
      "//brave/vendor/bat-native-ledger",
    ]

    configs += [ "//brave/vendor/bat-native-ledger:internal_config" ]
    configs += [ "//brave/vendor/bat-native-ads:internal_config" ]
    configs += [ "//brave/vendor/bat-native-confirmations:internal_config" ]
  }

  if (enable_tor) {
    sources += [
      "//brave/browser/extensions/brave_tor_client_updater_browsertest.cc",
    ]
  }

  if (enable_brave_wayback_machine) {
    sources += [
      "//brave/components/brave_wayback_machine/brave_wayback_machine_browsertest.cc",
    ]
  }

  if (enable_speedreader) {
    sources += [
      "//brave/browser/speedreader/speedreader_browsertest.cc",
    ]
  }

  if (is_win || is_linux) {
    sources += [
      "//brave/browser/renderer_context_menu/brave_spelling_options_submenu_observer_browsertest.cc",
    ]
  }

  # API tests
  sources += [
    "//brave/browser/extensions/brave_shields_apitest.cc",
    "//chrome/browser/extensions/extension_apitest.cc",
    "//chrome/browser/extensions/extension_apitest.h",
  ]

  if (is_linux) {
    sources += [
      "//brave/browser/ui/views/brave_views_delegate_linux_browsertest.cc",
    ]
    configs += [
      "//brave/build/linux:linux_channel_names",
    ]
  }

  defines = [ "HAS_OUT_OF_PROC_TEST_RUNNER" ]
  deps += [
    "//brave/app:command_ids",
    "//brave/browser/tor:buildflags",
    "//brave/common:pref_names",
    "//brave/common/tor:pref_names",
    "//brave/components/brave_rewards/browser/buildflags:buildflags",
    "//brave/components/brave_sync/buildflags:buildflags",
    "//brave/components/brave_wallet/browser/buildflags:buildflags",
    "//chrome/browser/ui",
    "//chrome/test:test_support_ui",
    "//components/embedder_support",
    "//components/language/core/common",
    "//components/prefs",
    "//content/test:test_support",
    "//ppapi/buildflags",
    ":brave_browser_tests_deps",
    "//third_party/blink/public/common",
    "//ui/views",
  ]

  public_deps = [ ":browser_tests_runner" ]

  # enable_plugins should be used here
  if (!is_android) {
  data_deps = [
    "//ppapi:ppapi_tests",
    "//ppapi:power_saver_test_plugin",
  ]
  }
}
} else { # if (!is_android) {
  group("brave_browser_tests") {}
}

# All in this section is for running instrumentation java tests
if (is_android) {
  brave_public_test_manifest_package = "com.brave.browser.tests"

  brave_public_test_apk_manifest =
      "$root_gen_dir/brave_public_test_apk_manifest/AndroidManifest.xml"

  jinja_template("brave_public_test_apk_manifest") {
    input = "//brave/android/javatests/AndroidManifest.xml"
    includes = [ "//chrome/android/java/AndroidManifest.xml" ]
    output = brave_public_test_apk_manifest
    variables = default_chrome_public_jinja_variables
    variables += [
      "manifest_package=$brave_public_test_manifest_package",
      "min_sdk_version=19",
      "target_sdk_version=$android_sdk_version",
    ]
  }

  chrome_public_common_apk_or_module_tmpl("brave_public_test_apk") {
    testonly = true
    target_type = "instrumentation_test_apk"
    apk_name = "BravePublicTest"
    android_manifest = brave_public_test_apk_manifest
    android_manifest_dep = ":brave_public_test_apk_manifest"
    shared_libraries = [ "//chrome/android:libchromefortest" ]
    if (!is_java_debug) {
      proguard_enabled = true
      proguard_configs = [ "//brave/android/java/apk_for_test.flags" ]
    }

    sources = [
      "//brave/android/javatests/org/chromium/chrome/browser/BravePrivateTabTest.java",
      "//brave/android/javatests/org/chromium/chrome/browser/BytecodeTest.java",
    ]

    deps = [
      "//base:base_java",
      "//base:base_java_test_support",
      "//chrome/android:chrome_apk_pak_assets",
      "//chrome/android:chrome_public_base_module_java_for_test",
      "//chrome/test/android:chrome_java_test_support",
      "//components/search_engines/android:java",
      "//components/sync/android:sync_java",
      "//third_party/junit",
    ]
  }
} # if (is_android) {
