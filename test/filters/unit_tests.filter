##
## Upstream tests to disable
##
## When adding a new filter to this list, please include a short description of
## why the filter is required and create an associated tracking issue.
##

# These tests fails because we disable
# content_settings::features::kTrackingProtection3pcd
-All/CookieControlsUserBypassTrackingProtectionUiTest.ProtectionsOnForActFeaturesWhenCookiesAreEnforced/*

# These tests won't work without TPM hardware
-TPMMetricsProviderTest.GetMetricsFullName
-TpmIdentifierTest.TpmTest

# This test fails because of the following CHECK in identity_test_utils.cc:
# identity_manager->AreRefreshTokensLoaded()
-ChromeAutofillAiClientTest.EligibilityOf*
-TabOrganizationServiceTest.*

# This test fails because we don't use kChromeUINewTabPageThirdPartyURL
-PermissionSubscriptionTest.SubscribeUnsubscribeForNewTabPage

# These tests fail because:
# 1. UPDATER_DEV_ENDPOINT is empty which leads to
# 2. BraveExtensionsClient having webstore_update_url_ as an empty GURL;
# 3. The tests load an extension with an empty update url which causes
# 4. ChromeContentVerifierDelegate::IsFromWebstore return true and causes
# 5. ChromeContentVerifierDelegate::GetVerifierSourceType to get VerifyInfo as
#    ENFORCE (instead of NONE in upstream test), which
# 6. Causes eventual verification of extension's verified_contents.json file
# 7. Which causes the file to be deleted because it's not valid.
# 8. The tests fail because they expect the file to be present.
-MV2/ExtensionProtocolsTest.MetadataFolder/0
-MV3/ExtensionProtocolsTest.MetadataFolder/0

# These tests fail because sync_helper::IsSyncable(extension) returns false
# due to UPDATER_DEV_ENDPOINT being empty and not matching expected store URL.
-ExtensionSyncServiceCustomGalleryTest.ProcessSyncDataDeferredEnable
-ExtensionSyncServiceCustomGalleryTest.ProcessSyncDataPermissionApproval
-ExtensionSyncServiceTest.AccountExtensionTypeChangesWithSync

# This test fails because BRAVE_FINGERPRINTING_V2 and BRAVE_HTTPS_UPGRADE don't
# have readable names and aren't in the test's list of types that are expected
# to have no name.
-SafetyHubHandlerTest.RevokeAllContentSettingTypes

# This test fails because we disable LensOverlay, which is one of the sidepanel
# actions the test expects to find.
-CustomizeToolbarHandlerTest.ListActions

# This test fails because the message it checks has Brave intead of Google.
-CookieBrowsingDataCounterUtilsTest.CookieCounterResult
-CookieBrowsingDataCounterUtilsTest.CookieCounterResultExplicitSigninDisabled
-SaveCardBubbleControllerImplTestWithCvCStorageAndFilling.UploadCardSaveWithCvcDialogContent
-TemplateURLServiceTest.DefaultSearchProviderKeywordConflictReentrancy/SearchEngineChoice*

# These tests crash because pinned_toolbar_actions_container_ in
# BraveToolbarView is set to nullptr
-PinnedToolbarActionsContainerTest.*

# Disabling signin promo tests as brave does not support them.
-ShowSigninPromoTestExplicitBrowserSignin.*

# This test crashes due to invalid memory access as described in the comment in
# PrefChangeRegistrar::~PrefChangeRegistrar:
# // If you see an invalid memory access in this destructor, this
# // PrefChangeRegistrar might be subscribed to an OffTheRecordProfileImpl that
# // has been destroyed. This should not happen any more but be warned.
# The test creates an OTR profile and the invalid memory access happens in the
# BraveRendererUpdater d'tor when destroying PrefChangeRegistrar for
# kWidevineEnabled. This needs further investigation.
-ExtensionWebRequestTest.BrowserContextShutdown

# These tests fail because we stub search_engines::IsChoiceScreenFlagEnabled to
# always return false
-SearchEngineChoiceDialogServiceTest.*

# These tests DCHECK in CookieControlsBubbleCoordinator::ShowBubble
# because we circumvent creation of CookieControlsIconView
# in PageActionIconController
-CookieControlsBubbleCoordinatorTest.ShowBubbleTest
-CookieControlsBubbleViewImplTest.BubbleWidth
-SearchEngineListCountryOverrideParametrizedTest.CheckNumberOfSearchEngines/AllEeaSearchEngineList
-SearchEngineListCountryOverrideParametrizedTest.CheckNumberOfSearchEngines/BelgiumSearchEngineList
-SearchEngineListCountryOverrideParametrizedTest.CheckNumberOfSearchEngines/DefaultSearchEngineList

# These tests crash because we have kOptimizationHints feature disabled, which
# causes OptimizationGuideKeyedServiceFactory::GetForProfile return a nullptr.
-AILanguageModelHackyPrototypeTest.Basic
-AILanguageModelTest.*
-AIManagerTest.*
-AIRewriterTest.*
-AISummarizerTest.*
-AIWriterTest.*
-All/AILanguageModelVisionTest.*
-ChangeFormSubmissionVerifierTest.*
-ChromeAutofillAiClientTest.GetModelExecutor
-ChromeComposeClientTest.*
-ComposeEnablingTest.*
-ComposePopupAutofillDriverTest.*
-NotificationContentDetectionServiceFactoryTest.DisabledForAndroidArmAndLowEndDevices
-WallpaperSearchHandlerTest.*

# These tests fail because we don't use upstream's material colors.
-MaterialNewTabPageColorMixerTest.*

# These tests fail because we disable kFirstPartySets.
-RelatedWebsiteSetsSourceTest.RWS
-RelatedWebsiteSetsSourceTest.RWS_Empty
-RelatedWebsiteSetsSourceTest.SubsetsAreSorted

# These tests fail because we override PrivacySandboxSettings, specifically
# BravePrivacySandboxSettings::AreRelatedWebsiteSetsEnabled() returns false.
-All/FirstPartySetsPolicyServicePrefTest.FindEntry_*
-All/FirstPartySetsPolicyServicePrefTest.ForEachEffectiveSetEntry_*
-FirstPartySetsPolicyServiceFactoryTest.OffTheRecordProfile_DistinctAndDisabled
-FirstPartySetsPolicyServiceResumeThrottleTest.RegisterThrottleResumeCallback
-FirstPartySetsPolicyServiceTest.*

# These tests fail because we change the default for TOP_LEVEL_STORAGE_ACCESS
# to CONTENT_SETTING_BLOCK.
-TopLevelStorageAccessPermissionContextAPIWithFirstPartySetsTest.ImplicitGrant_AutograntedWithinFPS
-TopLevelStorageAccessPermissionContextAPIWithFirstPartySetsTest.ImplicitGrant_CrossSiteFrameQueryStillAsk

# These tests fail because the error message contains "Brave" instead of
# "Chrome" or "Chromium" (the string is hard-coded into the test)
# https://github.com/brave/brave-browser/issues/25728
-All/SiteSettingsHandlerTest.ZoomLevels/*

# These tests fail because we've disabled the commerce::kPriceAnnotations
# feature
-PriceTrackingIconViewIntegrationTest.*

# This test fails because tab_next_close_button->GetBoundsInScreen().Contains(tab_center)
# returns false instead of true
# https://github.com/brave/brave-browser/issues/25729
-TabContainerTest.RemoveTabInGroupWithTabClosingMode

# These tests fail because Brave overrides how underlines are drawn for tab
# groups
-TabContainerTest.GroupUnderlineBasics
-TabGroupViewsTest.UnderlineBoundsWhenTabsAreNotVisible

# This test is disabled as we have our own ink drop configs.
-ToolbarInkDropUtilTest.ConfigureInkDropForToolbarTest

# The following tests are disabled for BraveRenderViewContextMenu::InitMenu
# attempting to check Tor statuses, which dereferences an uninitialised
# g_browser_process->local_state().
-PasswordsPrivateDelegateImplTest.ShowAddShortcutDialog
-PerformanceHandlerTest.GetCurrentOpenSites

# Prerender is disabled
-PrerenderManagerBasicRequirementTest.*
-PrerendererNavigationPredictorPrefetchHoldbackDisabledTest.*
-PrerenderGWSPrefetchHoldbackOffTest.*
-PrerenderManagerTest.DestroyedOnNavigateAway
-PrerenderManagerTest.DisallowSearchUrlBookmarkBar
-PrerenderManagerTest.DisallowSearchUrlNewTabPage
-PrerenderManagerTest.StartCleanPrerenderDirectUrlInput
-PrerenderManagerTest.StartCleanSearchSuggestionPrerender
-PrerenderManagerTest.StartNewPrerenderDirectUrlInput
-PrerenderManagerTest.StartNewSuggestionPrerender
-PrerenderManagerTest.StartSameSuggestionPrerender
-PrerenderTest.*

# This test fails due to Brave's disabling of header variation (e.g overrides
# for GetClientDataHeaders)
-RealboxHandlerTest.RealboxLensVariationsContainsVariations

# These tests fail because we intentionally disable DICE signin via
# BraveAccountConsistencyModeManager::IsDiceSignInAllowed()
-DiceResponseHandlerTest.Signin
-DiceSigninUiUtilTest.*
-DiceTabHelperPrerenderTest.SigninStatusAfterPrerendering
-DiceWebSigninInterceptorForcedSeparationTest.*
-DiceWebSigninInterceptorTest.*
-GAIAInfoUpdateServiceTest.*
-SigninUiUtilWithUnoDesktopTest.ShowExtensionSigninPrompt*

# This test fails because we intentionally stub out
# IdentityManager::PrepareForAddingNewAccount
-DiceTabHelperTest.Initialization

# These tests fail because we disable the privacy sandbox
-PrivacySandboxServiceTest.*

# These tests fail because we disable the
# privacy_sandbox::kEnforcePrivacySandboxAttestations feature
-PrivacySandboxAttestationsHistograms/PrivacySandboxAttestationsHistogramsTest.*/*
-PrivacySandboxAttestationsInstallerFeatureEnabledTest.*

# These tests fail because we override PrivacySandboxSettings (specifically,
# GetCookieDeprecationExperimentCurrentEligibility)
-EligibilityServiceHistogramTests/EligibilityServiceHistogramTest.ProfileEligibilityMismatch/*
-EligibilityServiceTest.ClientEligibilityKnown_ClientEligibilityNotSet
-EligibilityServiceTest.ClientEligibilityUnknownProfileEligible_ClientEligibilitySet
-EligibilityServiceTest.ClientEligibilityUnknownProfileIneligible_ClientEligibilitySet

# This test fails because we intentionally disable the Federated Credential
# Management API via features::kFedCm
-FederatedIdentityApiPermissionContextTest.WhitelistedSiteForThirdPartyCookies

# These tests fail because we intentionally disable preloading via
# features::kEarlyHintsPreloadForNavigation
-PreconnectManagerTest.*

# This test is disabled because the Brave NTP doesn't support this feature
-NewTabPageModulesTest.HasModulesEnabled_SignedInAccount

# Isolated Web Apps (IWAs) use web bundles which we don't support.
-All/InstallIsolatedWebAppCommandBundleTest.*
-All/IsolatedWebAppURLLoaderFactorySignedWebBundleTest.*
-InstallIsolatedWebAppCommandManifestIconsTest.*
-InstallIsolatedWebAppCommandManifestTest.*
-InstallIsolatedWebAppCommandMetricsTest.*
-InstallIsolatedWebAppCommandTest.*
-IsolatedWebAppURLLoaderFactoryForServiceWorkerTest.*
-IsolatedWebAppURLLoaderFactoryTest.*

# These tests fail because IdentityManager's primary account has no kSignin
# consent level
-AccountExtensionTrackerUnitTest.AccountExtensionsRemovedWhenSignedOut
-AccountExtensionTrackerUnitTest.AccountExtensionTypeResetWhenSignedOut
-AccountExtensionTrackerUnitTest.AccountExtensionTypeSignedIn
-AccountExtensionTrackerUnitTest.AccountExtensionTypeTransportMode
-AccountsPolicyManagerTest.ClearProfileWhenSigninAndRevokeSyncNotAllowed
-AccountsPolicyManagerTest.ClearProfileWhenSigninAndSignoutNotAllowed
-AppMenuModelTest.ProfileSyncOnTest
-BrowserSigninDetectorServiceTest.LateObservation
-ChromeAutofillPredictionImprovementsClientTest.EligibilityOfNotSignedInUser
-ChromeAutofillPredictionImprovementsClientTest.EligibilityOfSignedInUser
-ChromeAutofillPredictionImprovementsClientTest.EligibilityOfSignedInUserWithMlDisabled
-ChromeAutofillPredictionImprovementsClientTest.EligibilityOfSignedInUserWithMlEnabled
-DeveloperPrivateApiAllowlistUnitTest.*
-DeveloperPrivateApiUnitTest.RepairNonCWSExtension
-DeveloperPrivateApiTransportModeUnitTest.CannotUploadAfterSignOut
-DeveloperPrivateApiTransportModeUnitTest.CannotUploadWithFullSync
-DeveloperPrivateApiTransportModeUnitTest.ExtensionUploadableOnSignIn
-DeveloperPrivateApiTransportModeUnitTest.UploadUpdatedAfterIncomingSync
-DeveloperPrivateApiTransportModeUnitTest.UploadExtensionToAccount*
-EnclaveAuthenticatorRequestDelegateTest.BrowserProvidedPasskeysAvailable
-EnclaveAuthenticatorRequestDelegateTest.BrowserProvidedPasskeysAvailableForSignedInUsers
-EnclaveAuthenticatorRequestDelegateTest.BrowserProvidedPasskeysAvailable_NoAccount
-EnclaveManagerTest.PrimaryUserChange
-ExtensionInstalledBubbleModelTransportModeTest.ShowSigninPromo_NonExtensionsExplicitSignin
-ExtensionSyncServiceTransportModeTest.AccountExtensionTypeChangesWithSync
-ExtensionSyncServiceTransportModeTest.OnlySyncAccountExtensions
-ManagePasswordsUIControllerWithBrowserTestExplicitBrowserSignin.MovePasswordUponSigninWithExistingAccount
-PeopleHandlerDiceTest.StoredAccountsList
-PeopleHandlerDiceUnifiedConsentTest.StoredAccountsList
-PeopleHandlerSignoutTest.SignoutNotAllowedSyncOn
-PeopleHandlerSignoutTest.SignoutWithSyncOn
-PeopleHandlerTest.*
-PeopleHandlerWebOnlySigninTest.ChromeSigninUserAvailableOnWebSignin
-ShowPromoTest.ShowPromoWithNoAccount
-ShowPromoTest.ShowPromoWithSignedInAccount
-ShowSigninPromoTestWithFeatureFlags.RecordSignInPromoShownWithAccount
-ShowSigninPromoTestWithFeatureFlags.RecordSignInPromoShownWithAccount_PromoShouldShowForDifferentType
-SigninManagerSupervisedUserTest.SignoutOnCookiesDeletedAllowed
-SigninManagerSupervisedUserTest.SignoutOnCookiesDeletedNotAllowed/*
-SignInPromoVersionTest.SignInPromoVersions
-SignoutAllowed/SigninManagerTest.*

# Failed because we disabled upstream's entire client-side field trials.
# See ChromeBrowserFieldTrials.
-ChromeBrowserFieldTrialsTest.SamplingTrials

# These tests fail because we disable safe browsing enhanced protection and
# patch safe_browsing::IsEnhancedProtectionEnabled to return false
-All/ClientSideDetectionServiceTest.GetNumReportTestESB/0
-All/ClientSideDetectionServiceTest.GetNumReportTestESB/1
-All/ClientSideDetectionServiceTest.GetNumReportTestESB/2
-All/ClientSideDetectionServiceTest.GetNumReportTestESB/3
-All/ClientSideDetectionServiceTest.GetNumReportTestESB/6
-All/ClientSideDetectionServiceTest.GetNumReportTestESB/7
-All/ClientSideDetectionServiceTest.TestModelEligibilityReasonCheckAtFailedInquiry/1
-All/ClientSideDetectionServiceTest.TestModelEligibilityReasonCheckAtFailedInquiry/3
-All/ClientSideDetectionServiceTest.TestOnDeviceModelFetchFailureCall/1
-All/ClientSideDetectionServiceTest.TestOnDeviceModelFetchFailureCall/3
-All/ClientSideDetectionServiceTest.TestOnDeviceModelFetchSuccessCall/1
-All/ClientSideDetectionServiceTest.TestOnDeviceModelFetchSuccessCall/3
-All/ClientSideDetectionServiceTest.TestReceivingImageEmbedderUpdatesAfterResubscription/0
-All/ClientSideDetectionServiceTest.TestReceivingImageEmbedderUpdatesAfterResubscription/1
-All/ClientSideDetectionServiceTest.TestReceivingImageEmbedderUpdatesAfterResubscription/2
-All/ClientSideDetectionServiceTest.TestReceivingImageEmbedderUpdatesAfterResubscription/3
-All/ClientSideDetectionServiceTest.TestReceivingImageEmbedderUpdatesAfterResubscription/5
-All/ClientSideDetectionServiceTest.TestReceivingImageEmbedderUpdatesAfterResubscription/7
-All/ClientSideDetectionServiceTest.TestSessionCreationFailure/1
-All/ClientSideDetectionServiceTest.TestSessionCreationFailure/3
-All/ClientSideDetectionServiceTest.TestSessionCreationSuccess/1
-All/ClientSideDetectionServiceTest.TestSessionCreationSuccess/3
-All/ClientSideDetectionServiceTest.TestSessionExecutionAndResponseParseSuccess/1
-All/ClientSideDetectionServiceTest.TestSessionExecutionAndResponseParseSuccess/3
-All/ClientSideDetectionServiceTest.TestSessionExecutionFailure/1
-All/ClientSideDetectionServiceTest.TestSessionExecutionFailure/3
-All/ClientSideDetectionServiceTest.TestSessionExecutionSuccessButFailedParsing/1
-All/ClientSideDetectionServiceTest.TestSessionExecutionSuccessButFailedParsing/3
-All/ClientSideDetectionServiceTest.TestSessionExecutionSuccessButNotComplete/1
-All/ClientSideDetectionServiceTest.TestSessionExecutionSuccessButNotComplete/3
-ChromeDownloadManagerDelegateTestWithSafeBrowsing.AutoCanceledReport_Sent
-ChromeDownloadManagerDelegateTestWithSafeBrowsing.CanceledReportAtShutdown_Persisted
-ChromeEnterpriseRealTimeUrlLookupServiceTest.TestStartLookup_EnhancedProtectionRequestWithReferringAppInfo
-ChromePingManagerFactoryTest.ShouldFetchAccessTokenForReport_Yes
-ChromePingManagerFactoryTest.ShouldSendPersistedReport_Yes
-ChromeTailoredSecurityServiceTest.EpAlreadyEnabledDoesNotShowDialog
-ChromeTailoredSecurityServiceTest.EpAlreadyEnabledLeavesEpEnabled
-ChromeTailoredSecurityServiceTest.EpEnabledByTsAndTsNowDisabledDisablesEp
-ChromeTailoredSecurityServiceTest.EpEnabledByUserTsDisabledDoesNotChangeSb
-ChromeTailoredSecurityServiceTest.EpWasEnabledByTsAndTsNowDisabledShowsDialog
-ChromeTailoredSecurityServiceTest.TsEnabledEnablesEp
-ClientSideDetectionHostNotificationTest.*
-ClientSideDetectionHostScamDetectionTest.*
-ClientSideDetectionHostTest.CSDFeaturesCacheContainsVerdictAndFullDebuggingMetadata
-ClientSideDetectionHostTest.PhishingDetectionDoneCalledTwiceShouldSucceed
-ClientSideDetectionHostTest.PhishingDetectionDoneEnhancedProtectionShouldHaveToken
-ClientSideDetectionHostTest.RTLookupResponseForceRequestSendsCSPPPingWhenVerdictNotPhishing
-ClientSideDetectionHostTest.TwoKeyboardLockRequestsOnSamePageOnlyLogsOnePreclassificationCheck
-ClientSideDetectionRTLookupResponseForceRequestTest.AsyncCheckTrackerNotTriggerClassificationRequestAlreadyPhishing
-ClientSideDetectionRTLookupResponseForceRequestTest.AsyncCheckTrackerNotTriggerClassificationRequestNoEnforcedPing
-ClientSideDetectionRTLookupResponseForceRequestTest.AsyncCheckTrackerTriggersClassificationRequest
-ClientSideDetectionRTLookupResponseForceRequestTest.AsyncCheckTrackerTriggersClassificationRequestOnAllowlistMatch
-DownloadBubblePrefsTest.EnhancedProtectionEnabled
-DownloadBubbleRowViewInfoTest.ShouldShowNoticeForEnhancedProtectionScan
-DownloadWarningDesktopHatsUtilsTest.ProductSpecificData_EnhancedSafeBrowsing
-EnhancedProtectionDownloadTest.*
-ExternalAppRedirectCheckingTest.ShouldReportExternalAppRedirect
-ImmediateDeepScanTest.ESBRequestScan
-ImmediateDeepScanTest.EncryptedArchive
-NotificationMetricsLoggerTest.PersistentNotificationSize
-SafeBrowsingResultTest.GetState_EnabledEnhanced
-SafeBrowsingServiceTest.TestMinAllowedTimeForReferrerChains
-SafeBrowsingServiceTest.TestMinAllowedTimeForReferrerChains_EsbEnabledOnStartup
-SafeBrowsingServiceTest.WhenUserIsInEPNormallyReturnsFalse
-SafetyHubHandlerTest.HandleGetSafeBrowsingCardData_EnabledEnhanced
-SafetyHubHandlerTest.HandleGetSafeBrowsingState_EnabledEnhanced

# This test fails because we disable kIOSPromoPasswordBubble.
-IOSPasswordPromoOnDesktopTest.IsDirectVariantIOSPasswordPromoTestFalseFeatureInactive

# These fail because we override IdentityManager::GetAccountsInCookieJar
-ChildAccountServiceTest.GetGoogleAuthState
-SupervisedUserGoogleAuthNavigationThrottleTest.NavigationForInvalidSignedInSupervisedUsers
-SupervisedUserGoogleAuthNavigationThrottleTest.NavigationForPendingSignedInSupervisedUsers
-SupervisedUserGoogleAuthNavigationThrottleTest.NavigationForPendingSignedInSupervisedUsersAllowsYouTubeInfrastructureInSubframes
-SupervisedUserGoogleAuthNavigationThrottleTest.NavigationForValidSignedinSupervisedUsers
-SupervisedUserURLFilterExtensionsTest.ChromeWebstoreURLsAreAlwaysAllowed
-SupervisedUserURLFilterTest.UrlsNotRequiringGuardianApprovalAllowed

# These tests dcheck because we modify the download bubble behavior with regards
# to dangerous downloads.
-DownloadDisplayControllerTest.GetProgressItemsAllComplete
-DownloadDisplayControllerTest.InitialState_NewLastDownload
-DownloadDisplayControllerTest.InitialState_OldLastDownload
-DownloadDisplayControllerTest.UpdateToolbarButtonState_OnCompleteItemCreated

# This test crashes because AutocompleteClassifier called when TabStripModel
# was not initialized in test.
-RenderViewContextMenuPrefsTest.ShowAllPasswordsIncognito

# Flaky upstream tests
-All/FirstPartySetsPolicyServicePrefTest.FindEntry_FpsEnabled_ReturnsEmptyUntilAllSetsReady/0
-All/FirstPartySetsPolicyServicePrefTest.FindEntry_NumQueriesRecorded_AfterConfigReady/0
-All/FirstPartySetsPolicyServicePrefTest.FindEntry_NumQueriesRecorded_BeforeConfigReady/0
-All/FirstPartySetsPolicyServicePrefTest.ForEachEffectiveSetEntry_ReturnsEmptyUntilAllSetsReady/0
-All/FirstPartySetsPolicyServicePrefTest.ForEachEffectiveSetEntry_WithNonEmptyConfig/0

# https://issues.chromium.org/issues/41484323
-TabSearchPageHandlerDeclutterTest.TabDeclutterExcludeTabs
-TabSearchPageHandlerDeclutterTest.TabDeclutterFindStaleTabs
-TabSearchPageHandlerDeclutterTest.TabDeclutterFindUnusedTabs
-TabSearchPageHandlerDeclutterTest.TabDeclutterObserverTest
-TabSearchPageHandlerDeclutterTest.TabDeclutterStaleTabChanges
-TabSearchPageHandlerDeclutterTest.TabDeclutterUnusedTabChanges
-TabSearchPageHandlerDeclutterTest.TabDuplicateURLChanges

# This test fails because we insert our own bookmarks submenu into the app menu
# model
-AppMenuModelTest.ModelHasIcons

# This test fails because we override Chromium's "what's new" util functionality
# see brave/chromium_src/chrome/browser/ui/webui/whats_new/whats_new_util.cc
-WhatsNewUtilTests.ShouldShowForStateUsesChromeVersionForRefresh

# This test fails because we disable page_image_service::kImageService feature.
-NewTabPageModulesTest.MakeModuleIdNames

# These tests fail because we disable
# optimization_guide::features::kOptimizationGuideFetchingForSRP
-ChromeHintsManagerFetchingTest.HintsFetched_*
-PasswordChangeDelegateImplTest.MetricsReportedFlowCanceledDuringSignInCheck
-PasswordChangeDelegateImplTest.MetricsReportedWasPasswordChangeNewTabFocused
-PasswordChangeDelegateImplTest.PasswordChangeFormNotFound
-PasswordChangeDelegateImplTest.RestartPasswordChange

# This test fails because we remove description and 3p cookies toggle from the
# Page Info cookies view.
-All/PageInfoCookiesContentView3pcdTitleAndDescriptionTest.*
-All/PageInfoCookiesContentView3pcdCookieToggleTest.*
-CookieControlsUserBypassTest.*
-PageInfoCookiesContentView3pcdCookieToggleTest.*
-PageInfoCookiesContentView3pcdTitleAndDescriptionTest.*
-PageInfoCookiesContentViewAlwaysBlock3pcsIncognito.DisplaysIncognitoDescriptionWhenInIncognito
-PageInfoCookiesContentViewPre3pcdTest.*

# This test times out because we Disable "Use a prediction service to load
# pages more quickly" (via prefetch::prefs::kNetworkPredictionOptions pref)
-NavigationPredictorUserInteractionsTest.MLModelMaxHoverTime
-NavigationPredictorUserInteractionsTest.ProcessPointerEventUsingMLModel

# These tests fail a CalledOnValidSequence check in brave_sync::Prefs::GetSeed
-PeopleHandlerWithExplicitBrowserSigninTest.*

# These tests fail because we do not record permissions UKM, see
# brave/chromium_src/components/permissions/permission_uma_util.cc
# GetUkmSourceId override.
-All/UnusedSitePermissionsServiceTest.UnusedSitePermissionsServiceTest/1
-All/UnusedSitePermissionsServiceTest.UnusedSitePermissionsServiceTest/3
-SiteSettingsHandlerTest.NotificationPermissionRevokeUkm

# This test fails because we replace WebUI chrome:// scheme with brave://
-ChromeURLsTest.ContainsConfigURLs

# These tests fail because we changed idle detection content setting to BLOCK
# by default, so the permission gets denied for OTR profile immediately instead
# of being randomly delayed.
-IdleDetectionPermissionContextTest.TestDenyInIncognitoAfterDelay
-IdleDetectionPermissionContextTest.TestParallelDenyInIncognito

# These tests fail because we set content settings default values to
# CONTENT_SETTING_BLOCK, instead of CONTENT_SETTING_ASK which the tests expect.
-All/ChromeBrowsingDataRemoverDelegateRelatedWebsiteSetsTest.RemoveRelatedWebsiteSetsPermissions/*

# These tests fail because our search engine keywords use a shorter syntax than
# is expected (:b vs search.brave.com)
-IconUtilsTest.GetSearchEngineGeneratedIconPath
-TemplateURLServiceEnterpriseSearchTest.NonFeaturedEnterpriseSearchPolicyConflictWithDSP/SearchEngineChoiceDisabled_SearchAggregator
-TemplateURLServiceEnterpriseSearchTest.NonFeaturedEnterpriseSearchPolicyConflictWithDSP/SearchEngineChoiceDisabled_SiteSearch
-TemplateURLServiceEnterpriseSearchTest.NonFeaturedEnterpriseSearchPolicyConflictWithDSP/SearchEngineChoiceEnabled_SearchAggregator
-TemplateURLServiceEnterpriseSearchTest.NonFeaturedEnterpriseSearchPolicyConflictWithDSP/SearchEngineChoiceEnabled_SiteSearch

# These tests fail on CI but pass locally, due to directory security
# restrictions on the CI nodes
-WebAppRegistrarTest.AppsInstalledByUserMetric
-WebAppRegistrarTest.GetApps
-WebAppSyncBridgeTest.ApplyIncrementalSyncChanges_AddSyncAppsWithOverlappingPolicyApps
-WebAppSyncBridgeTest.CommitUpdate_DeleteSyncAppWithOverlappingPolicyApp

# These tests fail because of the following failed expectation in prerender_test_util.cc:
# Expected: (host_id) != (RenderFrameHost::kNoFrameTreeNodeId), actual: -1 vs -1
# kPrerender2 feature is disabled in Brave.
-All/HistoryTabHelperMPArchTest.DoNotAffectToLimitTitleUpdates/1
-AuthenticatorRequestSchedulerPrerenderTest.SingleWebContents_OneRequestInPrerendering
-CapabilitiesPreconnectParamTest/DiceTabHelperPrerenderTest.SigninStatusAfterPrerendering/*
-LcpCriticalPathPredictorPageLoadMetricsObserverTest.Prerender*
-MediaEngagementContentsObserverPrerenderTest.EnsureDoNotCleanupAfterNavigation_AudioContextInPrerendering
-ReauthTabHelperPrerenderTest.PrerenderDoesNotAffectLastCommittedErrorPage
-TranslatePageLoadMetricsObserverTest.PrerenderAndActivation
-TrustedVaultEncryptionKeysTabHelperPrerenderingTest.CreateEncryptionKeysInPrerendering
-WebAppIconDownloaderPrerenderTest.PrerenderedPageNavigates

# These tests fail because we disable kPermissionStorageAccessAPI
-PageInfoTest.NonFactoryDefaultAndRecentlyChangedPermissionsShown
-PageInfoTest.OnPermissionsChanged
-PageInfoTest.ShowAutograntedRWSPermissions
-PageInfoTest.StorageAccessGrantsAreFiltered
-PageInfoTest.StorageAccessGrantsDisplayedWhenDefaultBlocked
-StorageAccessAPIServiceImplTest.PermissionDenial_NotRenewed
-StorageAccessAPIServiceImplTest.RenewPermissionGrant
-StorageAccessGrantPermissionContextAPIDisabledTest.AllowedByCookieSettings*
-StorageAccessGrantPermissionContextAPIDisabledTest.InsecureOriginsDisallowed*
-StorageAccessGrantPermissionContextAPIDisabledTest.PermissionBlocked*
-StorageAccessGrantPermissionContextAPIDisabledTest.PermissionStatusBlocked*
-StorageAccessGrantPermissionContextAPIWithFedCMConnectionTest.AutoResolveWithConnection/*
-StorageAccessGrantPermissionContextAPIWithFirstPartySetsTest.ImplicitGrant_AutograntedWithinFPS*
-StorageAccessGrantPermissionContextAPIWithImplicitGrantsTest.*
-StorageAccessGrantPermissionContextTest.*
-StorageAccessGrantPermissionContextWithPromptsTest.*

# This test fails because our badge doesn't match the upstream badge
-IconBadgingTest.VerifyFromDisk

# These tests fail because we stub signin::ShouldShowSyncPromo to always return
# false
-ShowSyncPromoTest.*

# These tests time out because the CreateProfile method calls
# mock_time_task_runner_->FastForwardUntilNoTasksRemain() which never returns.
-IncidentReportingServiceTest.*

# This test times out because TaskEnvironment::FastForwardBy never returns.
-NotificationsEngagementServiceTest.EraseStaleEntries

# This test fails because we stub out NetworkService::UpdateKeysPinList
-PKIMetadataComponentInstallerTest.InstallComponentUpdatesPinningConfig

# These tests are disabled because we hide the password card in
# brave://settings/safetyCheck which also involves always returning a "safe"
# password card state
-All/PasswordStatusCheckServiceParameterizedCardTest.PasswordCardState/*
-PasswordStatusCheckServiceBaseTest.PasswordCardCheckTime
-SafetyHubCardDataHelperTest.GetOverallState_Multi
-SafetyHubCardDataHelperTest.GetOverallState_Password
-SafetyHubHandlerTest.HandleGetSafetyHubEntryPointData_HasRecommendationsAndHeader
-SafetyHubHandlerTest.HandleGetSafetyHubEntryPointData_Subheader_AllModules
-SafetyHubHandlerTest.HandleGetSafetyHubEntryPointData_Subheader_OneModule
-SafetyHubHandlerTest.HandleGetSafetyHubEntryPointData_Subheader_TwoModulesWithPassword

# This test fails because zoom_level.display_name is "(Brave error pages)"
-SiteSettingsHandlerTest.ZoomLevels

# These tests fail because we disable features::kControlledFrame
-ControlledFramePermissionsTest.Verify

# These tests fail because we remap our handling of OTR profiles for the
# TemplateUrlServiceFactory
-SearchProviderOTRTest.*

# These tests fail because we set LOCATION_BAR_TRAILING_ICON_SIZE to 18 and
# the tests hardcode the expected value to 20
-CollaborationMessagingTabDataTest.CanSetAndClearData
-CollaborationMessagingTabDataTest.IgnoresRequestsWhenMessageIsChanged
-CollaborationMessagingTabDataTest.IgnoresRequestsWhenMessageIsCleared

# These tests fail because we rename the bookmarks bar from "Bookmarks bar" to
# "Bookmarks"
-BookmarkHTMLWriterTest.CheckOutput*
-BookmarkHTMLWriterTest.ExportThenImport

# These tests fail because our privacy policy URL doesn't match upstream's URL.
-PrivacyPolicyURLTests/PrivacyPolicyURLTests.ValidatingURL/*

# These tests fail because we disable contextual cueing service.
-ContextualCueingHelperTest.*

# These tests fail because we disable kTpcdMetadataGrants.
-ChromeBrowsingDataRemoverDelegateTpcdMetadataTest.ResetAllCohort_PreserveSome
-ChromeBrowsingDataRemoverDelegateTpcdMetadataTest.ResetAllCohorts

# These tests fail because we disable
# ntp_features::kCustomizeChromeWallpaperSearch.
-WallpaperSearchBackgroundManagerTest.*

# This test fails because we disable kStructuredMetrics.
-ChromeStructuredMetricsRecorderTest.DeviceEventsRecorded

# These tests fail because we disable kPermissionPredictionsV2.
-PredictionBasedPermissionUiSelectorTest.OnlyPromptsForCurrentTypeAreCounted
-PredictionBasedPermissionUiSelectorTest.RequestsWithFewPromptsAreSent

# This test fails because we block installation of Probabilistic Reveal Token
# component installation.
-ProbabilisticRevealTokenComponentInstallerTest.*

# These tests are disabled because we don't show the default browser prompt item
# in the Hamburger menu
-AppMenuModelTest.DefaultBrowserPrompt
-DefaultBrowserPromptManagerTest.AppMenuItemHiddenOnPromptAccept
-DefaultBrowserPromptManagerTest.AppMenuItemPersistsOnPromptDismissed
-DefaultBrowserPromptManagerTest.ShowsAppMenuItem

# These tests are disabled because the required navigation throttle is only
# created when the test profile is using the first-party NTP
-NtpMicrosoftAuthResponseCaptureNavigationThrottleTest.*

# Tests below this point have not been diagnosed or had issues created yet.
-AboutFlagsHistogramTest.*
-AboutFlagsTest.EveryFlagHasMetadata
-AccessCodeCastDiscoveryInterfaceTest.SyncError
-AccessCodeCastFeatureTest.GetAccessCodeDeviceDurationPrefSwitchEnabled
-AccessCodeCastSinkServiceFactoryTest.PrefEnabledReturnsValidService
-ActivityLogTest.LogPrerender
-All/ChromeLabs*Test.*
-All/TabStripTest.TabCloseButtonVisibility/*
-All/WebstorePrivateBeginInstallWithManifest3FrictionDialogTest.*
-BookmarkBarViewTest.ManagedShowAppsShortcutInBookmarksBar
-BookmarkBubbleViewTest.SyncPromoNotSignedIn
-BookmarkTest.EmptyBookmarkBarNotShownOnNTP
-BrowserBookmarkBarTest.StateOnActiveTabChanged
-BrowserCommandHandlerTest.CanShowSafeBrowsingEnhancedProtectionCommandPromo_EnhancedProtectionEnabled
-BrowserCommandsTest.OnDefaultZoomLevelChanged
-BrowserCommandsTest.OnMaxZoomIn
-CastDialogCoordinatorTest.ShowAndHideDialog
-ChromeAutocompleteProviderClientTest.StartServiceWorker
-ChromeBrowsingDataRemoverDelegateTest.*
-ChromeComponentUpdaterConfiguratorTest.*
-ChromeDownloadManagerDelegateTest.*
-ChromeLabs*Test.*
-ChromeLocationBarModelDelegateTest.IsNewTabPage
-ChromeMetricsServicesManagerClientTest.*
-ChromeWebContentsViewDelegateViewsTest.*
-ClearBrowsingDataHandlerUnitTest.*
-ClickToCallUtilsTest.TelLink*
-CloudBinaryUploadServiceTest.DeepScanESBEnabledEnhancedProtectionMalwareRequestAuthorized
-ConfigParserTest.*
-CountingPolicyTest.*
-CWSInfoServiceTest.IgnoresNonCWSExtensions
-DeclarativeContentActionTest.*
-DevToolsUIBindingsTest.SanitizeFrontendURL
-DevToolsUIDataSourceTest.TestDevToolsRemoteURL
-DownloadProtectionServiceTest.*
-DownloadRequestMakerTest.PopulatesEnhancedProtection
-DownloadTargetDeterminerTest.*
-ExtensionAllowlistUnitTest.*
-ExtensionGCMAppHandlerTest.UnregisterOnExtensionUninstall
-ExtensionInfoGeneratorUnitTest.UploadAsAccountExtension_TransportMode
-ExtensionInstalledBubbleModelTest.ShowSigninPromo
-ExtensionInstalledBubbleModelTransportModeTest.ShowSigninPromo
-ExtensionInstallStatusTest.ExtensionBlockedByPermissionsWithUpdateUrl
-ExtensionInstallStatusTest.ExtensionBlockedByUpdateUrl
-ExtensionMetricsProviderInstallsTest.TestProtoConstruction
-ExtensionMigratorTest.HasExistingOld
-ExtensionServiceTest.MultipleExternalInstallBubbleErrors
-ExtensionServiceTest.NonCWSForceInstalledDisabledOnNonDomainJoin
-ExtensionServiceTest.WillNotLoadFromCommandLineForESBUsers
-ExtensionsMenuMainPageViewUnitTest.PinnedExtensions
-ExtensionSyncTypeTest.UserScriptNoUpdateUrl
-ExtensionTelemetryServiceSystemTimeTest.PersistsReportsWithUnspecifiedManagementAuthorityOnShutdown
-ExtensionTelemetryServiceTest.*
-ExtensionUpdaterTest.*
-FullStreamUIPolicyTest.*
-GCMProfileServiceTest.*
-GetUserPopulationForProfileTest.PopulatesPopulation
-HostContentSettingsMapTest.IncognitoInheritSaaAndRenew
-HostContentSettingsMapTest.IncognitoPartialInheritDefault
-HostContentSettingsMapTest.IncognitoPartialInheritPref
-InstallVerifierTest.*
-InstantNTPURLRewriteTest.*
-ManageProfileHandlerTest.*
-MultiProfileCredentialsFilterTest.SyncCredentialsFilter
-NewTabPageHandlerTest.OnDoodleImageClicked
-NewTabPageHandlerTest.OnDoodleImageRendered
-NoStatePrefetchGWSPrefetchHoldbackOffTest.*
-NoStatePrefetchTest.NoStatePrefetchDuplicate
-NoStatePrefetchTest.MaxConcurrencyTest
-OfferNotificationBubbleControllerImplTest.*
-OmniboxViewViewsSteadyStateElisionsTest.*
-OmniboxViewViewsTest.*
-PageInfoBubbleViewTest.*
-PageInfoTest.IncognitoPermissionsDontShowAsk # Change upstream logic for incognito windows. https://github.com/brave/brave-browser/issues/24720
-PdfPrinterHandlerPosixTest.*
-PeriodicBackgroundSyncPermissionContextWithPermissionTest.DefaultSearchEngine
-PermissionDashboardUnitTest.DisplayLHSIndicatorForCamera*
-PermissionsUpdaterTest.GrantAndRevokeOptionalPermissions
-ProfileAttributesStorageTest.*
-ProfileResetterTest.CheckSnapshots
-ProfileResetterTest.ResetContentSettings
-ProfileResetterTest.ResetStartPagePartially
-RenderViewContextMenuExtensionsTest.*
-SaveCardBubbleControllerImplTest.UploadCvcOnlySaveDialogContent
-SearchProviderRequestTest.SendRequest*
-SearchProviderTest.*
-SearchTest.InstantCacheableNTPNavigationEntryNewProfile
-SettingsOverriddenParamsProvidersUnitTest.GetExtensionControllingNewTab
-SigninManagerTest.*
-SigninUiUtilTest.GetOrderedAccountsForDisplay
-StartupTabProviderTest.GetCommandLineTabs
-StateStoreTest.ClearAll
-StateStoreTest.Persistence
-StateStoreTest.PersistenceWithStoreDelete
-StubResolverConfigReaderTest.*
-SubresourceFilterComponentInstallerTest.TestComponentRegistrationWhenFeatureEnabled
-TabHoverCardControllerTest.*
-TabTest.*
-TCPSocketUnitTest.SocketConnectDisconnectRace
-TemplateURLServiceSyncTest.MergeConflictingPrepopulatedEngine
-TemplateURLServiceTest.RepairPrepopulatedSearchEngines/SearchEngineChoiceDisabled
-TemplateURLServiceTest.RepairPrepopulatedSearchEngines/SearchEngineChoiceEnabled
-TemplateURLServiceTest.RepairStarterPackEngines/SearchEngineChoiceDisabled
-TemplateURLServiceTest.RepairStarterPackEngines/SearchEngineChoiceEnabled
-TestChromeColorsService.RecordDynamicColorOnLoadHistogramForGrayscale
-ThemeLocalDataBatchUploaderTest.*
-ThemeServiceTest.IsGrayscale
-ThemeSyncableServiceTest.*
-ThemeSyncableServiceTestWithAccountThemesSeparation.LoadsLocalGrayscaleThemeFromPrefUponSyncStop
-ThemeSyncableServiceWithMigrationFlag*.*
-ThemeSyncableServiceVerifyFinalStateTest.*
-TranslateManagerRenderViewHostTest.*
-UpdateServiceCanUpdateFeatureEnabledNonDefaultUpdateUrl.*
-VideoOverlayWindowViewsTest.*
-VideoOverlayWindowViewsWith2024UITest.*
-WebRtcEventLogUploaderImplTest.*
-WebstoreInstallerTest.*
-WellKnownChangePasswordNavigationThrottleTest.CreateNavigationThrottle_ChangePasswordUrl_FromGoogleLink
