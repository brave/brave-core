import("//brave/build/config.gni")
import("//build/util/branding.gni")
import("//media/cdm/library_cdm/cdm_paths.gni")

if (should_generate_breakpad_symbols) {
  action("generate_breakpad_symbols") {
    symbols_dir = "$brave_dist_dir/$brave_product_name.breakpad.syms"
    outputs = [ symbols_dir ]

    if (brave_debug_symbol_level == 2) {
      platform_symbols_dir = "$brave_dist_dir/$brave_product_name.pdb.syms"
      outputs += [ platform_symbols_dir ]
    }
    dump_syms = "//third_party/breakpad:dump_syms($host_toolchain)"
    deps = [ "//brave/build/win:copy_pdb", dump_syms ]
    dump_syms_path =
        get_label_info(dump_syms, "root_out_dir") + "/" +
        get_label_info(dump_syms, "name")

    args = [
      "--symbols-dir=" + rebase_path(symbols_dir),
      "--build-dir=" + rebase_path(root_out_dir),
      "--dump-syms-path=" + dump_syms_path,
      "--verbose",
      "--clear",
      rebase_path(root_out_dir),
    ]

    if (brave_debug_symbol_level == 2) {
      args += [ "--platform-symbols-dir=" + rebase_path(platform_symbols_dir) ]
    }

    script = "//brave/tools/win/generate_breakpad_symbols.py"
  }
} else {
  group("generate_breakpad_symbols") {
  }
}

group("symbol_dist_resources") {
  public_deps = [ ":generate_breakpad_symbols" ]
}

copy("dist_resources") {
  sources = [ "$root_out_dir/chrome_elf.dll" ]

  outputs = [ "$brave_dist_dir/{{source_file_part}}" ]

  public_deps = [
    "//chrome/chrome_elf"
  ]

  if (target_cpu != "arm64") {
    # As of this writing, Angle does not define copy_compiler_dll for arm64.
    public_deps += [ "//third_party/angle:copy_compiler_dll" ]
  }
}
