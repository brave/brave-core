# Copyright 2023 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/rust/cargo_crate.gni")

cargo_crate("lib") {
  crate_name = "rand"
  epoch = "0.7"
  crate_type = "rlib"
  crate_root = "crate/src/lib.rs"
  sources = [
    "//brave/third_party/rust/rand/v0_7/crate/benches/generators.rs",
    "//brave/third_party/rust/rand/v0_7/crate/benches/misc.rs",
    "//brave/third_party/rust/rand/v0_7/crate/benches/seq.rs",
    "//brave/third_party/rust/rand/v0_7/crate/benches/weighted.rs",
    "//brave/third_party/rust/rand/v0_7/crate/examples/monte-carlo.rs",
    "//brave/third_party/rust/rand/v0_7/crate/examples/monty-hall.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/distributions/bernoulli.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/distributions/binomial.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/distributions/cauchy.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/distributions/dirichlet.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/distributions/exponential.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/distributions/float.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/distributions/gamma.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/distributions/integer.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/distributions/mod.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/distributions/normal.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/distributions/other.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/distributions/pareto.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/distributions/poisson.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/distributions/triangular.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/distributions/uniform.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/distributions/unit_circle.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/distributions/unit_sphere.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/distributions/utils.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/distributions/weibull.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/distributions/weighted/alias_method.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/distributions/weighted/mod.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/distributions/ziggurat_tables.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/lib.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/prelude.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/rngs/adapter/mod.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/rngs/adapter/read.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/rngs/adapter/reseeding.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/rngs/entropy.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/rngs/mock.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/rngs/mod.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/rngs/small.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/rngs/std.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/rngs/thread.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/seq/index.rs",
    "//brave/third_party/rust/rand/v0_7/crate/src/seq/mod.rs",
  ]
  inputs = [
    "//brave/third_party/rust/rand/v0_7/crate/.github/ISSUE_TEMPLATE/compile-issue.md",
    "//brave/third_party/rust/rand/v0_7/crate/.github/ISSUE_TEMPLATE/feature_request.md",
    "//brave/third_party/rust/rand/v0_7/crate/.github/ISSUE_TEMPLATE/other.md",
    "//brave/third_party/rust/rand/v0_7/crate/CHANGELOG.md",
    "//brave/third_party/rust/rand/v0_7/crate/README.md",
    "//brave/third_party/rust/rand/v0_7/crate/SECURITY.md",
  ]

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2018"
  cargo_pkg_version = "0.7.3"
  cargo_pkg_authors = "The Rand Project Developers, The Rust Project Developers"
  cargo_pkg_name = "rand"
  cargo_pkg_description =
      "Random number generators and other randomness functionality."
  library_configs -= [ "//build/config/compiler:chromium_code" ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [ "//build/config/compiler:chromium_code" ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    "//brave/third_party/rust/getrandom/v0_1:lib",
    "//brave/third_party/rust/rand_chacha/v0_2:lib",
    "//brave/third_party/rust/rand_core/v0_5:lib",
    "//brave/third_party/rust/rand_pcg/v0_2:lib",
  ]
  if (!is_win) {
    deps += [ "//third_party/rust/libc/v0_2:lib" ]
  }
  aliased_deps = {
    getrandom_package = "//brave/third_party/rust/getrandom/v0_1:lib__rlib"
  }
  features = [
    "alloc",
    "getrandom",
    "getrandom_package",
    "libc",
    "rand_pcg",
    "small_rng",
    "std",
  ]
}
