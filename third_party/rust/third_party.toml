# This file lists all dependencies used from first-party code. It should not
# include transitive dependencies, as those will be determined from Cargo.
#
# All versions should be specified as a version epoch (a single non-zero version
# component such as "2" or "0.3").
#   e.g.
#   santas-workshop = "2"
#
# Any features used by first-party code must be declared here in order to ensure
# they are included in the crate when it is built.
#   e.g.
#   santas-workshop = { version = "3", features = [ "candycanes" ] }
#
# We have some extensions in order to provide additional info for the BUILD.gn
# files that can't be derived from Cargo. Any extension should be added to
# the dependency crate's set of properties.
#   e.g.
#   santas-workshop = { version = "3", some-extension = true }
#
# Extensions:
#
# allow-first-party-usage: If false, the crate should not be visible to first
#   party code even though it is present in this file. It defaults to true. Use
#   this if you need to declare extensions for a crate that is only meant for
#   use as a transitive dependency of third-party crates.
#   e.g. allow-first-party-usage = false
#
# build-script-outputs: A list of file paths, rooted from where the BUILD.gn
#   file is located, of files generated by the crate's build script.
#   e.g. build-script-outputs = [ "crate/src/gen/gen_stuff.rs" ]

# Crates listed in dependencies will have a :lib GN target built for them in
# their BUILD.gn file. The :lib target can be depended on from Chromium
# production and test code. Third-party crates that are not listed in this
# file are not visible to Chromium code.

# Since cxx-gen is used as a standalone binary, rather than as a library, we
# can't depend on it in the usual way. Add it as a workspace member so cargo can
# resolve its dependencies.
[workspace]
members = [
    "cxxbridge_cmd/v1/crate",
]

[dependencies]
bitflags = "1"
cfg-if = "1"
cxx = "1"
cxxbridge-cmd = "1"
lazy_static = "1"
memoffset = { version = "0.6", features = [ "unstable_const" ] }
proc-macro2 = "1"
quote = "1"
serde = "1"
static_assertions = "1"
syn = {version = "1", features = ["full"]}

# speedreader-ffi
libc = "0.2.107"

# speedreader
flate2 = { version = "1.0.25", features = ["rust_backend"], default-features = false }
kuchiki = "0.8.1"
lol_html = "0.3.0"
# regex = "1"
# serde_json = "1.0.70"
thiserror = "1.0.30"
lifeguard = "^ 0.6.1"
url = "2.2"
lazy_static = "1.4"

# readability
bitflags         = "1.2"
kuchiki          = "0.8.1"
lazy_static      = "1.4"
# regex            = "1"
# serde_json       = "1.0"
time = { version = "0.3.5", features = ["formatting", "macros", "parsing"] }
thiserror        = "1.0.30"
url              = "2.2"

# json
cxx = { version = "1.0", features = [ "alloc", "std" ] }
serde = {version = "1.0", features = ["derive"]}
# serde_json = {version = "1.0"}
libc = "0.2.58"

#skus cxx
cxx = { version = "1.0", features = [ "alloc", "std" ] }
async-trait = "0.1.64"
futures = "0.3.19"
libc = { version = "0.2" }
# serde_json = "1.0"
tracing-subscriber = { version = "0.2.0", default-features = false, features = ["ansi", "ansi_term", "fmt", "registry", "sharded-slab", "thread_local"] }
tracing = "0.1"

#skus
http = { version = "0.1" }
async-trait = "0.1.64"
rand = { version = "0.7" }
# serde_json = "1.0"
sha2 = "0.9"
# sha2 missing third_party/rust/cpufeatures conditional
data-encoding = "2.1.2"
tracing = { version = "0.1", default-features = false }
bigdecimal = { version = "0.1", features = ["serde"] }
serde = { version = "1.0", features = ["derive"] }
chrono = { version = "0.4", default-features = false, features = ["clock", "serde"] }
uuid = { version = "0.8", features = ["serde"] }
challenge-bypass-ristretto = { version = "1.0.1", features = ["base64", "serde", "serde_base64"] }
futures-retry = "0.5.0"
urlencoding = "1.1.1"
hmac = "0.10"
base64 = "0.9.3"
git-version = "0.3.5"

# adblock-ffi
adblock = { version = "0.7.9", default-features = false, features = ["full-regex-handling", "debug-info", "css-validation"] }
# adblock missing ios feature conditionals
# serde_json = "1.0"
libc = "0.2"

# challenge-bypass-ristretto-ffi
base64 = "0.9.3"
challenge-bypass-ristretto = { version = "1.0.1", features = ["base64"] }
hmac = "0.10"
rand = "0.7"
sha2 = "0.9"

# star-constellation
serde = { version = "1.0.147", features = ["derive"] }
# serde_json = "1.0.79"
rand_core = "0.6.3"
rand = { version = "0.8" }
bincode = "1.3"
lazy_static = "1.4.0"
cxx = "1.0"

# ppoprf
rand = { version = "0.8.5", default-features = false }
rand_core = { version = "0.6.3", features = [ "getrandom" ] }
bitvec = { version = "1.0.1", features = [ "alloc", "atomic", "std"] }
curve25519-dalek =  { version = "3.2.1", features = [ "serde" ] }
serde = "1.0.147"
strobe-rs = "0.8.1"
base64 = "0.13.0"
bincode = "1.3.0"
derive_more = "0.99"
zeroize = { version = "1.5", features = [ "derive" ] }

# sta-rs
strobe-rs = "0.8.1"
rand_core = "0.6.3"
zeroize = "1.5"

# strobe-rng
rand_core = "0.6.3"

# adss-rs
strobe-rs = "0.8.1"
rand = "0.8.5"
zeroize = "1.5"

# sharks
rand = { version = "0.8.5", default-features = false }
zeroize = { version = "1.5.5", features = ["zeroize_derive"] }
ff = { version = "0.13", features = ["derive"] }
bitvec = { version = "1.0.1", default-features = false }
byteorder = { version = "1", default-features = false }
rand_core = { version = "0.6", default-features = false }

# brave-news
cxx = { version = "1.0", features = [ "alloc", "std" ] }
feed-rs = "1.3.0"
# log = "0.4.14"
lazy_static = "1.4.0"
# regex = "1.5.5"

# brave-wallet
cxx = { version = "1.0", features = [ "alloc", "std" ] }
ed25519-dalek-bip32 = "0.2.0"
curve25519-dalek = "3.2.1"

# filecoin
base64 = "0.13.0"
blake2b_simd = "1.0"
bls-signatures = { version = "0.12", default-features = false, features = ["pairing"] }
cxx = { version = "1.0", features = [ "alloc", "std" ] }
fvm_shared = { version = "0.7.0 " }
libsecp256k1 = "0.7"
# libsecp missing build_script_outputs = [ "const.rs", "const_gen.rs" ]
forest_bigint = "0.1.2"
serde = { version = "^1.0.117", features = ["derive"] }
# serde_json = "^1.0.59"
thiserror = "^1.0.30"
fvm_ipld_encoding = "0.2.0"

cpufeatures = "0.2" # sha2 and keccak dep
# missing linux conditional

# keccak missing third_party/rust/cpufeatures conditional
# iana timezone missing is_ios || is_mac
# typenum missing build_script_outputs

[dependencies.crunchy]
version = "0.2"
build_script_outputs = [ "lib.rs" ]
[dependencies.markup5ever]
version = "0.10"
build_script_outputs = [ "generated.rs", "named_entities.rs" ]

[dependencies.html5ever]
version = "0.25.1"
build_script_outputs = [ "rules.rs" ]

[dependencies.typenum]
version = "1"
allow-first-party-usage = false
build-script-outputs = [ "consts.rs", "op.rs" ]

[dependencies.num-bigint]
version = "0.4"
allow-first-party-usage = false
build-script-outputs = [ "radix_bases.rs" ]

[dependencies.selectors]
version = "0.23"
allow-first-party-usage = false
build-script-outputs = [ "ascii_case_insensitive_html_attributes.rs" ]

[dependencies.cssparser]
version = "0.28"
allow-first-party-usage = false
build-script-outputs = [ "tokenizer.rs" ]

[dependencies.serde_json_lenient]
version = "0.1"
features = [ "unbounded_depth", "float_roundtrip" ]

[dependencies.rustversion]
version = "1"
allow-first-party-usage = false
build-script-outputs = [ "version.rs" ]

[dependencies.unicode-linebreak]
version = "0.1"
allow-first-party-usage = false
build-script-outputs = [ "tables.rs" ]

# Crates listed in testonly-dependencies will have a :test_support GN target
# built for them in their BUILD.gn file, which is marked testonly=true. This
# allows them built in a configuration that can be used from Chromium tests, but
# not used from production.
#
# Note this is not the same as dev-dependencies: any features requested here
# also affect regular dependencies. They just have restricted visibility in GN.
[testonly-dependencies]
anyhow = "1"
hex = "0.4"
hex-literal = "0.4"
lazy_static = "1"
log = "0.4"
rand = "0.8"
rand_pcg = "0.3"
regex = "1"
rstest = {version = "0.17", default-features=false}
rstest_reuse = "0.5"
small_ctor = "0.1"
wycheproof = "0.4"

# Used in Rust tool for BUILD.gn generation.
anyhow = "1"
cargo_metadata = "0.14"
cargo-platform = "0.1"
clap = "4"
log = "0.4"
once_cell = "1"
semver = "1"
serde_json = "1"
tempfile = "3"
toml = {version = "0.5", features = ["preserve_order"]}

# Disable default features for now; while auto color output is great, it's not
# strictly necessary and adds a few extra dependencies. Same with humantime.
[testonly-dependencies.env_logger]
version = "0.10"
default-features = false
features = ["color", "regex"]
