# Copyright 2023 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# @generated from third_party/rust/BUILD.gn.hbs by tools/crates/gnrt.
# Do not edit!

import("//build/rust/cargo_crate.gni")

cargo_crate("lib") {
  crate_name = "once_cell"
  epoch = "1"
  crate_type = "rlib"

  # Only for usage from third-party crates. Add the crate to
  # third_party.toml to use it from first-party code.
  visibility = [ "//brave/third_party/rust/*" ]
  crate_root = "crate/src/lib.rs"
  sources = [
    "//brave/third_party/rust/once_cell/v1/crate/examples/bench.rs",
    "//brave/third_party/rust/once_cell/v1/crate/examples/bench_acquire.rs",
    "//brave/third_party/rust/once_cell/v1/crate/examples/bench_vs_lazy_static.rs",
    "//brave/third_party/rust/once_cell/v1/crate/examples/lazy_static.rs",
    "//brave/third_party/rust/once_cell/v1/crate/examples/reentrant_init_deadlocks.rs",
    "//brave/third_party/rust/once_cell/v1/crate/examples/regex.rs",
    "//brave/third_party/rust/once_cell/v1/crate/examples/test_synchronization.rs",
    "//brave/third_party/rust/once_cell/v1/crate/src/imp_cs.rs",
    "//brave/third_party/rust/once_cell/v1/crate/src/imp_pl.rs",
    "//brave/third_party/rust/once_cell/v1/crate/src/imp_std.rs",
    "//brave/third_party/rust/once_cell/v1/crate/src/lib.rs",
    "//brave/third_party/rust/once_cell/v1/crate/src/race.rs",
    "//brave/third_party/rust/once_cell/v1/crate/tests/it.rs",
  ]
  inputs = [
    "//brave/third_party/rust/once_cell/v1/crate/CHANGELOG.md",
    "//brave/third_party/rust/once_cell/v1/crate/README.md",
  ]

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2021"
  cargo_pkg_version = "1.16.0"
  cargo_pkg_authors = "Aleksey Kladov <aleksey.kladov@gmail.com>"
  cargo_pkg_name = "once_cell"
  cargo_pkg_description = "Single assignment cells and lazy values."
  library_configs -= [ "//build/config/compiler:chromium_code" ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [ "//build/config/compiler:chromium_code" ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  features = [
    "alloc",
    "race",
    "std",
  ]
}
group("test_support") {
  public_deps = [ ":lib" ]
  testonly = true
}
