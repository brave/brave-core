# Copyright 2023 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# @generated from third_party/rust/chromium_crates_io/BUILD.gn.hbs by
# tools/crates/gnrt.
# Do not edit!

import("//build/rust/cargo_crate.gni")

cargo_crate("lib") {
  crate_name = "adblock"
  epoch = "0.9"
  crate_type = "rlib"
  crate_root = "//brave/third_party/rust/chromium_crates_io/vendor/adblock-v0_9/src/lib.rs"
  sources = [
    "//brave/third_party/rust/chromium_crates_io/vendor/adblock-v0_9/src/blocker.rs",
    "//brave/third_party/rust/chromium_crates_io/vendor/adblock-v0_9/src/content_blocking.rs",
    "//brave/third_party/rust/chromium_crates_io/vendor/adblock-v0_9/src/cosmetic_filter_cache.rs",
    "//brave/third_party/rust/chromium_crates_io/vendor/adblock-v0_9/src/data_format/mod.rs",
    "//brave/third_party/rust/chromium_crates_io/vendor/adblock-v0_9/src/data_format/utils.rs",
    "//brave/third_party/rust/chromium_crates_io/vendor/adblock-v0_9/src/data_format/v0.rs",
    "//brave/third_party/rust/chromium_crates_io/vendor/adblock-v0_9/src/engine.rs",
    "//brave/third_party/rust/chromium_crates_io/vendor/adblock-v0_9/src/filters/cosmetic.rs",
    "//brave/third_party/rust/chromium_crates_io/vendor/adblock-v0_9/src/filters/mod.rs",
    "//brave/third_party/rust/chromium_crates_io/vendor/adblock-v0_9/src/filters/network.rs",
    "//brave/third_party/rust/chromium_crates_io/vendor/adblock-v0_9/src/lib.rs",
    "//brave/third_party/rust/chromium_crates_io/vendor/adblock-v0_9/src/lists.rs",
    "//brave/third_party/rust/chromium_crates_io/vendor/adblock-v0_9/src/optimizer.rs",
    "//brave/third_party/rust/chromium_crates_io/vendor/adblock-v0_9/src/regex_manager.rs",
    "//brave/third_party/rust/chromium_crates_io/vendor/adblock-v0_9/src/request.rs",
    "//brave/third_party/rust/chromium_crates_io/vendor/adblock-v0_9/src/resources/mod.rs",
    "//brave/third_party/rust/chromium_crates_io/vendor/adblock-v0_9/src/resources/resource_assembler.rs",
    "//brave/third_party/rust/chromium_crates_io/vendor/adblock-v0_9/src/resources/resource_storage.rs",
    "//brave/third_party/rust/chromium_crates_io/vendor/adblock-v0_9/src/url_parser/mod.rs",
    "//brave/third_party/rust/chromium_crates_io/vendor/adblock-v0_9/src/url_parser/parser.rs",
    "//brave/third_party/rust/chromium_crates_io/vendor/adblock-v0_9/src/url_parser/parser_full.rs",
    "//brave/third_party/rust/chromium_crates_io/vendor/adblock-v0_9/src/url_parser/parser_regex.rs",
    "//brave/third_party/rust/chromium_crates_io/vendor/adblock-v0_9/src/utils.rs",
  ]
  inputs = []

  build_native_rust_unit_tests = false
  edition = "2021"
  cargo_pkg_authors = "Anton Lazarev <alazarev@brave.com>, Andrius Aucinas"
  cargo_pkg_name = "adblock"
  cargo_pkg_description = "Native Rust module for Adblock Plus syntax (e.g. EasyList, EasyPrivacy) filter parsing and matching."
  cargo_pkg_version = "0.9.6"

  deps = [
    "//brave/third_party/rust/base64/v0_22:lib",
    "//brave/third_party/rust/bitflags/v1:lib",
    "//brave/third_party/rust/cssparser/v0_29:lib",
    "//brave/third_party/rust/idna/v1:lib",
    "//brave/third_party/rust/itertools/v0_13:lib",
    "//brave/third_party/rust/memchr/v2:lib",
    "//brave/third_party/rust/once_cell/v1:lib",
    "//brave/third_party/rust/percent_encoding/v2:lib",
    "//brave/third_party/rust/regex/v1:lib",
    "//brave/third_party/rust/rmp_serde/v0_15:lib",
    "//brave/third_party/rust/seahash/v3:lib",
    "//brave/third_party/rust/selectors/v0_24:lib",
    "//brave/third_party/rust/serde/v1:lib",
    "//brave/third_party/rust/serde_json/v1:lib",
    "//brave/third_party/rust/thiserror/v1:lib",
    "//brave/third_party/rust/url/v2:lib",
  ]
  features = [
    "css-validation",
    "cssparser",
    "full-regex-handling",
    "regex-debug-info",
    "selectors",
  ]
  rustenv = []
  rustflags = []
  if (is_ios) {
    features += [ "content-blocking" ]
  } else {
    features += [
      "object-pooling",
      "lifeguard",
      "unsync-regex-caching",
    ]
    deps += [ "//brave/third_party/rust/lifeguard/v0_6:lib" ]
  }

  #####################################################################
  # Tweaking which GN `config`s apply to this target.

  # Config changes that apply to all `//third_party/rust` crates.
  _configs_to_remove = [
    # We don't need code coverage data for any `chromium_crates_io` crates.
    "//build/config/coverage:default_coverage",

    # This is third-party code, so remove `chromium_code` config.  We are not
    # at the same time adding `//build/config/compiler:no_chromium_code`,
    # because 1) we don't want to pull how warnings are handled by that config
    # and 2) that config doesn't have any non-warnings-related stuff.
    "//build/config/compiler:chromium_code",
  ]
  _configs_to_add = []

  # Changing (if needed) which configs apply to this specific crate (based on
  # `extra_kv.configs_to_remove` and `extra_kv.configs_to_add` from
  # `gnrt_config.toml`).
  _configs_to_remove += []
  _configs_to_add += []

  # Applying config changes.
  library_configs -= _configs_to_remove
  library_configs += _configs_to_add
  executable_configs -= _configs_to_remove
  executable_configs += _configs_to_add
  proc_macro_configs -= _configs_to_remove
  proc_macro_configs += _configs_to_add
}
