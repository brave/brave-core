# Copyright 2023 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/rust/cargo_crate.gni")

cargo_crate("lib") {
  crate_name = "curve25519_dalek"
  epoch = "4"
  crate_type = "rlib"

  # Only for usage from third-party crates. Add the crate to
  # third_party.toml to use it from first-party code.
  visibility = [ "//brave/third_party/rust/*" ]
  crate_root = "crate/src/lib.rs"
  sources = [
    "//brave/third_party/rust/curve25519_dalek/v4/crate/benches/dalek_benchmarks.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/build.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/mod.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/serial/curve_models/mod.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/serial/fiat_u32/field.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/serial/fiat_u32/mod.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/serial/fiat_u64/field.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/serial/fiat_u64/mod.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/serial/mod.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/serial/scalar_mul/mod.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/serial/scalar_mul/pippenger.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/serial/scalar_mul/precomputed_straus.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/serial/scalar_mul/straus.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/serial/scalar_mul/variable_base.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/serial/scalar_mul/vartime_double_base.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/serial/u32/constants.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/serial/u32/field.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/serial/u32/mod.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/serial/u32/scalar.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/serial/u64/constants.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/serial/u64/field.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/serial/u64/mod.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/serial/u64/scalar.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/vector/avx2/constants.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/vector/avx2/edwards.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/vector/avx2/field.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/vector/avx2/mod.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/vector/ifma/constants.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/vector/ifma/edwards.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/vector/ifma/field.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/vector/ifma/mod.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/vector/mod.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/vector/packed_simd.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/vector/scalar_mul/mod.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/vector/scalar_mul/pippenger.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/vector/scalar_mul/precomputed_straus.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/vector/scalar_mul/straus.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/vector/scalar_mul/variable_base.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/backend/vector/scalar_mul/vartime_double_base.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/constants.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/diagnostics.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/edwards.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/field.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/lib.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/macros.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/montgomery.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/ristretto.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/scalar.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/traits.rs",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/src/window.rs",
  ]
  inputs = [
    "//brave/third_party/rust/curve25519_dalek/v4/crate/CHANGELOG.md",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/README.md",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/docs/avx2-notes.md",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/docs/ifma-notes.md",
    "//brave/third_party/rust/curve25519_dalek/v4/crate/docs/parallel-formulas.md",
  ]

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2021"
  cargo_pkg_version = "4.1.1"
  cargo_pkg_authors = "Isis Lovecruft <isis@patternsinthevoid.net>, Henry de Valence <hdevalence@hdevalence.ca>"
  cargo_pkg_name = "curve25519-dalek"
  cargo_pkg_description = "A pure-Rust implementation of group operations on ristretto255 and Curve25519"
  library_configs -= [ "//build/config/compiler:chromium_code" ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [ "//build/config/compiler:chromium_code" ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    "//brave/third_party/rust/subtle/v2:lib",
    "//brave/third_party/rust/zeroize/v1:lib",
    "//third_party/rust/cfg_if/v1:lib",
    "//third_party/rust/rand_core/v0_6:lib",
    "//third_party/rust/serde/v1:lib",
  ]
  if (target_cpu == "x64") {
    deps += [
      "//brave/third_party/rust/cpufeatures/v0_2:lib",
      "//brave/third_party/rust/curve25519_dalek_derive/v0_1:lib",
    ]
  }
  build_deps = [
    "//brave/third_party/rust/platforms/v3:buildrs_support",
    "//third_party/rust/rustc_version/v0_4:buildrs_support",
  ]
  features = [
    "alloc",
    "precomputed-tables",
    "rand_core",
    "serde",
    "zeroize",
  ]
  build_root = "crate/build.rs"
  build_sources = [ "crate/build.rs" ]
}
