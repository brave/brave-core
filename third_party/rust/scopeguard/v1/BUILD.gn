# Copyright 2023 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/rust/cargo_crate.gni")

cargo_crate("lib") {
  crate_name = "scopeguard"
  epoch = "1"
  crate_type = "rlib"

  # Only for usage from third-party crates. Add the crate to
  # third_party.toml to use it from first-party code.
  visibility = [ "//brave/third_party/rust/*" ]
  crate_root = "crate/src/lib.rs"
  sources = [
    "//brave/third_party/rust/scopeguard/v1/crate/examples/readme.rs",
    "//brave/third_party/rust/scopeguard/v1/crate/src/lib.rs",
  ]
  inputs = []

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2015"
  cargo_pkg_version = "1.1.0"
  cargo_pkg_authors = "bluss"
  cargo_pkg_name = "scopeguard"
  cargo_pkg_description = "A RAII scope guard that will run a given closure when it goes out of scope, even if the code between panics (assuming unwinding panic).  Defines the macros `defer!`, `defer_on_unwind!`, `defer_on_success!` as shorthands for guards with one of the implemented strategies."
  library_configs -= [ "//build/config/compiler:chromium_code" ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [ "//build/config/compiler:chromium_code" ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  features = [ "use_std" ]
}
