name: CI
on:
  # Run CI on new pushes to the repo or any pull requests.
  # If only the README file changed, ignore.
  pull_request:
    paths-ignore:
      - README.md
  push:
    branches: master
    paths-ignore:
      - README.md
  # Allow CI workflow to be run manually
  workflow_dispatch:
  # Run CI at least once a month no matter what
  schedule:
    - cron: '0 1 1 */1 *'

jobs:
  test:
    strategy:
      matrix:
        platform:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        toolchain:
          - stable
          - nightly
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2

      - name: Install toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: Run cargo test --no-default-features
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: -D warnings
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1
        with:
          command: test
          args: --no-default-features

      - name: Run cargo test --all-features
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: -D warnings
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1
        with:
          command: test
          args: --all-features

  cross-linux-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust_target:
          # Other interesting archs here:
          # https://github.com/rust-embedded/cross/tree/master/docker
          - i686-unknown-linux-gnu
          - powerpc-unknown-linux-gnu
    timeout-minutes: 10
    steps:
      - name: Checkout sources
        uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2

      - name: Install Rust stable
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1
        with:
            toolchain: stable
            profile: minimal
            target: ${{ matrix.rust_target }}
            default: true

      - name: Test
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: -D warnings
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1
        with:
          # see https://github.com/rust-embedded/cross
          use-cross: true
          command: test
          args: --all-features --target ${{ matrix.rust_target }}

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt

      - name: Run cargo fmt
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1
        with:
          command: fmt
          args: --all -- --check
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2
      - uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
      - run: cargo clippy --all-features -- -D warnings

  codecov:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1
        with:
          toolchain: stable
          override: true

      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@044a1e5bdace8dd2f727b1af63c1d9a1d3572068 # v0.1
        env:
          CARGO_INCREMENTAL: 0
        with:
          version: 0.15.0
          args: --all-features

      - name: Upload to codecov.io
        uses: codecov/codecov-action@cb218a0977f94755cee8a27ab63232797780f625 # v1.0.2
        with:
          token: ${{secrets.CODECOV_TOKEN}}

      - name: Archive code coverage results
        uses: actions/upload-artifact@3446296876d12d4e3a0f3145a3c87e67bf0a16b5 # v1
        with:
          name: code-coverage-report
          path: cobertura.xml
