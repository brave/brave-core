# Copyright 2023 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# @generated from third_party/rust/BUILD.gn.hbs by tools/crates/gnrt.
# Do not edit!

import("//build/rust/cargo_crate.gni")

cargo_crate("lib") {
  crate_name = "syn"
  epoch = "2"
  crate_type = "rlib"

  # Only for usage from third-party crates. Add the crate to
  # third_party.toml to use it from first-party code.
  visibility = [ "//third_party/rust/*" ]
  crate_root = "crate/src/lib.rs"
  sources = [
    "//third_party/rust/syn/v2/crate/benches/file.rs",
    "//third_party/rust/syn/v2/crate/benches/rust.rs",
    "//third_party/rust/syn/v2/crate/src/attr.rs",
    "//third_party/rust/syn/v2/crate/src/bigint.rs",
    "//third_party/rust/syn/v2/crate/src/buffer.rs",
    "//third_party/rust/syn/v2/crate/src/custom_keyword.rs",
    "//third_party/rust/syn/v2/crate/src/custom_punctuation.rs",
    "//third_party/rust/syn/v2/crate/src/data.rs",
    "//third_party/rust/syn/v2/crate/src/derive.rs",
    "//third_party/rust/syn/v2/crate/src/discouraged.rs",
    "//third_party/rust/syn/v2/crate/src/drops.rs",
    "//third_party/rust/syn/v2/crate/src/error.rs",
    "//third_party/rust/syn/v2/crate/src/export.rs",
    "//third_party/rust/syn/v2/crate/src/expr.rs",
    "//third_party/rust/syn/v2/crate/src/ext.rs",
    "//third_party/rust/syn/v2/crate/src/file.rs",
    "//third_party/rust/syn/v2/crate/src/gen/clone.rs",
    "//third_party/rust/syn/v2/crate/src/gen/debug.rs",
    "//third_party/rust/syn/v2/crate/src/gen/eq.rs",
    "//third_party/rust/syn/v2/crate/src/gen/fold.rs",
    "//third_party/rust/syn/v2/crate/src/gen/hash.rs",
    "//third_party/rust/syn/v2/crate/src/gen/visit.rs",
    "//third_party/rust/syn/v2/crate/src/gen/visit_mut.rs",
    "//third_party/rust/syn/v2/crate/src/gen_helper.rs",
    "//third_party/rust/syn/v2/crate/src/generics.rs",
    "//third_party/rust/syn/v2/crate/src/group.rs",
    "//third_party/rust/syn/v2/crate/src/ident.rs",
    "//third_party/rust/syn/v2/crate/src/item.rs",
    "//third_party/rust/syn/v2/crate/src/lib.rs",
    "//third_party/rust/syn/v2/crate/src/lifetime.rs",
    "//third_party/rust/syn/v2/crate/src/lit.rs",
    "//third_party/rust/syn/v2/crate/src/lookahead.rs",
    "//third_party/rust/syn/v2/crate/src/mac.rs",
    "//third_party/rust/syn/v2/crate/src/macros.rs",
    "//third_party/rust/syn/v2/crate/src/meta.rs",
    "//third_party/rust/syn/v2/crate/src/op.rs",
    "//third_party/rust/syn/v2/crate/src/parse.rs",
    "//third_party/rust/syn/v2/crate/src/parse_macro_input.rs",
    "//third_party/rust/syn/v2/crate/src/parse_quote.rs",
    "//third_party/rust/syn/v2/crate/src/pat.rs",
    "//third_party/rust/syn/v2/crate/src/path.rs",
    "//third_party/rust/syn/v2/crate/src/print.rs",
    "//third_party/rust/syn/v2/crate/src/punctuated.rs",
    "//third_party/rust/syn/v2/crate/src/restriction.rs",
    "//third_party/rust/syn/v2/crate/src/sealed.rs",
    "//third_party/rust/syn/v2/crate/src/span.rs",
    "//third_party/rust/syn/v2/crate/src/spanned.rs",
    "//third_party/rust/syn/v2/crate/src/stmt.rs",
    "//third_party/rust/syn/v2/crate/src/thread.rs",
    "//third_party/rust/syn/v2/crate/src/token.rs",
    "//third_party/rust/syn/v2/crate/src/tt.rs",
    "//third_party/rust/syn/v2/crate/src/ty.rs",
    "//third_party/rust/syn/v2/crate/src/verbatim.rs",
    "//third_party/rust/syn/v2/crate/src/whitespace.rs",
    "//third_party/rust/syn/v2/crate/tests/common/eq.rs",
    "//third_party/rust/syn/v2/crate/tests/common/mod.rs",
    "//third_party/rust/syn/v2/crate/tests/common/parse.rs",
    "//third_party/rust/syn/v2/crate/tests/debug/gen.rs",
    "//third_party/rust/syn/v2/crate/tests/debug/mod.rs",
    "//third_party/rust/syn/v2/crate/tests/macros/mod.rs",
    "//third_party/rust/syn/v2/crate/tests/regression.rs",
    "//third_party/rust/syn/v2/crate/tests/regression/issue1108.rs",
    "//third_party/rust/syn/v2/crate/tests/regression/issue1235.rs",
    "//third_party/rust/syn/v2/crate/tests/repo/mod.rs",
    "//third_party/rust/syn/v2/crate/tests/repo/progress.rs",
    "//third_party/rust/syn/v2/crate/tests/test_asyncness.rs",
    "//third_party/rust/syn/v2/crate/tests/test_attribute.rs",
    "//third_party/rust/syn/v2/crate/tests/test_derive_input.rs",
    "//third_party/rust/syn/v2/crate/tests/test_expr.rs",
    "//third_party/rust/syn/v2/crate/tests/test_generics.rs",
    "//third_party/rust/syn/v2/crate/tests/test_grouping.rs",
    "//third_party/rust/syn/v2/crate/tests/test_ident.rs",
    "//third_party/rust/syn/v2/crate/tests/test_item.rs",
    "//third_party/rust/syn/v2/crate/tests/test_iterators.rs",
    "//third_party/rust/syn/v2/crate/tests/test_lit.rs",
    "//third_party/rust/syn/v2/crate/tests/test_meta.rs",
    "//third_party/rust/syn/v2/crate/tests/test_parse_buffer.rs",
    "//third_party/rust/syn/v2/crate/tests/test_parse_stream.rs",
    "//third_party/rust/syn/v2/crate/tests/test_pat.rs",
    "//third_party/rust/syn/v2/crate/tests/test_path.rs",
    "//third_party/rust/syn/v2/crate/tests/test_precedence.rs",
    "//third_party/rust/syn/v2/crate/tests/test_receiver.rs",
    "//third_party/rust/syn/v2/crate/tests/test_round_trip.rs",
    "//third_party/rust/syn/v2/crate/tests/test_shebang.rs",
    "//third_party/rust/syn/v2/crate/tests/test_should_parse.rs",
    "//third_party/rust/syn/v2/crate/tests/test_size.rs",
    "//third_party/rust/syn/v2/crate/tests/test_stmt.rs",
    "//third_party/rust/syn/v2/crate/tests/test_token_trees.rs",
    "//third_party/rust/syn/v2/crate/tests/test_ty.rs",
    "//third_party/rust/syn/v2/crate/tests/test_visibility.rs",
    "//third_party/rust/syn/v2/crate/tests/zzz_stable.rs",
  ]
  inputs = [ "//third_party/rust/syn/v2/crate/README.md" ]

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2021"
  cargo_pkg_version = "2.0.29"
  cargo_pkg_authors = "David Tolnay <dtolnay@gmail.com>"
  cargo_pkg_name = "syn"
  cargo_pkg_description = "Parser for Rust source code"
  library_configs -= [ "//build/config/compiler:chromium_code" ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [ "//build/config/compiler:chromium_code" ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    "//third_party/rust/proc_macro2/v1:lib",
    "//third_party/rust/quote/v1:lib",
    "//third_party/rust/unicode_ident/v1:lib",
  ]
  features = [
    "clone-impls",
    "derive",
    "extra-traits",
    "full",
    "parsing",
    "printing",
    "proc-macro",
    "quote",
    "visit",
    "visit-mut",
  ]
}
