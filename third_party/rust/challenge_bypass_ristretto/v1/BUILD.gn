# Copyright 2023 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/rust/cargo_crate.gni")

cargo_crate("lib") {
  crate_name = "challenge_bypass_ristretto"
  epoch = "1"
  crate_type = "rlib"
  crate_root = "crate/src/lib.rs"
  sources = [
    "//brave/third_party/rust/challenge_bypass_ristretto/v1/crate/benches/benchmarks.rs",
    "//brave/third_party/rust/challenge_bypass_ristretto/v1/crate/src/dleq.rs",
    "//brave/third_party/rust/challenge_bypass_ristretto/v1/crate/src/dleq_merlin.rs",
    "//brave/third_party/rust/challenge_bypass_ristretto/v1/crate/src/errors.rs",
    "//brave/third_party/rust/challenge_bypass_ristretto/v1/crate/src/lib.rs",
    "//brave/third_party/rust/challenge_bypass_ristretto/v1/crate/src/macros.rs",
    "//brave/third_party/rust/challenge_bypass_ristretto/v1/crate/src/oprf.rs",
    "//brave/third_party/rust/challenge_bypass_ristretto/v1/crate/src/voprf.rs",
    "//brave/third_party/rust/challenge_bypass_ristretto/v1/crate/tests/e2e.rs",
  ]
  inputs = [
    "//brave/third_party/rust/challenge_bypass_ristretto/v1/crate/README.md",
    "//brave/third_party/rust/challenge_bypass_ristretto/v1/crate/docs/PROTOCOL.md",
  ]

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2018"
  cargo_pkg_version = "1.0.1"
  cargo_pkg_authors = "eV <ev@7pr.xyz>"
  cargo_pkg_name = "challenge-bypass-ristretto"
  cargo_pkg_description = "A rust implemention of the privacy pass cryptographic protocol using the Ristretto group (WIP)"
  library_configs -= [ "//build/config/compiler:chromium_code" ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [ "//build/config/compiler:chromium_code" ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    "//brave/third_party/rust/crypto_mac/v0_10:lib",
    "//brave/third_party/rust/curve25519_dalek/v3:lib",
    "//brave/third_party/rust/digest/v0_9:lib",
    "//brave/third_party/rust/hmac/v0_10:lib",
    "//brave/third_party/rust/rand/v0_7:lib",
    "//brave/third_party/rust/rand_chacha/v0_2:lib",
    "//brave/third_party/rust/rand_core/v0_5:lib",
    "//brave/third_party/rust/subtle/v2:lib",
    "//brave/third_party/rust/zeroize/v1:lib",
    "//third_party/rust/base64/v0_13:lib",
    "//third_party/rust/serde/v1:lib",
  ]
  features = [
    "alloc",
    "base64",
    "serde",
    "serde_base64",
    "std",
    "u64_backend",
  ]
}
