name: CI

on:
  push:
    branches: ["**"]
    paths-ignore: ["README.md", "CHANGELOG.md"]
  pull_request:
    branches: ["**"]
    paths-ignore: ["README.md", "CHANGELOG.md"]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-D warnings"

jobs:
  test:
    name: Test on Rust stable
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # 32-bit big-endian target
          - target: powerpc-unknown-linux-gnu
            deps: sudo apt update && sudo apt install gcc-multilib

          # 64-bit target
          - target: x86_64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo test --all-features

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - run: cargo clippy --all-features -- -D warnings

  # Test no_std build-only
  build-nostd:
    name: Build on no_std target (thumbv7em-none-eabi)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: thumbv7em-none-eabi
      - uses: taiki-e/install-action@cargo-hack
      # No default features build
      - name: no_std / no feat
        run: cargo build --target thumbv7em-none-eabi --release --no-default-features
      - name: no_std / cargo hack
        run: cargo hack build --target thumbv7em-none-eabi --release --each-feature --exclude-features default,std

  msrv:
    name: Current MSRV is 1.60.0
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # Re-resolve Cargo.lock with minimal versions
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo update -Z minimal-versions
      # Now check that `cargo build` works with respect to the oldest possible
      # deps and the stated MSRV
      - uses: dtolnay/rust-toolchain@1.60.0
      - run: cargo build --all-features
