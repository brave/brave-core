error[E0512]: cannot transmute between types of different sizes, or dependently-sized types
  --> tests/ui-msrv/transmute-mut-size-increase.rs:17:37
   |
17 | const INCREASE_SIZE: &mut [u8; 2] = transmute_mut!(&mut 0u8);
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: source type: `u8` (8 bits)
   = note: target type: `[u8; 2]` (16 bits)
   = note: this error originates in the macro `$crate::assert_size_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0658]: mutable references are not allowed in constants
  --> tests/ui-msrv/transmute-mut-size-increase.rs:17:52
   |
17 | const INCREASE_SIZE: &mut [u8; 2] = transmute_mut!(&mut 0u8);
   |                                                    ^^^^^^^^
   |
   = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information

error[E0015]: calls in constants are limited to constant functions, tuple structs and tuple variants
  --> tests/ui-msrv/transmute-mut-size-increase.rs:17:37
   |
17 | const INCREASE_SIZE: &mut [u8; 2] = transmute_mut!(&mut 0u8);
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this error originates in the macro `transmute_mut` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0716]: temporary value dropped while borrowed
  --> tests/ui-msrv/transmute-mut-size-increase.rs:17:57
   |
17 | const INCREASE_SIZE: &mut [u8; 2] = transmute_mut!(&mut 0u8);
   |                                     --------------------^^^-
   |                                     |                   |
   |                                     |                   creates a temporary which is freed while still in use
   |                                     temporary value is freed at the end of this statement
   |                                     using this value as a constant requires that borrow lasts for `'static`
