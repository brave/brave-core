error[E0277]: the trait bound `NotZerocopy<AU16>: zerocopy::IntoBytes` is not satisfied
  --> tests/ui-nightly/try_transmute_ref-src-not-immutable-intobytes.rs:19:48
   |
19 |     let src_not_into_bytes: Result<&AU16, _> = try_transmute_ref!(&NotZerocopy(AU16(0)));
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `zerocopy::IntoBytes` is not implemented for `NotZerocopy<AU16>`
   |
   = note: Consider adding `#[derive(IntoBytes)]` to `NotZerocopy<AU16>`
   = help: the following other types implement trait `zerocopy::IntoBytes`:
             ()
             AU16
             AtomicBool
             AtomicI16
             AtomicI32
             AtomicI64
             AtomicI8
             AtomicIsize
           and $N others
note: required by a bound in `try_transmute_ref`
  --> src/util/macro_util.rs
   |
   | pub fn try_transmute_ref<Src, Dst>(src: &Src) -> Result<&Dst, ValidityError<&Src, Dst>>
   |        ----------------- required by a bound in this function
   | where
   |     Src: IntoBytes + Immutable,
   |          ^^^^^^^^^ required by this bound in `try_transmute_ref`
   = note: this error originates in the macro `try_transmute_ref` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `NotZerocopy<AU16>: zerocopy::Immutable` is not satisfied
  --> tests/ui-nightly/try_transmute_ref-src-not-immutable-intobytes.rs:19:48
   |
19 |     let src_not_into_bytes: Result<&AU16, _> = try_transmute_ref!(&NotZerocopy(AU16(0)));
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `zerocopy::Immutable` is not implemented for `NotZerocopy<AU16>`
   |
   = note: Consider adding `#[derive(Immutable)]` to `NotZerocopy<AU16>`
   = help: the following other types implement trait `zerocopy::Immutable`:
             &T
             &mut T
             ()
             *const T
             *mut T
             AU16
             Box<T>
             F32<O>
           and $N others
note: required by a bound in `try_transmute_ref`
  --> src/util/macro_util.rs
   |
   | pub fn try_transmute_ref<Src, Dst>(src: &Src) -> Result<&Dst, ValidityError<&Src, Dst>>
   |        ----------------- required by a bound in this function
   | where
   |     Src: IntoBytes + Immutable,
   |                      ^^^^^^^^^ required by this bound in `try_transmute_ref`
   = note: this error originates in the macro `try_transmute_ref` (in Nightly builds, run with -Z macro-backtrace for more info)
