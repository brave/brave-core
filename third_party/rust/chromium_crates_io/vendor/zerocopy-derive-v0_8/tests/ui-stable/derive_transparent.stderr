error[E0277]: the trait bound `NotZerocopy: zerocopy::TryFromBytes` is not satisfied
  --> tests/ui-stable/derive_transparent.rs:34:23
   |
34 | util_assert_impl_all!(TransparentStruct<NotZerocopy>: TryFromBytes);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `zerocopy::TryFromBytes` is not implemented for `NotZerocopy`
   |
   = note: Consider adding `#[derive(TryFromBytes)]` to `NotZerocopy`
   = help: the following other types implement trait `zerocopy::TryFromBytes`:
             ()
             *const T
             *mut T
             AU16
             AtomicBool
             AtomicI16
             AtomicI32
             AtomicI64
           and $N others
note: required for `TransparentStruct<NotZerocopy>` to implement `zerocopy::TryFromBytes`
  --> tests/ui-stable/derive_transparent.rs:24:21
   |
24 | #[derive(IntoBytes, FromBytes, Unaligned)]
   |                     ^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
note: required by a bound in `_::{closure#0}::_::{closure#0}::assert_impl_all`
  --> tests/ui-stable/derive_transparent.rs:34:1
   |
34 | util_assert_impl_all!(TransparentStruct<NotZerocopy>: TryFromBytes);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `assert_impl_all`
   = note: this error originates in the derive macro `FromBytes` which comes from the expansion of the macro `util_assert_impl_all` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `NotZerocopy: FromZeros` is not satisfied
  --> tests/ui-stable/derive_transparent.rs:35:23
   |
35 | util_assert_impl_all!(TransparentStruct<NotZerocopy>: FromZeros);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `FromZeros` is not implemented for `NotZerocopy`
   |
   = note: Consider adding `#[derive(FromZeros)]` to `NotZerocopy`
   = help: the following other types implement trait `FromZeros`:
             ()
             *const T
             *mut T
             AU16
             AtomicBool
             AtomicI16
             AtomicI32
             AtomicI64
           and $N others
note: required for `TransparentStruct<NotZerocopy>` to implement `FromZeros`
  --> tests/ui-stable/derive_transparent.rs:24:21
   |
24 | #[derive(IntoBytes, FromBytes, Unaligned)]
   |                     ^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
note: required by a bound in `_::{closure#0}::_::{closure#0}::assert_impl_all`
  --> tests/ui-stable/derive_transparent.rs:35:1
   |
35 | util_assert_impl_all!(TransparentStruct<NotZerocopy>: FromZeros);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `assert_impl_all`
   = note: this error originates in the derive macro `FromBytes` which comes from the expansion of the macro `util_assert_impl_all` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `NotZerocopy: zerocopy::FromBytes` is not satisfied
  --> tests/ui-stable/derive_transparent.rs:36:23
   |
36 | util_assert_impl_all!(TransparentStruct<NotZerocopy>: FromBytes);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `zerocopy::FromBytes` is not implemented for `NotZerocopy`
   |
   = note: Consider adding `#[derive(FromBytes)]` to `NotZerocopy`
   = help: the following other types implement trait `zerocopy::FromBytes`:
             ()
             AU16
             AtomicI16
             AtomicI32
             AtomicI64
             AtomicI8
             AtomicIsize
             AtomicU16
           and $N others
note: required for `TransparentStruct<NotZerocopy>` to implement `zerocopy::FromBytes`
  --> tests/ui-stable/derive_transparent.rs:24:21
   |
24 | #[derive(IntoBytes, FromBytes, Unaligned)]
   |                     ^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
note: required by a bound in `_::{closure#0}::_::{closure#0}::assert_impl_all`
  --> tests/ui-stable/derive_transparent.rs:36:1
   |
36 | util_assert_impl_all!(TransparentStruct<NotZerocopy>: FromBytes);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `assert_impl_all`
   = note: this error originates in the derive macro `FromBytes` which comes from the expansion of the macro `util_assert_impl_all` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `NotZerocopy: zerocopy::IntoBytes` is not satisfied
  --> tests/ui-stable/derive_transparent.rs:37:23
   |
37 | util_assert_impl_all!(TransparentStruct<NotZerocopy>: IntoBytes);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `zerocopy::IntoBytes` is not implemented for `NotZerocopy`
   |
   = note: Consider adding `#[derive(IntoBytes)]` to `NotZerocopy`
   = help: the following other types implement trait `zerocopy::IntoBytes`:
             ()
             AU16
             AtomicBool
             AtomicI16
             AtomicI32
             AtomicI64
             AtomicI8
             AtomicIsize
           and $N others
note: required for `TransparentStruct<NotZerocopy>` to implement `zerocopy::IntoBytes`
  --> tests/ui-stable/derive_transparent.rs:24:10
   |
24 | #[derive(IntoBytes, FromBytes, Unaligned)]
   |          ^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
note: required by a bound in `_::{closure#0}::_::{closure#0}::assert_impl_all`
  --> tests/ui-stable/derive_transparent.rs:37:1
   |
37 | util_assert_impl_all!(TransparentStruct<NotZerocopy>: IntoBytes);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `assert_impl_all`
   = note: this error originates in the derive macro `IntoBytes` which comes from the expansion of the macro `util_assert_impl_all` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `NotZerocopy: zerocopy::Unaligned` is not satisfied
  --> tests/ui-stable/derive_transparent.rs:38:23
   |
38 | util_assert_impl_all!(TransparentStruct<NotZerocopy>: Unaligned);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `zerocopy::Unaligned` is not implemented for `NotZerocopy`
   |
   = note: Consider adding `#[derive(Unaligned)]` to `NotZerocopy`
   = help: the following other types implement trait `zerocopy::Unaligned`:
             ()
             AtomicBool
             AtomicI8
             AtomicU8
             Cell<T>
             F32<O>
             F64<O>
             I128<O>
           and $N others
note: required for `TransparentStruct<NotZerocopy>` to implement `zerocopy::Unaligned`
  --> tests/ui-stable/derive_transparent.rs:24:32
   |
24 | #[derive(IntoBytes, FromBytes, Unaligned)]
   |                                ^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
note: required by a bound in `_::{closure#0}::_::{closure#0}::assert_impl_all`
  --> tests/ui-stable/derive_transparent.rs:38:1
   |
38 | util_assert_impl_all!(TransparentStruct<NotZerocopy>: Unaligned);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `assert_impl_all`
   = note: this error originates in the derive macro `Unaligned` which comes from the expansion of the macro `util_assert_impl_all` (in Nightly builds, run with -Z macro-backtrace for more info)
