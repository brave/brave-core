# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
name = "adblock"
version = "0.10.0"
authors = [
    "Anton Lazarev <alazarev@brave.com>",
    "Andrius Aucinas",
]
build = false
exclude = [
    "*.md",
    ".github/",
    ".gitignore",
    ".npmignore",
    "data/",
    "examples/",
    "js/",
    "package-lock.json",
    "package.json",
    "tests/",
]
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Native Rust module for Adblock Plus syntax (e.g. EasyList, EasyPrivacy) filter parsing and matching."
readme = "README.md"
license = "MPL-2.0"
repository = "https://github.com/brave/adblock-rust/"

[features]
content-blocking = []
css-validation = [
    "cssparser",
    "selectors",
]
default = [
    "embedded-domain-resolver",
    "full-regex-handling",
    "unsync-regex-caching",
]
embedded-domain-resolver = ["addr"]
full-regex-handling = []
regex-debug-info = []
resource-assembler = []
unsync-regex-caching = []

[lib]
name = "adblock"
path = "src/lib.rs"
bench = false

[[bench]]
name = "bench_cosmetic_matching"
path = "benches/bench_cosmetic_matching.rs"

[[bench]]
name = "bench_matching"
path = "benches/bench_matching.rs"
harness = false

[[bench]]
name = "bench_memory"
path = "benches/bench_memory.rs"
harness = false

[[bench]]
name = "bench_redirect_performance"
path = "benches/bench_redirect_performance.rs"
harness = false

[[bench]]
name = "bench_regex"
path = "benches/bench_regex.rs"
harness = false

[[bench]]
name = "bench_rules"
path = "benches/bench_rules.rs"
harness = false

[[bench]]
name = "bench_serialization"
path = "benches/bench_serialization.rs"
harness = false

[[bench]]
name = "bench_url"
path = "benches/bench_url.rs"
harness = false

[dependencies.addr]
version = "0.15"
features = ["psl"]
optional = true
default-features = false

[dependencies.base64]
version = "0.22"

[dependencies.bitflags]
version = "2.9.0"
features = ["serde"]

[dependencies.cssparser]
version = "0.29"
optional = true

[dependencies.flatbuffers]
version = "25.2.10"

[dependencies.idna]
version = "1.0.3"

[dependencies.itertools]
version = "0.13"

[dependencies.memchr]
version = "2.4"

[dependencies.once_cell]
version = "1.8"

[dependencies.percent-encoding]
version = "2.1"

[dependencies.regex]
version = "1.5"

[dependencies.rmp-serde]
version = "0.15"

[dependencies.seahash]
version = "4.1.0"

[dependencies.selectors]
version = "0.24"
optional = true

[dependencies.serde]
version = "1.0.219"
features = [
    "derive",
    "rc",
]

[dependencies.serde_json]
version = "1.0.140"

[dependencies.thiserror]
version = "1.0"

[dependencies.url]
version = "2.5"

[dev-dependencies.criterion]
version = "=0.5.1"

[dev-dependencies.csv]
version = "=1.3.0"

[dev-dependencies.futures]
version = "=0.3.31"

[dev-dependencies.mock_instant]
version = "=0.5.1"

[dev-dependencies.reqwest]
version = "=0.12.19"
features = ["rustls-tls"]
default-features = false

[dev-dependencies.sha2]
version = "=0.9.9"

[dev-dependencies.tokio]
version = "=1.45.1"
features = ["rt-multi-thread"]

[lints.clippy]
large-enum-variant = "allow"
len_zero = "allow"
or-then-unwrap = "allow"
search-is-some = "allow"
sliced-string-as-bytes = "allow"
