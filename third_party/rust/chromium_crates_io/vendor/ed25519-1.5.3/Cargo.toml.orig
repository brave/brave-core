[package]
name = "ed25519"
version = "1.5.3"
authors = ["RustCrypto Developers"]
license = "Apache-2.0 OR MIT"
description = """
Edwards Digital Signature Algorithm (EdDSA) over Curve25519 (as specified in RFC 8032)
support library providing signature type definitions and PKCS#8 private key
decoding/encoding support
"""
documentation = "https://docs.rs/ed25519"
repository = "https://github.com/RustCrypto/signatures/tree/master/ed25519"
readme = "README.md"
categories = ["cryptography", "no-std"]
keywords = ["crypto", "curve25519", "ecc", "signature", "signing"]
edition = "2021"
rust-version = "1.56"

[dependencies]
signature = { version = "1.3.1", default-features = false }

# optional dependencies
pkcs8 = { version = "0.9", optional = true }
serde = { version = "1", optional = true, default-features = false }
serde_bytes_crate = { package = "serde_bytes", version = "0.11", optional = true }
zeroize = { version = "1", optional = true, default-features = false }

[dev-dependencies]
bincode = "1"
ed25519-dalek = "1"
hex-literal = "0.3"
#ring-compat = "0.4" # TODO(tarcieri): re-enable after bumping deps in `ring-compat`
rand_core = { version = "0.5", features = ["std"] }

[features]
default = ["std"]
alloc = ["pkcs8/alloc"]
pem = ["pkcs8/pem"]
serde_bytes = ["serde", "serde_bytes_crate", "std"]
std = ["signature/std"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
