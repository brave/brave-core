name: build

on: [push, pull_request]

jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        toolchain: [stable]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout Sources
        uses: actions/checkout@v4

      - name: Cache Dependencies & Build Outputs
        uses: actions/cache@v4
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
          components: rustfmt, clippy

      - name: Check Code Format
        run: cargo fmt --all -- --check
        shell: bash

      - name: Code Lint
        run: cargo clippy --all-targets --all-features -- -D warnings
        shell: bash

      - name: Test --no-default-features
        run: cargo test --no-default-features
        shell: bash

      - name: Test
        run: cargo test --all-features
        shell: bash

  build-no-std:
    name: Build no_std
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v4

      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: thumbv6m-none-eabi

      - name: Build
        run: cargo build --no-default-features --target thumbv6m-none-eabi
        shell: bash

  build-no-std-serde:
    name: Build no_std, but with `serde-codec` feature enabled
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v4

      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Build
        # `thumbv6m-none-eabi` can't be used as Serde doesn't compile there.
        run: cargo build --no-default-features --features serde-codec
        shell: bash

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v4

      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Generate Code Coverage
        run: |
          cargo install cargo-tarpaulin
          cargo tarpaulin --all-features --out Xml

      - name: Upload Code Coverage
        uses: codecov/codecov-action@v4
