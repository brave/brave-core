# Copyright 2023 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/rust/cargo_crate.gni")

cargo_crate("lib") {
  crate_name = "zeroize"
  epoch = "1"
  crate_type = "rlib"

  # Only for usage from third-party crates. Add the crate to
  # third_party.toml to use it from first-party code.
  visibility = [ "//brave/third_party/rust/*" ]
  crate_root = "crate/src/lib.rs"
  sources = [
    "//brave/third_party/rust/zeroize/v1/crate/src/aarch64.rs",
    "//brave/third_party/rust/zeroize/v1/crate/src/lib.rs",
    "//brave/third_party/rust/zeroize/v1/crate/src/x86.rs",
    "//brave/third_party/rust/zeroize/v1/crate/tests/zeroize_derive.rs",
  ]
  inputs = [
    "//brave/third_party/rust/zeroize/v1/crate/CHANGELOG.md",
    "//brave/third_party/rust/zeroize/v1/crate/README.md",
  ]

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2018"
  cargo_pkg_version = "1.5.5"
  cargo_pkg_authors = "The RustCrypto Project Developers"
  cargo_pkg_name = "zeroize"
  cargo_pkg_description = "Securely clear secrets from memory with a simple trait built on stable Rust primitives which guarantee memory is zeroed using an operation will not be 'optimized away' by the compiler. Uses a portable pure Rust implementation that works everywhere, even WASM!"
  library_configs -= [ "//build/config/compiler:chromium_code" ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [ "//build/config/compiler:chromium_code" ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [ "//brave/third_party/rust/zeroize_derive/v1:lib" ]
  features = [
    "alloc",
    "derive",
    "zeroize_derive",
  ]
}
