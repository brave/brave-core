#!/bin/bash
set -exu

# GPG Signing key fingerprint table
#
# These GPG signing key fingerprints are accurate as of the
# dates below. These keys will be used for signing the packages
# that we ship. We will update this table as keys are changed.
#
# Date          Channel       Fingerprint           Full Key
#
# 12/29/2018    Release       0x4FE13824E3FFC656    E85FFA8E2E90B40B33ED39274FE13824E3FFC656
# 06/29/2019    Beta          0x0B31DBA06A8A26F9    D8BAD4DE7EE17AF52A834B2D0BB75829C2D4E821
# 06/29/2019    Dev           0x0B31DBA06A8A26F9    D8BAD4DE7EE17AF52A834B2D0BB75829C2D4E821
# 06/29/2019    Nightly       0x0B31DBA06A8A26F9    D8BAD4DE7EE17AF52A834B2D0BB75829C2D4E821

### The first argument is the S3 bucket, the second is the GPG key fingerprint
OPTION=${1:-brave-browser-apt-staging-nightly}
GPG_KEY_ID=${2:-E85FFA8E2E90B40B33ED39274FE13824E3FFC656} # Defaults to New Brave Software signing key

if [[ $2 == 0x* ]]; then
    echo "Error: Please pass the Full GPG KEY ID to sign with! (i.e. 'D8BAD4DE7EE17AF52A834B2D0BB75829C2D4E821')"
    exit 1
fi

if [ "$GPG_KEY_ID" = "E85FFA8E2E90B40B33ED39274FE13824E3FFC656" ]; then
  KEY_NAME=brave-core.asc
else
  KEY_NAME=brave-core-nightly.asc
fi
KEY_FILE=/tmp/${KEY_NAME}
SNAP_TAG=`date +'%s'`
DIST='artful zesty yakkety xenial jessie trusty serena stretch bionic buster cosmic disco'

cat <<EOF > $HOME/.aptly.conf
{
  "rootDir": "$HOME/.aptly",
  "downloadConcurrency": 4,
  "downloadSpeedLimit": 0,
  "architectures": [],
  "dependencyFollowSuggests": false,
  "dependencyFollowRecommends": false,
  "dependencyFollowAllVariants": false,
  "dependencyFollowSource": false,
  "gpgDisableSign": false,
  "gpgDisableVerify": false,
  "gpgProvider": "gpg",
  "downloadSourcePackages": false,
  "ppaDistributorID": "ubuntu",
  "ppaCodename": "",
  "S3PublishEndpoints": {
    "brave-browser-apt-staging-nightly": {
      "region": "us-west-2",
      "bucket": "brave-browser-apt-staging-nightly",
      "acl": "public-read"
    },
    "brave-browser-apt-staging-dev": {
      "region": "us-west-2",
      "bucket": "brave-browser-apt-staging-dev",
      "acl": "public-read"
    },
    "brave-browser-apt-staging-beta": {
      "region": "us-west-2",
      "bucket": "brave-browser-apt-staging-beta",
      "acl": "public-read"
    },
    "brave-browser-apt-staging-release": {
      "region": "us-west-2",
      "bucket": "brave-browser-apt-staging-release",
      "acl": "public-read"
    },
    "brave-browser-apt-staging-nightly-test": {
      "region": "us-west-2",
      "bucket": "brave-browser-apt-staging-nightly-test",
      "acl": "public-read"
    },
    "brave-browser-apt-staging-dev-test": {
      "region": "us-west-2",
      "bucket": "brave-browser-apt-staging-dev-test",
      "acl": "public-read"
    },
    "brave-browser-apt-staging-beta-test": {
      "region": "us-west-2",
      "bucket": "brave-browser-apt-staging-beta-test",
      "acl": "public-read"
    },
    "brave-browser-apt-staging-release-test": {
      "region": "us-west-2",
      "bucket": "brave-browser-apt-staging-release-test",
      "acl": "public-read"
    }
  },
  "SwiftPublishEndpoints": {}
}
EOF

# Make sure staging and release cache isn't mixed
rm -Rf ~/.aptly

gpg --export --armor ${GPG_KEY_ID} > ${KEY_FILE}
aws s3 cp ${KEY_FILE} s3://${OPTION}/${KEY_NAME}
aws s3api put-object-acl --acl public-read --bucket ${OPTION} --key ${KEY_NAME}

for i in ${DIST}
	do aptly publish drop -force-drop $i s3:${OPTION}: || true
done

for i in ${DIST}
	do aptly repo drop -force ${i}-release || true
done

for i in ${DIST}
	do aptly snapshot drop -force ${i}-snapshot || true
done

for i in ${DIST}
	do aptly repo create -distribution=$i -component=main ${i}-release
done

for i in ${DIST}
	do aptly repo add ${i}-release dist/*.deb
done

for i in ${DIST}
	do aptly snapshot create ${i}-snapshot from repo ${i}-release
done

for i in ${DIST}
	do aptly repo edit ${i}-release
done

for i in ${DIST}
	do aptly publish snapshot -force-overwrite=true -gpg-key=${GPG_KEY_ID} ${i}-snapshot s3:${OPTION}:
done
