// Copyright (c) 2025 The Brave Authors. All rights reserved.
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this file,
// You can obtain one at https://mozilla.org/MPL/2.0/.

#ifndef BRAVE_IOS_BROWSER_UI_WEBUI_AI_CHAT_UNTRUSTED_CONVERSATION_UI_H_
#define BRAVE_IOS_BROWSER_UI_WEBUI_AI_CHAT_UNTRUSTED_CONVERSATION_UI_H_

#include <memory>

#include "brave/components/ai_chat/core/common/mojom/ai_chat.mojom-forward.h"
#include "brave/components/ai_chat/core/common/mojom/untrusted_frame.mojom-forward.h"
#include "ios/web/public/webui/web_ui_ios.h"
#include "ios/web/public/webui/web_ui_ios_controller.h"
#include "mojo/public/cpp/bindings/pending_remote.h"
#include "mojo/public/cpp/bindings/receiver_set.h"
#include "mojo/public/cpp/bindings/remote_set.h"

// This Untrusted WebUI hosts the UI to display conversation entries, including
// ones generated by an LLM. It should not be granted more permissions than
// required to display the conversation entries. Anything requiring access
// to browser features should be done in the trusted UI.
class AIChatUntrustedConversationUI : public web::WebUIIOSController {
 public:
  explicit AIChatUntrustedConversationUI(web::WebUIIOS* web_ui,
                                         const GURL& url);
  AIChatUntrustedConversationUI(const AIChatUntrustedConversationUI&) = delete;
  AIChatUntrustedConversationUI& operator=(
      const AIChatUntrustedConversationUI&) = delete;
  ~AIChatUntrustedConversationUI() override;

  void BindInterfaceUntrustedUIHandler(
      mojo::PendingReceiver<ai_chat::mojom::UntrustedUIHandler> receiver);
  void BindInterfaceUntrustedConversationHandler(
      mojo::PendingReceiver<ai_chat::mojom::UntrustedConversationHandler>
          receiver);

 private:
  std::unique_ptr<ai_chat::mojom::UntrustedUIHandler> ui_handler_;
};

#endif  // BRAVE_IOS_BROWSER_UI_WEBUI_AI_CHAT_UNTRUSTED_CONVERSATION_UI_H_
