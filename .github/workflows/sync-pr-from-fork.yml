name: Sync PR from fork

on:
  workflow_dispatch:
    inputs:
      PR_NUMBER:
        required: true
        description: "Number of the PR from the fork"

jobs:
  sync-pr-from-fork:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Add SSH key
        env:
            SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
            mkdir -p /home/runner/.ssh
            ssh-keyscan github.com >> /home/runner/.ssh/known_hosts
            echo "${{ secrets.BRAVE_BUILDS_SSH_KEY }}" > /home/runner/.ssh/github_actions
            chmod 600 /home/runner/.ssh/github_actions
            ssh-agent -a $SSH_AUTH_SOCK > /dev/null
            ssh-add /home/runner/.ssh/github_actions

      - name: Sync PR from fork
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          PR_NUMBER: ${{ inputs.PR_NUMBER }}
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          set -x
          git config user.name brave-builds
          git config user.email devops@brave.com
          git config push.default simple
          git config --list
          gh auth status
          JQ="jq -e -r"

          gh_pr_view=$(gh pr view "$PR_NUMBER" --json baseRefName,headRefName,headRepository,headRepositoryOwner,id,isCrossRepository,url)

          baseRefName=$($JQ ".baseRefName" <<<"$gh_pr_view")
          headRefName=$($JQ ".headRefName" <<<"$gh_pr_view")
          headRepositoryName=$($JQ ".headRepository.name" <<<"$gh_pr_view")
          headRepositoryOwnerLogin=$($JQ ".headRepositoryOwner.login" <<<"$gh_pr_view")
          isCrossRepository=$($JQ ".isCrossRepository" <<<"$gh_pr_view")
          url=$($JQ ".url" <<<"$gh_pr_view")

          [[ "$isCrossRepository" = "true" ]] || { echo "PR is not cross repo. Exiting!"; exit 1; }

          git remote add contributor "git@github.com:$headRepositoryOwnerLogin/$headRepositoryName.git" || :
          contribHeadRefName="contributor-$headRepositoryOwnerLogin-$headRefName"
          git fetch contributor +"$headRefName":"$contribHeadRefName"
          git push -f origin "$contribHeadRefName"
          # TODO remove `-d` draft
          gh pr create -d -F ".github/PULL_REQUEST_TEMPLATE.md" -B "$baseRefName" -H "$contribHeadRefName" -t "Don't merge - this is a CI run for $url"
