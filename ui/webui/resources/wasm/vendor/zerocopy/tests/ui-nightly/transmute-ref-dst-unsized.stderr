error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> tests/ui-nightly/transmute-ref-dst-unsized.rs:17:28
   |
17 | const DST_UNSIZED: &[u8] = transmute_ref!(&[0u8; 1]);
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
   |                            |
   |                            doesn't have a size known at compile-time
   |                            required by a bound introduced by this call
   |
   = help: the trait `Sized` is not implemented for `[u8]`
note: required by a bound in `AssertDstIsSized`
  --> tests/ui-nightly/transmute-ref-dst-unsized.rs:17:28
   |
17 | const DST_UNSIZED: &[u8] = transmute_ref!(&[0u8; 1]);
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `AssertDstIsSized`
   = note: this error originates in the macro `transmute_ref` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> tests/ui-nightly/transmute-ref-dst-unsized.rs:17:28
   |
17 | const DST_UNSIZED: &[u8] = transmute_ref!(&[0u8; 1]);
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u8]`
   = note: all local variables must have a statically known size
   = help: unsized locals are gated as an unstable feature
   = note: this error originates in the macro `transmute_ref` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> tests/ui-nightly/transmute-ref-dst-unsized.rs:17:28
   |
17 | const DST_UNSIZED: &[u8] = transmute_ref!(&[0u8; 1]);
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u8]`
note: required by an implicit `Sized` bound in `MaxAlignsOf`
  --> src/util/macro_util.rs
   |
   | pub union MaxAlignsOf<T, U> {
   |                          ^ required by the implicit `Sized` requirement on this type parameter in `MaxAlignsOf`
   = note: this error originates in the macro `$crate::assert_align_gt_eq` which comes from the expansion of the macro `transmute_ref` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> tests/ui-nightly/transmute-ref-dst-unsized.rs:17:28
   |
17 | const DST_UNSIZED: &[u8] = transmute_ref!(&[0u8; 1]);
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u8]`
note: required by an implicit `Sized` bound in `std::intrinsics::transmute`
  --> $RUST/core/src/intrinsics.rs
   |
   | pub const unsafe fn transmute<Src, Dst>(_src: Src) -> Dst {
   |                                    ^^^ required by the implicit `Sized` requirement on this type parameter in `transmute`
   = note: this error originates in the macro `$crate::assert_size_eq` which comes from the expansion of the macro `transmute_ref` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
  --> tests/ui-nightly/transmute-ref-dst-unsized.rs:17:28
   |
17 | const DST_UNSIZED: &[u8] = transmute_ref!(&[0u8; 1]);
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u8]`
note: required by an implicit `Sized` bound in `transmute_ref`
  --> src/util/macro_util.rs
   |
   | pub const unsafe fn transmute_ref<'dst, 'src: 'dst, Src: 'src, Dst: 'dst>(
   |                                                                ^^^ required by the implicit `Sized` requirement on this type parameter in `transmute_ref`
   = note: this error originates in the macro `transmute_ref` (in Nightly builds, run with -Z macro-backtrace for more info)
