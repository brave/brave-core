# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.56"
name = "darling"
version = "0.20.11"
authors = ["Ted Driggs <ted.driggs@outlook.com>"]
build = false
exclude = [
    "/.travis.yml",
    "/publish.sh",
    "/.github/**",
]
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = """
A proc-macro library for reading attributes into structs when
implementing custom derives.
"""
documentation = "https://docs.rs/darling/0.20.11"
readme = "README.md"
license = "MIT"
repository = "https://github.com/TedDriggs/darling"

[lib]
name = "darling"
path = "src/lib.rs"

[[example]]
name = "automatic_bounds"
path = "examples/automatic_bounds.rs"

[[example]]
name = "consume_fields"
path = "examples/consume_fields.rs"

[[example]]
name = "expr_with"
path = "examples/expr_with.rs"

[[example]]
name = "fallible_read"
path = "examples/fallible_read.rs"

[[example]]
name = "heterogeneous_enum_and_word"
path = "examples/heterogeneous_enum_and_word.rs"

[[example]]
name = "shorthand_or_long_field"
path = "examples/shorthand_or_long_field.rs"

[[example]]
name = "supports_struct"
path = "examples/supports_struct.rs"

[[test]]
name = "accrue_errors"
path = "tests/accrue_errors.rs"

[[test]]
name = "attrs_with"
path = "tests/attrs_with.rs"

[[test]]
name = "compiletests"
path = "tests/compiletests.rs"

[[test]]
name = "computed_bound"
path = "tests/computed_bound.rs"

[[test]]
name = "custom_bound"
path = "tests/custom_bound.rs"

[[test]]
name = "data_with"
path = "tests/data_with.rs"

[[test]]
name = "defaults"
path = "tests/defaults.rs"

[[test]]
name = "enums_default"
path = "tests/enums_default.rs"

[[test]]
name = "enums_newtype"
path = "tests/enums_newtype.rs"

[[test]]
name = "enums_struct"
path = "tests/enums_struct.rs"

[[test]]
name = "enums_unit"
path = "tests/enums_unit.rs"

[[test]]
name = "error"
path = "tests/error.rs"

[[test]]
name = "flatten"
path = "tests/flatten.rs"

[[test]]
name = "flatten_error_accumulation"
path = "tests/flatten_error_accumulation.rs"

[[test]]
name = "flatten_from_field"
path = "tests/flatten_from_field.rs"

[[test]]
name = "forward_attrs_to_from_attributes"
path = "tests/forward_attrs_to_from_attributes.rs"

[[test]]
name = "from_generics"
path = "tests/from_generics.rs"

[[test]]
name = "from_meta"
path = "tests/from_meta.rs"

[[test]]
name = "from_type_param"
path = "tests/from_type_param.rs"

[[test]]
name = "from_type_param_default"
path = "tests/from_type_param_default.rs"

[[test]]
name = "from_variant"
path = "tests/from_variant.rs"

[[test]]
name = "generics"
path = "tests/generics.rs"

[[test]]
name = "happy_path"
path = "tests/happy_path.rs"

[[test]]
name = "hash_map"
path = "tests/hash_map.rs"

[[test]]
name = "meta_with"
path = "tests/meta_with.rs"

[[test]]
name = "multiple"
path = "tests/multiple.rs"

[[test]]
name = "newtype"
path = "tests/newtype.rs"

[[test]]
name = "skip"
path = "tests/skip.rs"

[[test]]
name = "spanned_value"
path = "tests/spanned_value.rs"

[[test]]
name = "split_declaration"
path = "tests/split_declaration.rs"

[[test]]
name = "suggestions"
path = "tests/suggestions.rs"

[[test]]
name = "supports"
path = "tests/supports.rs"

[[test]]
name = "unsupported_attributes"
path = "tests/unsupported_attributes.rs"

[dependencies.darling_core]
version = "=0.20.11"

[dependencies.darling_macro]
version = "=0.20.11"

[dev-dependencies.proc-macro2]
version = "1.0.86"

[dev-dependencies.quote]
version = "1.0.18"

[dev-dependencies.syn]
version = "2.0.15"

[features]
default = ["suggestions"]
diagnostics = ["darling_core/diagnostics"]
suggestions = ["darling_core/suggestions"]

[target."cfg(compiletests)".dev-dependencies.rustversion]
version = "1.0.9"

[target."cfg(compiletests)".dev-dependencies.trybuild]
version = "1.0.89"

[badges.maintenance]
status = "actively-developed"

[lints.rust.unexpected_cfgs]
level = "warn"
priority = 0
check-cfg = ["cfg(compiletests)"]
