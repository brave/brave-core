error: requires --cfg zerocopy_derive_union_into_bytes;
       please let us know you use this feature: https://github.com/google/zerocopy/discussions/1802
  --> tests/ui-stable/union_into_bytes_cfg/union_into_bytes_cfg.rs:20:10
   |
20 | #[derive(IntoBytes)]
   |          ^^^^^^^^^
   |
   = note: this error originates in the derive macro `IntoBytes` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `zerocopy_derive_union_into_bytes`
  --> tests/ui-stable/union_into_bytes_cfg/union_into_bytes_cfg.rs:20:10
   |
20 | #[derive(IntoBytes)]
   |          ^^^^^^^^^
   |
   = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `fmt_debug`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, and `windows`
   = note: using a cfg inside a derive macro will use the cfgs from the destination crate and not the ones from the defining crate
   = help: try referring to `IntoBytes` crate for guidance on how handle this unexpected cfg
   = help: the derive macro `IntoBytes` may come from an old version of the `zerocopy_derive` crate, try updating your dependency with `cargo update -p zerocopy_derive`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default
   = note: this warning originates in the derive macro `IntoBytes` (in Nightly builds, run with -Z macro-backtrace for more info)
