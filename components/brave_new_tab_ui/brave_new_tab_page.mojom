// Copyright (c) 2021 The Brave Authors. All rights reserved.
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this file,
// you can obtain one at http://mozilla.org/MPL/2.0/.

module brave_new_tab_page.mojom;

import "url/mojom/url.mojom";

const string kRandomSolidColorValue = "solid";
const string kRandomGradientColorValue = "gradient";

const int8 kMaxCustomImageBackgrounds = 24;

struct BraveBackground {
  string name;
  string author;
  url.mojom.Url image_url;
  url.mojom.Url link;
  url.mojom.Url original_url;
};

struct CustomBackground {
  url.mojom.Url url;

  // |color| is a 
  //   * color value for css background property or 'gradient' when 
  //     |use_random_item| is false.
  //   * either kRandomSlidColorValue or kRandomGradientColorValue when 
  //     |use_random_item| is true
  string color;

  bool use_random_item = false;
};

union Background {
  CustomBackground custom;
  BraveBackground brave;
};

// Used by the WebUI page to bootstrap bidirectional communication.
interface PageHandlerFactory {
  // The WebUI page's |BrowserProxy| singleton calls this method when the page
  // is first initialized.
  CreatePageHandler(pending_remote<Page> page,
                    pending_receiver<PageHandler> handler);
};

// Browser-side handler for requests from WebUI page.
interface PageHandler {
  // Choose custom background from local file system.
  ChooseLocalCustomBackground();
  // When |selectedBackground| is empty, should use random background.
  UseCustomImageBackground(string selectedBackground);
  GetCustomImageBackgrounds() => (array<CustomBackground> backgrounds);
  RemoveCustomImageBackground(string selectedBackground);

  // When |seleteceBackground| is empty, should use random background.
  UseBraveBackground(string selected_background);
  GetBraveBackgrounds() => (array<BraveBackground> backgrounds);
  
  // |color| is a 
  //   * color value for css background property or 'gradient' when 
  //     |use_random_color| is false.
  //   * either kRandomSlidColorValue or kRandomGradientColorValue when 
  //     |use_random_color| is true
  UseColorBackground(string color, bool use_random_color);

  TryBraveSearchPromotion(string input, bool open_new_tab);
  DismissBraveSearchPromotion();
  IsSearchPromotionEnabled() => (bool enabled);
};

// WebUI-side handler for requests from the browser.
interface Page {
  OnBackgroundUpdated(Background? background);

  OnCustomImageBackgroundsUpdated(array<CustomBackground> backgrounds);

  OnSearchPromotionDisabled();
};
