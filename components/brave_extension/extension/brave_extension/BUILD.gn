# Copyright (c) 2019 The Brave Authors. All rights reserved.
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this file,
# You can obtain one at https://mozilla.org/MPL/2.0/.

import("//brave/components/common/typescript.gni")
import("//build/config/locales.gni")

transpile_web_ui("brave_extension") {
  # Need this to fire re-pack if changed, nevertheless extension is repacked on each 2nd build
  # what is the output bundle called and what is the entry point file
  entry_points = [
    [
      "brave_extension_background",
      rebase_path("background.ts"),
    ],
    [
      "content_element_picker",
      rebase_path("content_element_picker.ts"),
    ],
    [
      "webstore",
      rebase_path("webstore.ts"),
    ],
  ]

  # what is the directory / pack name
  resource_name = "brave_extension"

  # Must match the relative path from the static GRD to the manifest.json
  # plus any other relative path we want these files to live in the extension
  resource_path_prefix = "brave_extension/out"

  # WDP node_modules is not an ancestor of its generated code, which still
  # contains module imports.
  # TODO(petemill): Use already-packed output from WDP, or use webpack for all
  # of it, not just some of it.
  extra_modules =
      [ rebase_path("//brave/vendor/web-discovery-project/node_modules") ]

  public_asset_path = "/out/"

  deps =
      [ "//brave/components/brave_extension:web_discovery_project_resources" ]
}

if (is_mac) {
  group("brave_extension_framework_bundle_data") {
    deps = []
    foreach(locale, platform_pak_locales) {
      deps += [ ":brave_extension_framework_bundle_data_${locale}" ]
    }
  }

  foreach(locale, platform_pak_locales) {
    bundle_data("brave_extension_framework_bundle_data_${locale}") {
      locale = string_replace(locale, "-", "_")

      # The "nb" locale is a subset of "no". Chromium uses the former, while
      # Transifex uses the latter. To integrate with Transifex, our code renames
      # "nb" to "no". The following creates a bridge between the two paradigms:
      source_locale = string_replace(locale, "nb", "no")
      sources = [ "//brave/components/brave_extension/extension/brave_extension/_locales/$source_locale/messages.json" ]
      outputs = [ "{{bundle_resources_dir}}/brave_extension/_locales/$locale/{{source_file_part}}" ]
    }
  }
} else {
  group("locales") {
    deps = []
    foreach(locale, platform_pak_locales) {
      deps += [ ":locales_${locale}" ]
    }
  }
  foreach(locale, platform_pak_locales) {
    copy("locales_${locale}") {
      locale = string_replace(locale, "-", "_")

      # The "nb" locale is a subset of "no". Chromium uses the former, while
      # Transifex uses the latter. To integrate with Transifex, our code renames
      # "nb" to "no". The following creates a bridge between the two paradigms:
      source_locale = string_replace(locale, "nb", "no")
      sources = [ "//brave/components/brave_extension/extension/brave_extension/_locales/${source_locale}/messages.json" ]
      outputs = [ "$root_out_dir/resources/brave_extension/_locales/${locale}/{{source_file_part}}" ]
    }
  }
}
