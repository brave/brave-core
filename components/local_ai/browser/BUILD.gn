# Copyright (c) 2024 The Brave Authors. All rights reserved.
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this file,
# You can obtain one at https://mozilla.org/MPL/2.0/.

import("//brave/third_party/mediapipe/features.gni")
import("//build/buildflag_header.gni")

static_library("browser") {
  sources = [
    "local_models_updater.cc",
    "local_models_updater.h",
  ]

  public_deps = [
    ":text_embedder",
    "//base",
  ]

  deps = [
    "//brave/components/brave_component_updater/browser:public",
    "//brave/components/local_ai/common",
    "//components/component_updater",
    "//components/component_updater:component_updater_paths",
    "//components/update_client",
    "//crypto",
  ]
}

source_set("text_embedder") {
  sources = [
    "text_embedder.cc",
    "text_embedder.h",
    "yake_keyword_extractor.cc",
    "yake_keyword_extractor.h",
  ]

  deps = [ "//base" ]

  if (brave_build_with_mediapipe_lib) {
    deps += [ ":mediapipe_llm_wrapper" ]
  }

  public_deps = [
    "//brave/third_party/tflite_support",
    "//third_party/tflite",
    "//third_party/tflite_support",
    "//third_party/tflite_support:tflite_support_proto",
  ]
}

if (brave_build_with_mediapipe_lib) {
  static_library("mediapipe_llm_wrapper") {
    sources = [
      "mediapipe_llm_wrapper.cc",
      "mediapipe_llm_wrapper.h",
    ]

    public_deps = [
      "//base",
      "//brave/third_party/mediapipe:buildflags",
      "//brave/third_party/mediapipe:llm_inference_engine_cpu",
    ]

    deps = [ ":mediapipe_llm_test" ]
  }

  executable("mediapipe_llm_test") {
    sources = [
      "mediapipe_llm_test_main.cc",  # Use our patched version
    ]

    deps = [
      "//base",
      "//brave/third_party/mediapipe:llm_inference_engine_cpu",
      "//third_party/abseil-cpp:absl",
    ]

    include_dirs = [
      "//third_party/mediapipe/src",
    ]

    if (is_mac) {
      frameworks = [
        "Foundation.framework",
      ]
    }

    configs -= [ "//build/config/compiler:chromium_code" ]
    configs += [ "//build/config/compiler:no_chromium_code" ]
  }
}

if (!is_ios) {
  source_set("unit_tests") {
    testonly = true
    sources = [
      "local_models_updater_unittest.cc",
      "text_embedder_unittest.cc",
      "yake_keyword_extractor_unittest.cc",
    ]

    deps = [
      ":browser",
      ":text_embedder",
      "//base",
      "//base/test:test_support",
      "//brave/components/brave_component_updater/browser:test_support",
      "//brave/components/constants",
      "//components/component_updater:test_support",
      "//testing/gmock",
      "//testing/gtest",
    ]

    if (brave_build_with_mediapipe_lib) {
      sources += [ "mediapipe_llm_wrapper_unittest.cc" ]
      deps += [ ":mediapipe_llm_wrapper" ]
    }
  }
}
