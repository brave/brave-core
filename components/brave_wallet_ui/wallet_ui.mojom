// Copyright (c) 2021 The Brave Authors. All rights reserved.
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this file,
// you can obtain one at http://mozilla.org/MPL/2.0/.

module wallet_ui.mojom;

// Used by the WebUI page to bootstrap bidirectional communication.
interface PanelHandlerFactory {
  // The WebUI calls this method when the page is first initialized.
  CreatePanelHandler(pending_remote<Page> page,
                     pending_receiver<PanelHandler> panel_handler,
                     pending_receiver<WalletHandler> wallet_handler);
};

interface PageHandlerFactory {
  // The WebUI calls this method when the page is first initialized.
  CreatePageHandler(pending_remote<Page> page,
                    pending_receiver<PageHandler> page_handler,
                    pending_receiver<WalletHandler> wallet_handler);
};

// Browser-side handler for requests from WebUI page.
interface PanelHandler {
  // Notify the backend that the UI is ready to be shown.
  ShowUI();

  // Notify the backend that the dialog should be closed.
  CloseUI();
};

// Browser-side handler for requests from WebUI page.
interface PageHandler {
  // Create a wallet via the Keyring controller
  CreateWallet(string password) => (string mnemonic);
  RestoreWallet(string mnemonic, string password) => (bool isValidMnemonic);
  GetRecoveryWords() => (string mnemonic);
};

struct AppItem {
  string description;
  string icon;
  string name;
  string url;
};

// Browser-side handler for common panel / page things
interface WalletHandler {
  GetWalletInfo() => (bool isWalletCreated, bool isWalletLocked,
                      array<AppItem> favoriteApps,
                      bool isWalletBackedUp, array<string> accounts);
  LockWallet();
  UnlockWallet(string password) => (bool isWalletUnlocked);
  AddFavoriteApp(AppItem appItem);
  RemoveFavoriteApp(AppItem appItem);
  NotifyWalletBackupComplete();
};

// WebUI-side handler for requests from the browser.
interface Page {
};
