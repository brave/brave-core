import("//brave/components/brave_rewards/browser/buildflags/buildflags.gni")
import("//extensions/buildflags/buildflags.gni")

source_set("browser") {
  public_deps = [
    "buildflags",
  ]

  sources = [
    "switches.cc",
    "switches.h",
    "auto_contribution_props.cc",
    "auto_contribution_props.h",
    "balance_report.cc",
    "balance_report.h",
    "rewards_notification_service.cc",
    "rewards_notification_service.h",
    "rewards_notification_service_impl.cc",
    "rewards_notification_service_impl.h",
    "rewards_notification_service_observer.h",
    "content_site.cc",
    "content_site.h",
    "rewards_service.cc",
    "rewards_service.h",
    "rewards_service_factory.cc",
    "rewards_service_factory.h",
    "rewards_service_observer.h",
    "wallet_properties.cc",
    "wallet_properties.h",
    "grant.cc",
    "grant.h",
    "publisher_banner.cc",
    "publisher_banner.h",
    "contribution_info.cc",
    "contribution_info.h",
    "recurring_donation.cc",
    "recurring_donation.h",
  ]

  if (enable_extensions) {
    sources += [
      "extension_rewards_notification_service_observer.cc",
      "extension_rewards_notification_service_observer.h",
      "extension_rewards_service_observer.cc",
      "extension_rewards_service_observer.h",
    ]
  }

  deps = [
    "//base",
    "//brave/components/brave_rewards/common",
    "//components/keyed_service/content",
    "//components/keyed_service/core",
    "//components/sessions",
    # for profile.h
    "//components/domain_reliability",
    "//content/public/browser",
    "//content/public/common",
    "//services/network/public/mojom",
    "//third_party/leveldatabase",
  ]

  if (is_android) {
    sources += [
      "//extensions/common/one_shot_event.h",
      "//extensions/common/one_shot_event.cc",
    ]
  } else {
    deps += [
      # for one shot event
      "//extensions/common",
    ]
  }

  if (brave_rewards_enabled) {
    sources += [
      "net/network_delegate_helper.cc",
      "net/network_delegate_helper.h",
      "rewards_service_impl.cc",
      "rewards_service_impl.h",
      "publisher_info_backend.cc",
      "publisher_info_backend.h",
      "publisher_info_database.cc",
      "publisher_info_database.h",
      "rewards_fetcher_service_observer.cc",
      "rewards_fetcher_service_observer.h",
    ]

    if (!is_android) {
      sources += [
        "rewards_helper.cc",
        "rewards_helper.h",
      ]
    }

    deps += [
      "//brave/vendor/bat-native-ads",
      "//brave/vendor/bat-native-ledger",
      "//brave/components/services/bat_ledger/public/cpp",
      "//mojo/public/cpp/bindings",
      "//net",
      "//services/service_manager/public/cpp",
      "//url",
    ]
  }
}

source_set("testutil") {
  testonly = true

  deps = [
    "//brave/vendor/bat-native-ledger",
    ":browser",
    "//base",
    "//content/public/browser",
    "//chrome/test:test_support",
    "//testing/gtest",
  ]

  sources = [
    "test_util.cc",
    "test_util.h",
  ]
}
