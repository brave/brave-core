// Copyright (c) 2024 The Brave Authors. All rights reserved.
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this file,
// You can obtain one at https://mozilla.org/MPL/2.0/.

module web_discovery.mojom;

struct SelectAttributeRequest {
  // An optional selector for an element within the current selected element.
  // The attribute will be retrieved from the embedded element.
  string? sub_selector;
  // Arbitrary ID used for storing the scraped result.
  string key;
  // Name of the attribute to scrape.
  string attribute;
};

struct SelectRequest {
  // The DOM selector for the element to scrape.
  string root_selector;
  // Scrape requests for the selected element.
  array<SelectAttributeRequest> attribute_requests;
  // If true, select all matching elements; if false, select only the first match.
  bool select_all = false;
};

struct AttributeResult {
  // The DOM selector for the scraped element.
  string root_selector;
  // A map of arbitrary IDs to scraped results. Value will be set to
  // nullopt if the attribute was not available.
  map<string, string?> attribute_values;
};

interface DocumentExtractor {
  // Extracts DOM attributes from the current page in renderer.
  QueryElementAttributes(array<SelectRequest> requests) => (array<AttributeResult> results);
};
