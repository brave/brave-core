# Copyright (c) 2023 The Brave Authors. All rights reserved.
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this file,
# You can obtain one at https://mozilla.org/MPL/2.0/.

import("//brave/build/config.gni")
import("//build/toolchain/win/midl.gni")
import("//build/util/process_version.gni")
import("//chrome/process_version_rc_template.gni")

assert(is_win)

copy("brave_vpn_wireguard_binaries") {
  sources = [
    "//brave/third_party/brave-vpn-wireguard-nt-dlls/${target_cpu}/wireguard.dll",
    "//brave/third_party/brave-vpn-wireguard-tunnel-dlls/${target_cpu}/tunnel.dll",
  ]
  outputs = [ "$root_out_dir/{{source_file_part}}" ]
}

midl("brave_wireguard_manager_idl") {
  sources = [ "brave_wireguard_manager_idl.idl" ]

  writes_tlb = true
}

executable("brave_vpn_wireguard_service") {
  sources = [
    "brave_vpn_wireguard_service.rc",
    "brave_wireguard_manager.cc",
    "brave_wireguard_manager.h",
    "brave_wireguard_service_crash_reporter_client.cc",
    "brave_wireguard_service_crash_reporter_client.h",
    "install_utils.cc",
    "install_utils.h",
    "main.cc",
    "process_utils.cc",
    "process_utils.h",
    "service_main.cc",
    "service_main.h",
    "wireguard_tunnel_service.cc",
    "wireguard_tunnel_service.h",
  ]

  deps = [
    ":brave_vpn_wireguard_binaries",
    ":version_resources",
    "common",
    "interactive",
    "//base",
    "//base:base_static",
    "//brave/components/brave_vpn/browser/connection/common/win",
    "//build/win:default_exe_manifest",
    "//chrome/install_static:install_static_util",
    "//chrome/installer/util:with_no_strings",
    "//components/crash/core/app",
    "//components/crash/core/app:crash_export_thunks",
    "//components/crash/core/app:run_as_crashpad_handler",
    "//components/version_info:channel",
  ]

  public_configs = [ "//build/config/win:windowed" ]
  public_deps = [
    ":brave_wireguard_manager_idl",
    "//build/win:default_exe_manifest",
  ]

  libs = [
    "userenv.lib",  # For GetUserProfileDirectoryW()
    "runtimeobject.lib",
  ]
}

process_version_rc_template("version_resources") {
  sources = [ "brave_vpn_wireguard_service.ver" ]

  output = "$target_gen_dir/brave_vpn_wireguard_service.rc"
}
