import * as React from 'react';
import { Theme } from '../types';

interface WindSvgsProps {
  beaufortScale: number;
  theme: Theme.light | Theme.dark;
}

const colors = {
  [Theme.light]: {
    0: '#b8e1e7',
    1: '#b8e1e7',
    2: '#b8e1e7',
    3: '#9ed6de',
    4: '#9ed6de',
    5: '#7ec2cc',
    6: '#7ec2cc',
    7: '#4cb0bd',
    8: '#4cb0bd',
    9: '#0591a4',
    10: '#0591a4',
    11: '#057888',
    12: '#057888',
  },
  [Theme.dark]: {
    0: '#80a7ac',
    1: '#80a7ac',
    2: '#80a7ac',
    3: '#6199a1',
    4: '#6199a1',
    5: '#19808e',
    6: '#19808e',
    7: '#44949f',
    8: '#44949f',
    9: '#419da9',
    10: '#419da9',
    11: '#16a6b9',
    12: '#16a6b9',
  },
};

const WindSvgs: React.FC<WindSvgsProps> = ({ beaufortScale, theme }) => {
  const color = colors[theme][beaufortScale as keyof typeof colors[typeof theme]] || colors[theme][12];

  if (beaufortScale <= 2) {
    return (
      <svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 25 25">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M16.726 10.031c-.34 0-.65.135-.881.357a.7.7 0 01-.971-1.009 2.664 2.664 0 011.852-.748 2.69 2.69 0 012.681 2.7 2.69 2.69 0 01-2.68 2.7H8.023a.7.7 0 110-1.4h8.702a1.29 1.29 0 001.281-1.3c0-.724-.58-1.3-1.28-1.3z"
          fill={color}
        />
      </svg>
    );
  } else if (beaufortScale === 3 || beaufortScale === 4) {
    return (
      <svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 25">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M14.958 9.506c.231-.222.54-.356.882-.356.7 0 1.28.575 1.28 1.3 0 .724-.58 1.3-1.28 1.3H7.137a.7.7 0 1 0 0 1.4h8.703a2.69 2.69 0 0 0 2.68-2.7 2.69 2.69 0 0 0-2.68-2.7c-.72 0-1.373.285-1.853.748a.7.7 0 1 0 .971 1.008ZM9 14.862a.7.7 0 1 0 0 1.4h6a.7.7 0 1 0 0-1.4H9Z"
          fill={color}
        />
      </svg>
    );
  } else if (beaufortScale === 5 || beaufortScale === 6) {
    return (
      <svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 25">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M15.842 10.15c-.34 0-.65.134-.881.356a.7.7 0 0 1-.971-1.008 2.664 2.664 0 0 1 1.852-.748 2.69 2.69 0 0 1 2.68 2.7 2.69 2.69 0 0 1-2.68 2.7H7.14a.7.7 0 1 1 0-1.4h8.702a1.29 1.29 0 0 0 1.28-1.3c0-.725-.579-1.3-1.28-1.3Zm-6.909 1.3a.7.7 0 0 0 .7.7h2a.7.7 0 1 0 0-1.4h-2a.7.7 0 0 0-.7.7ZM6.18 14.974a.7.7 0 1 0 0 1.4h8.6a.7.7 0 1 0 0-1.4h-8.6Z"
          fill={color}
        />
      </svg>
    );
  } else if (beaufortScale === 7 || beaufortScale === 8) {
    return (
      <svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 25">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M16.092 7.75a1.32 1.32 0 0 1 .948-.412c.727 0 1.4.648 1.4 1.555 0 .906-.673 1.554-1.4 1.554H7.815a.7.7 0 1 0 0 1.4h9.225c1.592 0 2.8-1.37 2.8-2.954s-1.208-2.955-2.8-2.955a2.72 2.72 0 0 0-1.95.834.7.7 0 0 0 1.002.978Zm-6.828 2.303a.7.7 0 1 1 0-1.4h2a.7.7 0 1 1 0 1.4h-2Zm-5.108 3.35a.7.7 0 0 1 .7-.7H18.4a.7.7 0 1 1 0 1.4H4.855a.7.7 0 0 1-.7-.7Zm10.91 4.187a.688.688 0 0 0 .48.195c.38 0 .7-.313.7-.713 0-.4-.32-.713-.7-.713h-2.804a.7.7 0 1 1 0-1.4h2.805c1.166 0 2.1.953 2.1 2.113 0 1.16-.934 2.113-2.1 2.113a2.088 2.088 0 0 1-1.451-.586.7.7 0 1 1 .97-1.009Z"
          fill={color}
        />
      </svg>
    );
  } else if (beaufortScale === 9 || beaufortScale === 10) {
    return (
      <svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 25">
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M15.718 7.304a2.82 2.82 0 0 1 1.964-.794c1.568 0 2.85 1.285 2.85 2.884 0 1.6-1.282 2.885-2.85 2.885H4.838a.7.7 0 0 0 0 1.4h12.844c2.354 0 4.25-1.925 4.25-4.285 0-2.36-1.896-4.284-4.25-4.284a4.22 4.22 0 0 0-2.935 1.186.7.7 0 1 0 .971 1.008Zm-4.763-.139c-.34 0-.65.135-.881.357-.197.19-.338.587-.304.858a.7.7 0 0 1-1.39.171c-.087-.708.209-1.542.723-2.037a2.664 2.664 0 0 1 1.852-.749 2.69 2.69 0 0 1 2.681 2.7 2.69 2.69 0 0 1-2.68 2.7H2.77a.7.7 0 1 1 0-1.4h8.185a1.29 1.29 0 0 0 1.281-1.3c0-.724-.58-1.3-1.28-1.3Zm2.968 11.448c-.34 0-.65-.134-.88-.357-.198-.189-.338-.586-.305-.857a.7.7 0 1 0-1.39-.172c-.087.709.209 1.543.723 2.038.48.462 1.133.748 1.852.748a2.69 2.69 0 0 0 2.681-2.7 2.69 2.69 0 0 0-2.68-2.7H8.7a.7.7 0 1 0 0 1.4h5.223a1.29 1.29 0 0 1 1.281 1.3c0 .725-.58 1.3-1.28 1.3Zm2.64-9.906a.7.7 0 0 1 .144-.98c.868-.645 2.125-.532 2.79.362.664.894.41 2.13-.459 2.775a.7.7 0 0 1-.835-1.123c.305-.227.332-.599.17-.817-.162-.217-.526-.3-.831-.073a.7.7 0 0 1-.98-.144ZM3.838 14.593a.7.7 0 1 0 0 1.4h2.748a.7.7 0 1 0 0-1.4H3.838Z"
          fill={color}
        />
      </svg>
    );
  } else if (beaufortScale >= 11) {
    return (
      <svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 25">
        <path
          d="M5.703 11.644h8.185a1.99 1.99 0 0 0 1.98-2c0-1.105-.886-2-1.98-2-.53 0-1.011.21-1.367.552-.355.342-.574.958-.513 1.448M11.535 16.384h5.224a1.99 1.99 0 0 1 1.981 2c0 1.104-.887 2-1.98 2-.53 0-1.012-.21-1.368-.553-.355-.342-.574-.958-.513-1.447"
          stroke={color}
          strokeWidth="1.4"
          strokeLinecap="round"
        />
        <path
          d="M18.164 7.978a3.52 3.52 0 0 1 2.45-.99c1.96 0 3.55 1.605 3.55 3.584 0 1.98-1.59 3.585-3.55 3.585H7.77"
          stroke={color}
          strokeWidth="1.4"
          strokeLinecap="round"
        />
        <path
          d="M21.55 11.48c.587-.435.728-1.24.315-1.795-.413-.556-1.224-.654-1.81-.218M20.754 20.611c1.026 0 1.858-.986 1.858-2.203 0-1.217-.832-2.203-1.858-2.203M9.42 16.363H6.672M8.307 8.632H5.56"
          stroke={color}
          strokeWidth="1.4"
          strokeLinecap="round"
        />
        <path
          d="M20.709 16.205c3.142 0 5.733-2.567 5.733-5.733a5.733 5.733 0 0 0-5.733-5.732c-1.796 0-3.045.35-4.135 1.58"
          stroke={color}
          strokeWidth="1.4"
          strokeLinecap="round"
        />
      </svg>
    );
  }

  return null;
};

export default WindSvgs;
