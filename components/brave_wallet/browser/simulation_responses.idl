/* Copyright (c) 2023 The Brave Authors. All rights reserved.
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/. */

// Dummy comments to make the linter happy.
namespace simulation_responses {
  dictionary SolanaPrice {
    DOMString source;

    // FIXME: The fields below should be in camelCase. Needs an upstream fix.
    DOMString last_updated_at;
    DOMString dollar_value_per_token;
  };

  dictionary Price {
    DOMString source;
    DOMString updatedAt;
    DOMString dollarValuePerToken;
  };

  dictionary Warning {
    DOMString severity;
    DOMString kind;
    DOMString message;
  };

  dictionary EVMError {
    DOMString kind;
    DOMString humanReadableError;
  };

  dictionary EVMContract {
    DOMString address;
    DOMString kind;
  };

  dictionary EVMAmount {
    DOMString after;
    DOMString before;
  };

  dictionary EVMAsset {
    DOMString address;
    DOMString symbol;
    DOMString name;
    DOMString decimals;
    boolean verified;
    DOMString[]? lists;

    // nullable field of type DOMString
    any imageUrl;

    // nullable field of type Price
    any price;
  };

  dictionary NFTMetadata {
    DOMString rawImageUrl;
  };

  dictionary ERC20TransferData {
    EVMContract contract;
    EVMAmount amount;
    EVMAsset asset;
  };

  dictionary ERC20ApprovalData {
    EVMContract contract;
    EVMContract owner;
    EVMContract spender;
    EVMAmount amount;
    EVMAsset asset;
  };

  dictionary NativeAssetTransferData {
    EVMAmount amount;
    EVMAsset asset;
    EVMContract contract;
  };

  dictionary ERC721TransferData {
    EVMAmount amount;
    EVMContract contract;
    NFTMetadata metadata;
    DOMString name;
    DOMString symbol;

    // nullable field of type DOMString
    any tokenId;

    // nullable field of type Price
    any assetPrice;
  };

  dictionary ERC721ApprovalData {
    EVMAmount amount;
    EVMContract contract;
    NFTMetadata metadata;
    DOMString name;
    EVMContract owner;
    EVMContract spender;
    DOMString symbol;

    // nullable field of type DOMString
    any tokenId;

    // nullable field of type Price
    any assetPrice;
  };

  dictionary ERC721ApprovalForAllData {
    EVMAmount amount;
    EVMContract contract;
    DOMString name;
    EVMContract owner;
    EVMContract spender;
    DOMString symbol;

    // nullable field of type Price
    any assetPrice;
  };

  dictionary ERC1155TransferData {
    EVMAmount amount;
    EVMContract contract;
    NFTMetadata metadata;
    DOMString name;

    // nullable field of type DOMString
    any tokenId;

    // nullable field of type Price
    any assetPrice;
  };

  dictionary ERC1155ApprovalForAllData {
    EVMAmount amount;
    EVMContract contract;
    EVMContract owner;
    EVMContract spender;
    // nullable field of type Price
    any assetPrice;
  };

  dictionary EVMStateChangeRawInfo {
    DOMString kind;

    // data is a non-nullable union of the following types:
    //   - ERC20TransferData
    //   - ERC20ApprovalData
    //   - NativeAssetTransferData
    //   - ERC721TransferData
    //   - ERC721ApprovalData
    //   - ERC721ApprovalForAllData
    //   - ERC1155TransferData
    //   - ERC1155ApprovalForAllData
    any data;
  };

  dictionary EVMStateChange {
    DOMString humanReadableDiff;
    EVMStateChangeRawInfo rawInfo;
  };

  dictionary EVMSimulationResults {
    EVMStateChange[] expectedStateChanges;

    // nullable field of type EVMError
    any error;
  };

  dictionary EVMSimulationResponse {
    DOMString action;
    Warning[] warnings;
    EVMSimulationResults simulationResults;
  };

  dictionary SolanaDiff {
    DOMString sign;
    DOMString digits;
  };

  dictionary SolanaStakeAuthorities {
    DOMString staker;
    DOMString withdrawer;
  };

  dictionary SolanaError {
    DOMString kind;
    DOMString humanReadableError;
  };

  dictionary SOLTransferData {
    DOMString symbol;
    DOMString name;
    DOMString decimals;
    SolanaDiff diff;
  };

  dictionary SPLTransferData {
    DOMString symbol;
    DOMString name;
    DOMString mint;
    DOMString decimals;
    SolanaDiff diff;
    DOMString supply;
    DOMString metaplexTokenStandard;

    // nullable field of type SolanaPrice
    any assetPrice;
  };

  dictionary SPLApprovalData {
    DOMString delegate;
    DOMString mint;
    DOMString symbol;
    DOMString name;
    DOMString decimals;
    SolanaDiff diff;
    DOMString supply;
    DOMString metaplexTokenStandard;

    // nullable field of type SolanaPrice
    any assetPrice;
  };

  dictionary SOLStakeAuthorityChangeData {
    DOMString stakeAccount;
    SolanaStakeAuthorities currAuthorities;
    SolanaStakeAuthorities futureAuthorities;
    DOMString symbol;
    DOMString name;
    DOMString decimals;
    DOMString solStaked;
  };

  dictionary SolanaStateChangeRawInfo {
    DOMString kind;

    // data is a non-nullable union of the following types:
    //   - SOLTransferData
    //   - SPLTransferData
    //   - SPLApprovalData
    //   - SOLStakeAuthorityChangeData
    any data;
  };

  dictionary SolanaStateChange {
    DOMString humanReadableDiff;
    DOMString suggestedColor;
    SolanaStateChangeRawInfo rawInfo;
  };

  dictionary SolanaSimulationResults {
    SolanaStateChange[] expectedStateChanges;

    // nullable field of type SolanaError
    any error;
  };

  dictionary SolanaSimulationResponse {
    DOMString action;
    Warning[] warnings;
    SolanaSimulationResults simulationResults;
  };

  dictionary HTTPError {
    DOMString error;
  };
};
