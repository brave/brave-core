# Copyright (c) 2024 The Brave Authors. All rights reserved.
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this file,
# You can obtain one at https://mozilla.org/MPL/2.0/.

import("//brave/components/brave_wallet/common/config.gni")
import("//build/rust/rust_static_library.gni")

assert(enable_orchard)

group("rust") {
  # This should only be used by internal wallet code
  visibility = [ "//brave/components/brave_wallet/browser/internal:*" ]

  public_deps = [ ":orchard_headers" ]

  deps = [ ":orchard_impl" ]
}

group("test_support") {
  visibility =
      [ "//brave/components/brave_wallet/browser/internal:test_support" ]

  public_deps = [ ":test_support_headers" ]
  deps = [ ":test_support_impl" ]
}

source_set("test_support_headers") {
  visibility = [
    ":*",
    "//brave/components/brave_wallet/browser/internal:test_support",
  ]
  sources = [
    "orchard_test_utils.h",
    "orchard_testing_shard_tree.h",
  ]

  public_deps = [ ":orchard_headers" ]
}

source_set("test_support_impl") {
  visibility = [ ":test_support" ]
  sources = [
    "orchard_test_utils.cc",
    "orchard_testing_shard_tree.cc",
  ]

  deps = [
    ":orchard_impl",
    ":rust_lib",
    ":test_support_headers",
  ]
}

source_set("orchard_headers") {
  visibility = [ ":*" ]

  sources = [
    "orchard_authorized_bundle.h",
    "orchard_block_decoder.h",
    "orchard_decoded_blocks_bundle.h",
    "orchard_extended_spending_key.h",
    "orchard_shard_tree.h",
    "orchard_unauthorized_bundle.h",
  ]

  public_deps = [
    "//base",
    "//brave/components/brave_wallet/browser/internal/orchard_storage:headers",
    "//brave/components/brave_wallet/common",
    "//brave/components/services/brave_wallet/public/mojom",
  ]
}

source_set("orchard_impl") {
  visibility = [
    ":rust",
    ":test_support_impl",
  ]

  sources = [
    "cxx_orchard_shard_tree_delegate.cc",
    "orchard_authorized_bundle_impl.cc",
    "orchard_authorized_bundle_impl.h",
    "orchard_block_decoder.cc",
    "orchard_decoded_blocks_bundle_impl.cc",
    "orchard_decoded_blocks_bundle_impl.h",
    "orchard_extended_spending_key_impl.cc",
    "orchard_extended_spending_key_impl.h",
    "orchard_shard_tree.cc",
    "orchard_unauthorized_bundle_impl.cc",
    "orchard_unauthorized_bundle_impl.h",
  ]

  deps = [
    ":orchard_headers",
    ":rust_lib",
    "//base",
    "//brave/components/brave_wallet/common",
    "//build/rust:cxx_cppdeps",
  ]
}

source_set("cxx_interfaces") {
  visibility = [ ":*" ]
  sources = [ "cxx_orchard_shard_tree_delegate.h" ]

  public_deps = [
    "//base",
    "//brave/components/brave_wallet/common",
    "//build/rust:cxx_cppdeps",
  ]
}

rust_static_library("rust_lib") {
  visibility = [
    ":orchard_impl",
    ":test_support_impl",
  ]

  crate_name = "zcash"
  crate_root = "lib.rs"
  allow_unsafe = true
  sources = [ "lib.rs" ]
  cxx_bindings = [ "lib.rs" ]

  deps = [
    "librustzcash:zcash_client_backend",
    "librustzcash:zcash_primitives",
    "librustzcash:zcash_protocol",
    "//brave/components/brave_wallet/rust:rust_lib",
    "//brave/third_party/rust/incrementalmerkletree/v0_5:lib",
    "//brave/third_party/rust/memuse/v0_2:lib",
    "//brave/third_party/rust/nonempty/v0_7:lib",
    "//brave/third_party/rust/orchard/v0_8:lib",
    "//brave/third_party/rust/pasta_curves/v0_5:lib",
    "//brave/third_party/rust/paste/v1:lib",
    "//brave/third_party/rust/rand/v0_8:lib",
    "//brave/third_party/rust/shardtree/v0_3:lib",
    "//brave/third_party/rust/zcash_note_encryption/v0_4:lib",
    "//third_party/rust/byteorder/v1:lib",
  ]

  public_deps = [ ":cxx_interfaces" ]
}
