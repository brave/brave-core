/* Copyright (c) 2022 The Brave Authors. All rights reserved.
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/. */

namespace swap_responses {
  dictionary ZeroExSource {
    DOMString name;
    DOMString proportion;
  };

  dictionary ZeroExFee {
    DOMString feeType;
    DOMString feeToken;
    DOMString feeAmount;
    DOMString billingType;
  };

  dictionary ZeroExFees {
    // nullable field that maps to ZeroExFee
    any zeroExFee;
  };

  dictionary SwapResponse0x {
    DOMString price;
    DOMString? guaranteedPrice;
    DOMString? to;
    DOMString? data;
    DOMString value;
    DOMString gas;
    DOMString estimatedGas;
    DOMString gasPrice;
    DOMString protocolFee;
    DOMString minimumProtocolFee;
    DOMString buyTokenAddress;
    DOMString buyTokenAddress;
    DOMString sellTokenAddress;
    DOMString buyAmount;
    DOMString sellAmount;
    DOMString allowanceTarget;
    DOMString sellTokenToEthRate;
    DOMString buyTokenToEthRate;
    DOMString estimatedPriceImpact;
    ZeroExSource[] sources;
    ZeroExFees fees;
  };

  dictionary SwapErrorResponseItem0x {
    DOMString field;
    long code;
    DOMString reason;
  };

  dictionary SwapErrorResponse0x {
    long code;
    DOMString reason;
    SwapErrorResponseItem0x[]? validationErrors;
  };

  dictionary JupiterMarketInfoFee {
    DOMString amount;
    DOMString mint;
    DOMString pct;
  };

  dictionary JupiterMarketInfo {
    DOMString _label;
    DOMString id;
    DOMString inputMint;
    DOMString outputMint;
    boolean notEnoughLiquidity;
    DOMString inAmount;
    DOMString outAmount;
    any priceImpactPct; // nullable
    JupiterMarketInfoFee lpFee;
    JupiterMarketInfoFee platformFee;
  };

  dictionary JupiterQuoteData {
    DOMString inAmount;
    DOMString outAmount;
    DOMString amount;
    DOMString slippageBps;
    DOMString otherAmountThreshold;
    DOMString swapMode;
    any priceImpactPct; // nullable
    JupiterMarketInfo[] marketInfos;
  };

  dictionary JupiterQuoteResponse {
    JupiterQuoteData[] data;
    DOMString timeTaken;
  };

  dictionary JupiterSwapTransactions {
    DOMString swapTransaction;
  };

  dictionary JupiterErrorResponse {
    DOMString statusCode;
    DOMString error;
    DOMString message;
  };
};
