/* Copyright (c) 2021 The Brave Authors. All rights reserved.
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at https://mozilla.org/MPL/2.0/. */

module cosmetic_filters.mojom;

import "mojo/public/mojom/base/values.mojom";

interface CosmeticFiltersResources {
  // Receives an input string which is JSON object.
  HiddenClassIdSelectors(string input, array<string> exceptions) => (
      mojo_base.mojom.DictionaryValue result);

  [Sync]
  UrlCosmeticResources(string url, bool aggressive_blocking) => (
      mojo_base.mojom.Value result);
};

interface CosmeticFiltersHandler {
  // Adds a user cosmetic rule for the current site.
  // (currently from the content picker feature).
  AddSiteCosmeticFilter(string filter);

  // Opens the custom filter section in Shields settings .
  ManageCustomFilters();

  GetElementPickerThemeInfo() => (
      bool is_dark_mode_enabled, int32 background_color);
};

// An interface to render frame agent `CosmeticFiltersJSHandler` to control
// cosmetic filter features.
interface CosmeticFiltersAgent {
  // Inject the content picker script to allow a user to select unwanted
  // DOM elements.
  LaunchContentPicker();
};
