import("//brave/browser/tor/buildflags/buildflags.gni")
import("//brave/build/config.gni")
import("//brave/components/brave_wayback_machine/buildflags/buildflags.gni")
import("//chrome/browser/resources/optimize_webui.gni")
import("//chrome/common/features.gni")
import("//tools/grit/grit_rule.gni")

grit("resources") {
  source = "settings_resources.grd"

  grit_flags = [
    "-E",
    "root_gen_dir=" + rebase_path(root_gen_dir, root_build_dir),
  ]

  deps = [ ":polymer3_elements" ]
  defines = [
    "is_release_channel=$is_release_channel",
    "enable_tor=$enable_tor",
    "enable_brave_wayback_machine=$enable_brave_wayback_machine",
  ]

  enable_input_discovery_for_gn_analyze = optimize_webui

  outputs = [
    "grit/brave_settings_resources.h",
    "grit/brave_settings_resources_map.cc",
    "grit/brave_settings_resources_map.h",
    "brave_settings_resources.pak",
  ]

  output_dir = "$root_gen_dir/brave/browser/resources/settings"
  resource_ids = "//brave/browser/resources/resource_ids"
}

if (optimize_webui) {
  group("unpak") {
    deps = [
      ":unpak_brave_settings_resources",
    ]
  }

  action("unpak_brave_settings_resources") {
    script = "//chrome/browser/resources/unpack_pak.py"

    pak_file = "brave_settings_resources.pak"
    out_folder = "$root_gen_dir/chrome/browser/resources/settings/settings_resources.unpak"

    inputs = [
      "$target_gen_dir/brave_settings_resources.pak",
    ]

    outputs = [
      "${out_folder}/brave_unpack.stamp",
    ]

    deps = [
      ":resources",
    ]

    args = [
      "--out_folder",
      rebase_path(out_folder, root_build_dir),
      "--pak_file",
      rebase_path("$target_gen_dir/${pak_file}", root_build_dir),
    ]
  }
}

group("polymer3_elements") {
  public_deps = [
    # Sub-folder targets
    "brave_appearance_page:polymer3_elements",
    "brave_privacy_page:polymer3_elements",
    "default_brave_shields_page:polymer3_elements",
    "social_blocking_page:polymer3_elements",
    # TODO(petemill): Add Local targets (e.g. brave_settings_overrides)
    # when settings is rendered fully with ES Modules / polymer3, e.g.:
    # ":modulize",
  ]
}
