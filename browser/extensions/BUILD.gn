import("//brave/browser/ethereum_remote_client/buildflags/buildflags.gni")
import("//brave/components/binance/browser/buildflags/buildflags.gni")
import("//brave/components/brave_rewards/browser/buildflags/buildflags.gni")
import("//brave/components/brave_together/buildflags/buildflags.gni")
import("//brave/components/brave_wallet/browser/config.gni")
import("//brave/components/brave_wayback_machine/buildflags/buildflags.gni")
import("//brave/components/brave_webtorrent/browser/buildflags/buildflags.gni")
import("//brave/components/crypto_dot_com/browser/buildflags/buildflags.gni")
import("//brave/components/decentralized_dns/buildflags/buildflags.gni")
import("//brave/components/ftx/browser/buildflags/buildflags.gni")
import("//brave/components/gemini/browser/buildflags/buildflags.gni")
import("//brave/components/ipfs/buildflags/buildflags.gni")
import("//brave/components/sidebar/buildflags/buildflags.gni")
import("//brave/components/speedreader/buildflags.gni")
import("//brave/components/tor/buildflags/buildflags.gni")
import("//build/config/features.gni")
import("//components/gcm_driver/config.gni")

source_set("extensions") {
  # Remove when https://github.com/brave/brave-browser/issues/10661 is resolved
  check_includes = false
  sources = [
    "api/brave_action_api.cc",
    "api/brave_action_api.h",
    "api/brave_extensions_api_client.cc",
    "api/brave_extensions_api_client.h",
    "api/brave_shields_api.cc",
    "api/brave_shields_api.h",
    "api/brave_theme_api.cc",
    "api/brave_theme_api.h",
    "api/brave_today_api.cc",
    "api/brave_today_api.h",
    "api/greaselion_api.cc",
    "api/greaselion_api.h",
    "api/settings_private/brave_prefs_util.cc",
    "api/settings_private/brave_prefs_util.h",
    "brave_component_loader.cc",
    "brave_component_loader.h",
    "brave_extension_management.cc",
    "brave_extension_management.h",
    "brave_extension_provider.cc",
    "brave_extension_provider.h",
    "brave_extension_service.cc",
    "brave_extension_service.h",
    "brave_extensions_browser_api_provider.cc",
    "brave_extensions_browser_api_provider.h",
    "brave_extensions_browser_client_impl.cc",
    "brave_extensions_browser_client_impl.h",
    "brave_theme_event_router.cc",
    "brave_theme_event_router.h",
    "updater/brave_update_client_config.cc",
    "updater/brave_update_client_config.h",
  ]

  deps = [
    ":resources",
    "//base",
    "//brave/app:brave_generated_resources_grit",
    "//brave/browser/component_updater",
    "//brave/browser/profiles",
    "//brave/browser/webcompat_reporter",
    "//brave/common",
    "//brave/common:pref_names",
    "//brave/common/extensions/api",
    "//brave/components/brave_component_updater/browser",
    "//brave/components/brave_rewards/browser/buildflags",
    "//brave/components/brave_shields/browser",
    "//brave/components/brave_shields/common",
    "//brave/components/brave_today/browser",
    "//brave/components/brave_wayback_machine:buildflags",
    "//brave/components/decentralized_dns/buildflags",
    "//brave/components/ipfs/buildflags",
    "//brave/components/sidebar/buildflags",
    "//brave/components/speedreader",
    "//brave/components/tor/buildflags",
    "//chrome/browser/extensions",
    "//chrome/common",
    "//components/gcm_driver:gcm_buildflags",
    "//components/gcm_driver:gcm_driver",
    "//components/omnibox/browser:browser",
    "//components/prefs",
    "//components/services/patch/content",
    "//components/services/unzip/content",
    "//components/update_client:patch_impl",
    "//components/update_client:unzip_impl",
    "//content/public/browser",
    "//extensions/browser",
    "//extensions/common",
    "//third_party/re2",
    "//ui/base",
    "//url",
  ]

  if (enable_sidebar) {
    deps += [ "//brave/components/sidebar" ]
  }

  # It seems like this brave_wallet_api should be renamed to ethereum_remote_client_api.
  # However this is not possible right now because the ethereum-remote-client extension
  # uses chrome.braveWallet, so the API is intentionally not being renamed now.
  if (ethereum_remote_client_enabled) {
    sources += [
      "api/brave_wallet_api.cc",
      "api/brave_wallet_api.h",
      "ethereum_remote_client_util.cc",
      "ethereum_remote_client_util.h",
    ]
    configs += [
      ":infura_config",
      ":brave_services_config",
    ]
    deps += [
      "//brave/browser/ethereum_remote_client",
      "//brave/components/brave_wallet/browser",
    ]
  }

  if (ipfs_enabled) {
    sources += [
      "api/ipfs_api.cc",
      "api/ipfs_api.h",
    ]
    deps += [ "//brave/components/ipfs" ]
  }

  if (decentralized_dns_enabled) {
    deps += [ "//brave/components/decentralized_dns" ]
  }

  if (brave_rewards_enabled) {
    sources += [
      "api/brave_rewards_api.cc",
      "api/brave_rewards_api.h",
      "api/rewards_notifications_api.cc",
      "api/rewards_notifications_api.h",
    ]

    deps += [
      "//brave/browser/brave_ads",
      "//brave/components/brave_ads/browser",
      "//brave/components/brave_rewards/browser",
      "//brave/vendor/bat-native-ads:headers",
      "//brave/vendor/bat-native-ledger:headers",
    ]
  }
  if (enable_brave_webtorrent) {
    deps += [ "//brave/components/brave_webtorrent/browser" ]
    sources += [
      "brave_webtorrent_navigation_throttle.cc",
      "brave_webtorrent_navigation_throttle.h",
    ]
  }
  if (enable_brave_wayback_machine) {
    deps += [ "//brave/components/brave_wayback_machine" ]
  }
  if (gemini_enabled) {
    sources += [
      "api/gemini_api.cc",
      "api/gemini_api.h",
    ]
    deps += [
      "//brave/components/gemini/browser",
      "//brave/components/ntp_widget_utils/browser",
    ]
  }

  if (enable_ftx) {
    sources += [
      "api/ftx_api.cc",
      "api/ftx_api.h",
    ]
    deps += [
      "//brave/components/ftx/browser",
      "//brave/components/ftx/common",
      "//brave/components/ntp_widget_utils/browser",
    ]
  }

  if (binance_enabled) {
    sources += [
      "api/binance_api.cc",
      "api/binance_api.h",
    ]

    deps += [
      "//brave/components/binance/browser",
      "//brave/components/ntp_widget_utils/browser",
    ]
  }

  if (brave_together_enabled) {
    sources += [
      "api/brave_together_api.cc",
      "api/brave_together_api.h",
    ]

    deps += [
      "//brave/components/brave_together/browser",
      "//brave/components/ntp_widget_utils/browser",
    ]
  }
  if (crypto_dot_com_enabled) {
    sources += [
      "api/crypto_dot_com_api.cc",
      "api/crypto_dot_com_api.h",
    ]
    deps += [
      "//brave/browser/profiles",
      "//brave/common",
      "//brave/components/crypto_dot_com/browser",
      "//brave/components/crypto_dot_com/common/",
      "//brave/components/ntp_widget_utils/browser",
      "//chrome/browser/extensions",
      "//components/prefs",
      "//extensions/browser",
      "//extensions/common:common_constants",
    ]
  }
}

group("resources") {
  deps = [
    "//brave/components/brave_extension:generated_resources",
    "//brave/components/brave_extension:static_resources",
  ]
  if (brave_rewards_enabled) {
    deps += [
      "//brave/components/brave_rewards/resources/extension:extension_generated_resources",
      "//brave/components/brave_rewards/resources/extension:static_resources",
    ]
  }
  if (enable_brave_webtorrent) {
    deps += [
      "//brave/components/brave_webtorrent:generated_resources",
      "//brave/components/brave_webtorrent:static_resources",
    ]
  }
}

config("brave_services_config") {
  defines = [ "BRAVE_SERVICES_KEY=\"$brave_services_key\"" ]
}

config("infura_config") {
  defines = [ "BRAVE_INFURA_PROJECT_ID=\"$brave_infura_project_id\"" ]
}
