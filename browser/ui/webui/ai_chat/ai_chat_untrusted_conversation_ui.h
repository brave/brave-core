// Copyright (c) 2024 The Brave Authors. All rights reserved.
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this file,
// You can obtain one at https://mozilla.org/MPL/2.0/.

#ifndef BRAVE_BROWSER_UI_WEBUI_AI_CHAT_AI_CHAT_UNTRUSTED_CONVERSATION_UI_H_
#define BRAVE_BROWSER_UI_WEBUI_AI_CHAT_AI_CHAT_UNTRUSTED_CONVERSATION_UI_H_

#include <memory>

#include "brave/components/ai_chat/core/common/mojom/ai_chat.mojom-forward.h"
#include "brave/components/ai_chat/core/common/mojom/untrusted_frame.mojom-forward.h"
#include "content/public/browser/webui_config.h"
#include "ui/webui/mojo_web_ui_controller.h"

// Determines in which context the untrusted conversation UI should be enabled
class AIChatUntrustedConversationUIConfig : public content::WebUIConfig {
 public:
  AIChatUntrustedConversationUIConfig();
  ~AIChatUntrustedConversationUIConfig() override;

  // content::WebUIConfig:
  bool IsWebUIEnabled(content::BrowserContext* browser_context) override;
  std::unique_ptr<content::WebUIController> CreateWebUIController(
      content::WebUI* web_ui,
      const GURL& url) override;
};

// This Untrusted WebUI hosts the UI to display conversation entries, including
// ones generated by an LLM. It should not be granted more permissions than
// required to display the conversation entries. Anything requiring access
// to browser features should be done in the trusted UI.
class AIChatUntrustedConversationUI : public ui::MojoWebUIController {
 public:
  explicit AIChatUntrustedConversationUI(content::WebUI* web_ui);
  AIChatUntrustedConversationUI(const AIChatUntrustedConversationUI&) = delete;
  AIChatUntrustedConversationUI& operator=(
      const AIChatUntrustedConversationUI&) = delete;
  ~AIChatUntrustedConversationUI() override;

  void BindInterface(
      mojo::PendingReceiver<ai_chat::mojom::UntrustedUIHandler> receiver);
  void BindInterface(
      mojo::PendingReceiver<ai_chat::mojom::UntrustedConversationHandler>
          receiver);

 private:
  std::unique_ptr<ai_chat::mojom::UntrustedUIHandler> ui_handler_;

  WEB_UI_CONTROLLER_TYPE_DECL();
};

#endif  // BRAVE_BROWSER_UI_WEBUI_AI_CHAT_AI_CHAT_UNTRUSTED_CONVERSATION_UI_H_
