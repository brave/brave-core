# Copyright (c) 2017 The Brave Authors. All rights reserved.
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this file,
# You can obtain one at https://mozilla.org/MPL/2.0/.

import("//brave/components/brave_webtorrent/browser/buildflags/buildflags.gni")
import("//brave/components/tor/buildflags/buildflags.gni")
import("//build/buildflag_header.gni")
import("//build/config/features.gni")

declare_args() {
  brave_google_api_key = ""
  brave_google_api_endpoint = ""
}

buildflag_header("geolocation") {
  header = "brave_geolocation_buildflags.h"

  flags =
      [ "GOOGLEAPIS_URL=\"$brave_google_api_endpoint$brave_google_api_key\"" ]
}

source_set("browser_tests") {
  testonly = true

  sources = [
    "brave_accept_header_browsertest.cc",
    "brave_network_delegate_browsertest.cc",
    "brave_network_delegate_hsts_fingerprinting_browsertest.cc",
    "brave_service_key_network_delegate_helper_browsertest.cc",
    "brave_site_hacks_network_delegate_helper_browsertest.cc",
    "brave_system_request_handler_browsertest.cc",
    "brave_torrent_redirect_network_delegate_helper_browsertest.cc",
    "global_privacy_control_network_delegate_helper_browsertest.cc",
  ]
  deps = [
    "//brave/components/brave_shields/content/browser",
    "//brave/components/brave_shields/core/common",
    "//brave/components/query_filter",
    "//brave/components/tor/buildflags",
    "//chrome/browser",
    "//chrome/browser:browser_process",
    "//chrome/browser/profiles:profile",
    "//chrome/browser/ui",
    "//components/content_settings/core/browser",
    "//components/content_settings/core/browser:cookie_settings",
    "//components/prefs",
    "//services/network/public/cpp",
  ]
  if (!is_android) {
    deps += [ "//chrome/test:test_support_ui" ]
  }
  if (is_android) {
    deps += [
      "//chrome/test:test_support_ui_android",
      "//net:test_support",
      "//net/traffic_annotation:test_support",
    ]
  }
  if (enable_tor) {
    deps += [ "//brave/components/tor" ]
  }
  defines = [ "HAS_OUT_OF_PROC_TEST_RUNNER" ]
}

source_set("unit_tests") {
  testonly = true

  sources = [
    "brave_ad_block_tp_network_delegate_helper_unittest.cc",
    "brave_block_safebrowsing_urls_unittest.cc",
    "brave_common_static_redirect_network_delegate_helper_unittest.cc",
    "brave_network_delegate_base_unittest.cc",
    "brave_site_hacks_network_delegate_helper_unittest.cc",
    "brave_static_redirect_network_delegate_helper_unittest.cc",
    "brave_system_request_handler_unittest.cc",
    "search_ads_header_network_delegate_helper_unittest.cc",
  ]

  deps = [
    "//brave/browser/net:geolocation",
    "//brave/components/brave_ads/browser",
    "//brave/components/brave_ads/browser:test_support",
    "//brave/components/brave_ads/core",
    "//brave/components/brave_component_updater/browser",
    "//brave/components/brave_rewards/common",
    "//brave/components/brave_rewards/common:features",
    "//brave/components/brave_shields/content/browser",
    "//brave/components/brave_shields/content/test:test_support",
    "//brave/components/l10n/common:test_support",
    "//chrome/test:test_support",
    "//content/test:test_support",
    "//net",
    "//net:test_support",
    "//services/network:network_service",
    "//testing/gmock",
    "//testing/gtest",
    "//third_party/abseil-cpp:absl",
  ]

  if (enable_brave_webtorrent) {
    sources += [
      "//brave/browser/extensions/brave_webtorrent_navigation_throttle_unittest.cc",
      "//brave/browser/net/brave_torrent_redirect_network_delegate_helper_unittest.cc",
    ]

    deps += [
      "//brave/browser/extensions",
      "//brave/components/brave_referrals/browser",
    ]
  }
}
