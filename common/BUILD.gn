import("//build/util/branding.gni")

source_set("channel_info") {
  if (is_linux) {
    sources = [
      "brave_channel_info_posix.cc",
      "brave_channel_info_posix.h",
    ]

    configs += [
      "//brave/build/linux:linux_channel_names",
    ]
  }
}

source_set("common") {
  sources = [
    "brave_paths.cc",
    "brave_paths.h",
    "brave_switches.cc",
    "brave_switches.h",
    "common_message_generator.cc",
    "common_message_generator.h",
    "extensions/brave_extensions_api_provider.cc",
    "extensions/brave_extensions_api_provider.h",
    "extensions/extension_constants.cc",
    "extensions/extension_constants.h",
    "extensions/manifest_handlers/pdfjs_manifest_override.cc",
    "extensions/manifest_handlers/pdfjs_manifest_override.h",
    "importer/brave_importer_utils.cc",
    "importer/brave_importer_utils.h",
    "importer/brave_stats.h",
    "importer/chrome_importer_utils.cc",
    "importer/chrome_importer_utils.h",
    "network_constants.cc",
    "network_constants.h",
    "pref_names.cc",
    "pref_names.h",
    "resource_bundle_helper.cc",
    "resource_bundle_helper.h",
    "shield_exceptions.cc",
    "shield_exceptions.h",
    "url_constants.cc",
    "url_constants.h",
    "webui_url_constants.cc",
    "webui_url_constants.h",
  ]

  deps = [
    "//brave/chromium_src:common",
  ]

  public_deps = [
    "extensions/api",
  ]

  if (is_mac) {
    sources += [
      "importer/brave_importer_utils_mac.mm",
      "importer/chrome_importer_utils_mac.mm",
    ]
  }

  if (is_linux) {
    sources += [
      "importer/brave_importer_utils_linux.cc",
      "importer/chrome_importer_utils_linux.cc",
    ]
  }

  if (is_win) {
    sources += [
      "importer/brave_importer_utils_win.cc",
      "importer/chrome_importer_utils_win.cc",
    ]
  }
}

config("constants_configs") {
  defines = []
  if (is_mac) {
    defines += [
      "BRAVE_PRODUCT_STRING=\"$chrome_product_full_name\"",
    ]
  }
}
