// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.

[
  {
    "namespace": "braveRewards",
    "description": "Use the <code>chrome.braveRewards</code> API for rewards panel.",
    "compiler_options": {
      "implemented_in": "brave/browser/extensions/api/brave_rewards_api.h"
    },
    "events": [
      {
        "name": "initialized",
        "type": "function",
        "description": "Fired when wallet is initialized",
        "parameters": [{
            "name": "result",
            "type": "integer"
          }
        ]
      },
      {
        "name": "onRewardsWalletCreated",
        "type": "function",
        "description": "Called when the user's Rewards wallet has been created",
        "parameters": []
      },
      {
        "name": "onPublisherData",
        "type": "function",
        "description": "Fired when we get publisher data from the DB",
        "parameters": [
          {
            "name": "windowId",
            "type": "integer"
          },
          {
            "name": "publisher",
            "type": "object",
            "properties": {
              "percentage": {
                "type": "integer",
                "description": "publisher attention score"
              },
              "excluded": {
                "type": "boolean",
                "description": "is site excluded from auto contribute"
              },
              "provider": {
                "type": "string",
                "description": "provider (if media publisher) for this publisher"
              },
              "favIconUrl": {
                "type": "string",
                "description": "publisher image url"
              },
              "publisherKey": {
                "type": "string",
                "description": "publisher key, unique identifier"
              },
              "name": {
                "type": "string",
                "description": "publisher name"
              },
              "url": {
                "type": "string",
                "description": "url of the current tab"
              },
              "status": {
                "type": "integer",
                "description": "publisher status"
              }
            }
          }
        ]
      },
      {
        "name": "onPublisherListNormalized",
        "type": "function",
        "description": "Fired when publisher list was updated and normalized",
        "parameters": [
          {
            "name": "publishers",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "publisherKey": {
                  "type": "string",
                  "description": "publisher key, unique identifier"
                },
                "percentage": {
                  "type": "integer",
                  "description": "publisher attention score"
                },
                "status": {
                  "type": "integer",
                  "description": "publisher status"
                }
              }
            }
          }
        ]
      },
      {
        "name": "onExcludedSitesChanged",
        "type": "function",
        "description": "Fired when grant process is finished",
        "parameters": [
          {
            "name": "properties",
            "type": "object",
            "properties": {
              "publisherKey": {
                "type": "string",
                "description": "publisher key, unique identifier"
              },
              "excluded": {
                "type": "boolean",
                "description": "indicate if publisher is excluded or not"
              }
            }
          }
        ]
      },
      {
        "name": "onRecurringTipSaved",
        "type": "function",
        "description": "Fired when publisher recurring tip is saved",
        "parameters": [
          {
            "name": "success",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "onRecurringTipRemoved",
        "type": "function",
        "description": "Fired when publisher recurring tip is removed",
        "parameters": [
          {
            "name": "success",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "onReconcileComplete",
        "type": "function",
        "description": "Fired when reconcile is complete",
        "parameters": [
          {
            "name": "properties",
            "type": "object",
            "properties": {
              "result": {
                "type": "integer",
                "description": "result for this contribution"
              },
              "type": {
                "type": "integer",
                "description": "type of this contribution"
              }
            }
          }
        ]
      },
      {
        "name": "onSelfCustodyInviteDismissed",
        "type": "function",
        "description": "Fired when the self-custody invitation has been dismissed.",
        "parameters": []
      },
      {
        "name": "onTermsOfServiceUpdateAccepted",
        "type": "function",
        "description": "Fired when the user has agreed to an updated Terms of Service",
        "parameters": []
      },
      {
        "name": "onExternalWalletConnected",
        "type": "function",
        "description": "Fired when an external wallet is connected",
        "parameters": []
      },
      {
        "name": "onExternalWalletLoggedOut",
        "type": "function",
        "description": "Fired when an external wallet is logged out",
        "parameters": []
      },
      {
        "name": "onExternalWalletDisconnected",
        "type": "function",
        "description": "Fired when an external wallet is disconnected",
        "parameters": []
      },
      {
        "name": "onCompleteReset",
        "type": "function",
        "description": "Fired when rewards was reset",
        "parameters": [
          {
            "name": "properties",
            "type": "object",
            "properties": {
              "success": {
                "type": "boolean",
                "description": "was reset successful"
              }
            }
          }
        ]
      }
    ],
    "functions": [
      {
        "name": "isSupported",
        "type": "function",
        "description": "Fetches whether or not Brave Rewards is supported",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "supported",
              "type": "boolean"
            }
          ]
        },
        "does_not_support_promises": "Requires refactoring"
      },
      {
        "name": "recordNTPPanelTrigger",
        "type": "function",
        "description": "Records an NTP Rewards card 'Start using Brave Rewards' click.",
        "parameters": []
      },
      {
        "name": "openRewardsPanel",
        "type": "function",
        "description": "Opens the Rewards panel in the active window.",
        "parameters": []
      },
      {
        "name": "getPublisherInfo",
        "type": "function",
        "description": "Get the details for a particular publisher",
        "parameters": [
          {
            "name": "publisherKey",
            "type": "string"
          }
        ],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "result",
              "type": "integer"
            },
            {
              "name": "properties",
              "type": "object",
              "optional": true,
              "properties": {
                "publisherKey": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "percentage": {
                  "type": "number"
                },
                "status": {
                  "type": "number"
                },
                "excluded": {
                  "type": "boolean"
                },
                "url": {
                  "type": "string"
                },
                "provider": {
                  "type": "string"
                },
                "favIconUrl": {
                  "type": "string"
                }
              }
            }
          ],
          "does_not_support_promises": "Multi-parameter callback"
        }
      },
      {
        "name": "getPublisherInfoForTab",
        "type": "function",
        "description": "Returns publisher information for the specified tab",
        "parameters": [
          {
            "name": "tabId",
            "type": "integer"
          }
        ],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "publisher",
              "type": "object",
              "optional": true,
              "properties": {
                "percentage": {
                  "type": "integer",
                  "description": "publisher attention score"
                },
                "excluded": {
                  "type": "boolean",
                  "description": "is site excluded from auto contribute"
                },
                "provider": {
                  "type": "string",
                  "description": "provider (if media publisher) for this publisher"
                },
                "favIconUrl": {
                  "type": "string",
                  "description": "publisher image url"
                },
                "publisherKey": {
                  "type": "string",
                  "description": "publisher key, unique identifier"
                },
                "name": {
                  "type": "string",
                  "description": "publisher name"
                },
                "url": {
                  "type": "string",
                  "description": "url of the current tab"
                },
                "status": {
                  "type": "integer",
                  "description": "publisher status"
                }
              }
            }
          ]
        },
        "does_not_support_promises": "Requires refactoring"
      },
      {
        "name": "tipSite",
        "type": "function",
        "description": "Allow the user to perform a tip to a tab's site",
        "parameters": [
          {
            "name": "tabID",
            "type": "integer"
          },
          {
            "name": "publisherKey",
            "type": "string"
          },
          {
            "name": "entryPoint",
            "type": "string"
          }
        ]
      },
      {
        "name": "getRewardsParameters",
        "type": "function",
        "description": "Get default Rewards parameters",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "properties",
              "type": "object",
              "properties": {
                "rate": {
                  "type": "number",
                  "description": "conversion rate for BAT"
                },
                "monthlyTipChoices": {
                  "type": "array",
                  "description": "default tip choices for monthly tips",
                  "items": {
                    "type": "number",
                    "minimum": 0
                  }
                },
                "autoContributeChoices": {
                  "type": "array",
                  "description": "A list of auto-contribute amount options",
                  "items": {
                    "type": "number",
                    "minimum": 0
                  }
                },
                "payoutStatus": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "walletProviderRegions": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "any"
                  }
                },
                "vbatDeadline": {
                  "type": "number",
                  "optional": true
                },
                "vbatExpired": {
                  "type": "boolean"
                }
              }
            }
          ]
        },
        "does_not_support_promises": "Requires refactoring"
      },
      {
        "name": "createRewardsWallet",
        "type": "function",
        "description": "Creates a Rewards wallet for the current profile",
        "parameters": [
          {
            "type": "string",
            "name": "country"
          }
        ],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "type": "string",
              "name": "result"
            }
          ]
        },
        "does_not_support_promises": "Requires refactoring"
      },
      {
        "name": "getAvailableCountries",
        "type": "function",
        "description": "",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "countries",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        "does_not_support_promises": "Requires refactoring"
      },
      {
        "name": "getDefaultCountry",
        "type": "function",
        "description": "",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "defaultCountry",
              "type": "string"
            }
          ]
        },
        "does_not_support_promises": "Requires refactoring"
      },
      {
        "name": "getDeclaredCountry",
        "type": "function",
        "description": "",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "country",
              "type": "string"
            }
          ]
        },
        "does_not_support_promises": "Requires refactoring"
      },
      {
        "name": "getUserType",
        "type": "function",
        "description": "Returns the Rewards user type for the current user",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "userType",
              "type": "string"
            }
          ]
        },
        "does_not_support_promises": "Requires refactoring"
      },
      {
        "name": "getPublishersVisitedCount",
        "type": "function",
        "description": "Returns the number of publisher sites that a user has visited",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "count",
              "type": "number"
            }
          ]
        },
        "does_not_support_promises": "Requires refactoring"
      },
      {
        "name": "getBalanceReport",
        "type": "function",
        "description": "Get current month wallet report",
        "parameters": [
          {
            "name": "month",
            "type": "number"
          },
          {
            "name": "year",
            "type": "number"
          }
        ],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "properties",
              "type": "object",
              "properties": {
                "ads": {
                  "type": "number"
                },
                "contribute": {
                  "type": "number"
                },
                "monthly": {
                  "type": "number"
                },
                "tips": {
                  "type": "number"
                }
              }
            }
          ]
        },
        "does_not_support_promises": "Requires refactoring"
      },
      {
        "name": "includeInAutoContribution",
        "type": "function",
        "description": "Toggles auto-contribution for rewards panel",
        "parameters": [
          {
            "name": "publisher_key",
            "type": "string"
          },
          {
            "name": "exclude",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "getRewardsEnabled",
        "type": "function",
        "description": "Gets a value indicating whether the user has opted-in to Rewards",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "enabled",
              "type": "boolean"
            }
          ]
        },
        "does_not_support_promises": "Requires refactoring"
      },
      {
        "name": "getACEnabled",
        "type": "function",
        "description": "Gets whether auto contribute is enabled",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "enabled",
              "type": "boolean"
            }
          ]
        },
        "does_not_support_promises": "Requires refactoring"
      },
      {
        "name": "setAutoContributeEnabled",
        "type": "function",
        "description": "Updates ac enabled state",
        "parameters": [
          {
            "name": "enabled",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "saveRecurringTip",
        "type": "function",
        "description": "Updates recurring tip amount for rewards panel",
        "parameters": [
          {
            "name": "publisher_key",
            "type": "string"
          },
          {
            "name": "new_amount",
            "type": "number"
          }
        ]
      },
      {
        "name": "removeRecurringTip",
        "type": "function",
        "description": "Removes recurring tip for rewards panel",
        "parameters": [
          {
            "name": "publisher_key",
            "type": "string"
          }
        ]
      },
      {
        "name": "getRecurringTips",
        "type": "function",
        "description": "Gets list of sites with recurring tip data",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "tips",
              "type": "any"
            }
          ]
        },
        "does_not_support_promises": "Requires refactoring"
      },
      {
        "name": "refreshPublisher",
        "type": "function",
        "description": "Refreshes individual publisher status",
        "parameters": [
          {
            "name": "publisherKey",
            "type": "string"
          }
        ],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "status",
              "type": "integer"
            },
            {
              "name": "publisherKey",
              "type": "string"
            }
          ],
          "does_not_support_promises": "Multi-parameter callback"
        }
      },
      {
        "name": "getAllNotifications",
        "type": "function",
        "description": "Gets all notifications",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "list",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "notification id"
                  },
                  "type": {
                    "type": "integer",
                    "description": "notification type"
                  },
                  "timestamp": {
                    "type": "number",
                    "description": "timestamp when notification was created"
                  },
                  "args": {
                    "type": "array",
                    "description": "notification arguments, additional data",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          ]
        },
        "does_not_support_promises": "Requires refactoring"
      },
      {
        "name": "fetchBalance",
        "type": "function",
        "description": "Fetch balance",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "balance",
              "type": "number",
              "optional": true
            }
          ]
        },
        "does_not_support_promises": "Requires refactoring"
      },
      {
        "name": "getExternalWalletProviders",
        "type": "function",
        "description": "Returns the supported external wallet providers for the current profile",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "providers",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        "does_not_support_promises": "Requires refactoring"
      },
      {
        "name": "getExternalWallet",
        "type": "function",
        "description": "Get external wallet for provided wallet type",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "wallet",
              "type": "object",
              "optional": true,
              "properties": {
                "type": {
                  "type": "string"
                },
                "address": {
                  "type": "any"
                },
                "status": {
                  "type": "any"
                },
                "userName": {
                  "type": "any"
                },
                "accountUrl": {
                  "type": "any"
                },
                "activityUrl": {
                  "type": "string"
                }
              }
            }
          ]
        },
        "does_not_support_promises": "Requires refactoring"
      },
      {
        "name": "getAdsAccountStatement",
        "type": "function",
        "description": "Get ads account statement",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "success",
              "type": "boolean"
            },
            {
              "name": "adsAccountStatement",
              "type": "object",
              "optional": true,
              "properties": {
                "nextPaymentDate": {
                  "type": "number"
                },
                "adsReceivedThisMonth": {
                  "type": "integer"
                },
                "minEarningsThisMonth": {
                  "type": "number"
                },
                "maxEarningsThisMonth": {
                  "type": "number"
                },
                "minEarningsLastMonth": {
                  "type": "number"
                },
                "maxEarningsLastMonth": {
                  "type": "number"
                }
              }
            }
          ],
          "does_not_support_promises": "Multi-parameter callback"
        }
      },
      {
        "name": "isInitialized",
        "type": "function",
        "description": "Is rewards engine initialized",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "initialized",
              "type": "boolean"
            }
          ]
        },
        "does_not_support_promises": "Requires refactoring"
      },
      {
        "name": "selfCustodyInviteDismissed",
        "type": "function",
        "description": "Returns a value indicating whether the self-custody invitation has been dismissed.",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "dismissed",
              "type": "boolean"
            }
          ]
        },
        "does_not_support_promises": "Requires refactoring"
      },
      {
        "name": "dismissSelfCustodyInvite",
        "type": "function",
        "description": "Dismisses the self-custody invitation.",
        "parameters": []
      },
      {
        "name": "isTermsOfServiceUpdateRequired",
        "type": "function",
        "description": "Returns a value indicating whether a Terms of Service update is required for the user.",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "updateRequired",
              "type": "boolean"
            }
          ]
        },
        "does_not_support_promises": "Requires refactoring"
      },
      {
        "name": "acceptTermsOfServiceUpdate",
        "type": "function",
        "description": "Sets the user's current Terms of Service version to the latest specified by the sever.",
        "parameters": []
      },
      {
        "name": "getScheduledCaptchaInfo",
        "type": "function",
        "description": "Gets all info required to retrieve a scheduled captcha (if any) for the user.",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "result",
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                },
                "maxAttemptsExceeded": {
                  "type": "boolean"
                }
              }
            }
          ]
        },
        "does_not_support_promises": "Requires refactoring"
      },
      {
        "name": "updateScheduledCaptchaResult",
        "type": "function",
        "description": "Updates the scheduled captcha result and associated metadata",
        "parameters": [
          {
            "name": "result",
            "type": "boolean"
          }
        ]
      },
      {
        "name": "getPrefs",
        "type": "function",
        "description": "Gets rewards preferences for the current profile",
        "parameters": [],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "type": "object",
              "name": "prefs",
              "properties": {
                "autoContributeEnabled": {
                  "type": "boolean"
                },
                "autoContributeAmount": {
                  "type": "number"
                }
              }
            }
          ]
        },
        "does_not_support_promises": "Requires refactoring"
      }
    ]
  }
]
