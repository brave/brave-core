# Copyright 2020 The Brave Authors. All rights reserved.
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this file,
# You can obtain one at http://mozilla.org/MPL/2.0/. */

import("//build/config/clang/clang.gni")
import("//build/config/compiler/compiler.gni")
import("//build/config/ios/config.gni")
import("//build/config/rust.gni")
import("//build/config/sysroot.gni")

declare_args() {
  rustup_path = rebase_path("//brave/build/rustup")
  cargo_profile = ""
}

if (cargo_profile == "") {
  if (is_official_build) {
    cargo_profile = "release"
  } else {
    cargo_profile = "dev"
  }
}

unexport_list_path = "$root_build_dir/brave_rust/rust_lib.unexports"

rustc_target = ""
rustc_toolchain = ""
cargo_lib_prefix = ""
cargo_lib_suffix = ""

default_rustflags = [ "-Coverflow-checks=on" ]

if (use_lld) {
  default_rustflags += [
    "-C",
    "link-arg=-fuse-ld=lld",
  ]

  if (!is_win) {
    default_rustflags += [
      "-C",
      "link-arg=-B" + rebase_path("$clang_base_path/bin"),
    ]
  }
}

# https://bugzilla.mozilla.org/show_bug.cgi?id=1188030#c14
# Supposedly this bug was fixed, but it's still happening for us.
too_many_personality_profiles_workaround = is_apple && use_lld && !is_component_build

enable_rust_lto = too_many_personality_profiles_workaround

if (enable_rust_lto) {
  default_rustflags += [ "-Cembed-bitcode=yes" ]
  default_rustflags += [ "-Clto" ]
}

if (is_debug) {
  if (too_many_personality_profiles_workaround) {
    # must always be optimized for too_many_personality_profiles_workaround to work
    default_rustflags += [ "-Copt-level=1" ]
  } else {
    default_rustflags += [ "-Copt-level=0" ]
  }
} else if (optimize_for_size) {
  default_rustflags += [ "-Copt-level=s" ]
} else {
  default_rustflags += [ "-Copt-level=3" ]
}

if (symbol_level == 1) {
  default_rustflags += [ "-Cdebuginfo=1" ]
} else if (symbol_level == 2) {
  default_rustflags += [ "-g" ]
}

# get links flags for rust lib
# rustflags += [ "--print=native-static-libs" ]

# See https://forge.rust-lang.org/release/platform-support.html for possible targets
if (is_win) {
  if (current_cpu == "x86") {
    default_rustflags += [ "--codegen target-feature=+crt-static" ]
    rustc_target = "i686-pc-windows-msvc"
  } else if (current_cpu == "x64") {
    rustc_target = "x86_64-pc-windows-msvc"
  }
} else if (is_mac) {
  if (current_cpu == "x64") {
    rustc_target = "x86_64-apple-darwin"
  } else if (current_cpu == "arm64") {
    rustc_target = "aarch64-apple-darwin"
  }
} else if (is_linux) {
  if (current_cpu == "x64") {
    rustc_target = "x86_64-unknown-linux-gnu"
    if (use_sysroot) {
      default_rustflags += [ "-C link-arg=--sysroot=$target_sysroot" ]
      default_rustflags += [ "-C link-arg=-Wl,-rpath=\$ORIGIN" ]
    }
  }
} else if (is_android) {
  if (current_cpu == "arm") {
    rustc_target = "arm-linux-androideabi"
    rustc_toolchain = "arm"
  } else if (current_cpu == "arm64") {
    rustc_target = "aarch64-linux-android"
    rustc_toolchain = "arm64"
  } else if (current_cpu == "x86") {
    rustc_target = "i686-linux-android"
    rustc_toolchain = "x86"
  } else if (current_cpu == "x64") {
    rustc_target = "x86_64-linux-android"
    rustc_toolchain = "x86_64"
  }
} else if (is_ios) {
  if (current_cpu == "arm64") {
    if (target_environment == "simulator") {
      rustc_target = "aarch64-apple-ios-sim"
    } else {
      rustc_target = "aarch64-apple-ios"
    }
  } else if (current_cpu == "x64") {
    rustc_target = "x86_64-apple-ios"
  }
}

# The rustc target to use when you explcitly want to build and run an executable
# on the host OS
rustc_exe_target = rustc_target

if (is_ios) {
  if (host_cpu == "x64") {
    rustc_exe_target = "x86_64-apple-darwin"
  } else if (host_cpu == "arm64") {
    rustc_exe_target = "aarch64-apple-darwin"
  }
}

cargo_lib_prefix = ""

if (rustc_target != "") {
  cargo_lib_prefix += rustc_target
}

if (cargo_profile == "dev") {
  # for some strange reason dev profile output goes in a directory called debug
  cargo_lib_prefix += "/debug"
} else {
  cargo_lib_prefix += "/$cargo_profile"
}

cargo_lib_suffix = ""
if (is_win) {
  cargo_lib_prefix += "/"
  cargo_lib_suffix = ".lib"
} else {
  cargo_lib_prefix += "/lib"
  cargo_lib_suffix = ".a"
}
