declare_args() {
  mac_unsigned_output_prefix = "unsigned"
  mac_signed_output_prefix = "signed"
  mac_signing_output_prefix = "signing"
  mac_notarized_output_prefix = "notarized"

  # find with `security find-identity -v -p codesigning`
  mac_signing_identifier = ""
  mac_installer_signing_identifier = ""
  mac_signing_keychain = "login"
  notary_user = ""
  notary_password = ""
  notarize = false
  is_universal_binary = false
}

keychain_db = getenv("HOME") + "/Library/Keychains/${mac_signing_keychain}.keychain-db"

unsigned_app_path = "$root_out_dir/$brave_exe"
unsigned_dmg_path = "$root_out_dir/$mac_unsigned_output_prefix/$brave_dmg"
unsigned_pkg_path = "$root_out_dir/$mac_unsigned_output_prefix/$brave_pkg"

if (is_release_channel) {
  signed_app_path = "$root_out_dir/$mac_signing_output_prefix/stable/$brave_exe"
} else {
  signed_app_path = "$root_out_dir/$mac_signing_output_prefix/$brave_channel/$brave_exe"
}

signed_dmg_path = "$root_out_dir/$mac_signed_output_prefix/$brave_dmg"
signed_pkg_path = "$root_out_dir/$mac_signed_output_prefix/$brave_pkg"

if (skip_signing) {
  app_path = unsigned_app_path
} else {
  app_path = signed_app_path
}

notarized_dmg_path = "$root_out_dir/$mac_notarized_output_prefix/$brave_dmg"
notarized_pkg_path = "$root_out_dir/$mac_notarized_output_prefix/$brave_pkg"

brave_packaging_base_dir = root_out_dir
if (is_universal_binary) {
  brave_packaging_base_dir = "$root_out_dir/universal"
  unsigned_app_path = "$brave_packaging_base_dir/$brave_exe"
}

packaging_dir = "$brave_packaging_base_dir/" + string_replace("$chrome_product_full_name Packaging", " ", "_")
